{"version":3,"sources":["components/Sidebar.js","components/elements/DigestCard.js","reduxStore/reducer.js","reduxStore/store.js","components/DigestList.js","reduxStore/action.js","components/DigestEditor.js","components/LoginForm.js","components/elements/QuestionCollectionCard.js","components/QuestionCollectionList.js","components/elements/QuestionLayout.js","components/QuestionCollectionDetail.js","components/QuestionCollectionCreate.js","components/ImageStorageComponent.js","components/elements/CourseCard.js","components/CourseList.js","components/CourseEditor.js","components/SubModuleView.js","components/mentors/MentorCard.js","components/mentors/MentorsList.js","components/mentors/MentorEditor.js","components/whatsNew/WhatsNewCard.js","components/whatsNew/WhatsNewList.js","components/whatsNew/WhatsNewEditor.js","components/admin/AddAdmin.js","components/admin/AdminList.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","toggle","setState","isOpen","state","isLoggedIn","undefined","Nav","className","navbar","NavItem","style","color","to","bind","Navbar","light","expand","NavbarBrand","NavbarToggler","onClick","this","Collapse","React","Component","DigestCard","Card","CardBody","CardTitle","data","title","CardSubtitle","digestType","CardText","dangerouslySetInnerHTML","__html","news","pathname","digest","isEdit","Button","reducer","apiUrl","storageUrl","action","type","auth","payload","store","createStore","applyMiddleware","thunk","DigestList","componentDidMount","getDigests","renderError","apiError","Alert","renderSpinner","isLoading","Spinner","a","getState","axios","get","headers","then","res","status","digests","message","checkLogin","c","map","Col","lg","key","_id","Row","marginLeft","Container","margin","connect","dispatch","getAuth","DigestEditor","zIndex","position","top","left","bottom","right","height","width","redirectToDigests","success","submitDigest","digestImage","image","location","put","post","handleChange","event","target","name","value","handleSubmit","isSubmitting","formData","FormData","removeImageId","append","imageId","delete","handleDelete","catch","err","console","log","handleFile","files","reader","FileReader","onload","e","result","readAsDataURL","uploadImage","removeImage","renderImagePart","CardImg","maxWidth","objectFit","marginRight","src","FormGroup","row","Label","for","Input","id","onChange","populateFields","editor","ClassicEditor","learnings","onInit","getData","onBlur","onFocus","laws","ratio","features","dialogue","onTagChange","tags","checked","renderTags","textAlign","whatsNew","other","context","Form","sm","rows","description","LoginForm","redirect","isLogin","saveAuth","renderForm","placeholder","questionCollectionCard","questionCollectionId","QuestionCollectionList","getQuestionCollections","questionCollections","collections","questionCollection","QuestionCollectionCard","QuestionLayout","renderExplanation","question","index","explanation","handleChangeFunction","renderImage","imageData","maxHeight","alt","questions","questionNumber","textAlignVertical","options","handleOptionChange","answer","getQuestionCollection","collectionName","collection","questionData","redirectToQuestions","renderDirection","direction","handleQuestionDataChange","renderLegalPrinciple","legalPrinciple","deleteCollection","handleCollectionDataChange","handleSubQuestionsDataChange","subQuestionIndex","handleSubQuestionOptionChange","optionIndex","updateQuestion","questionId","questionIndex","updateCollection","collectionId","renderQuestionSelector","renderSelectedQuestion","questionType","section","topic","sourceExam","difficultyLevel","Time","category","time","numberOfQuestions","maxMarks","QuestionCollectionCreate","redirectToQuestion","file","ImageStorageComponent","copyId","text","navigator","clipboard","writeText","error","renderImageUpload","fontWeight","CourseCard","course","CourseList","getCourses","courses","CourseEditor","subSectionUpdate","sections","modules","module","subModuleId","subModules","subModule","subSections","coach","coaches","mentor","numberOfSubSections","Object","keys","length","allCoaches","newCoach","newCoachId","redirectToCourses","cancelSubSectionSubmission","newSubSection","sectionalQuestions","splice","previousYearQuestions","handoutIds","subSectionForm","setCourseName","submitSubSection","courseId","sectionalTests","changed","sectionIndex","moduleIndex","push","videoURLs","addSection","newSection","addModule","newModule","deleteSection","flag","m","alert","selectedSection","deleteModule","deleteSubSection","subSectionIndex","subSectionId","emptySubSection","renderSubSectionViewButton","i","j","renderSectionSelector","renderCoaches","coachid","designation","renderCoachOptions","renderSubSections","subSection","renderModules","renderModuleQuestions","renderSections","marginTop","marginBottom","renderSectionalQuestions","renderPreviousYearQuestions","renderHandouts","handout","renderVideos","video","url","available","questionCollectionType","fileId","newVideo","newVideoDescription","duration","price","filter","SubModuleView","response","pdf","pdfView","Style","newSubModule","MentorCard","MentorsList","mentors","d","MentorEditor","redirectToMentors","renderDeleteButton","WhatsNewCard","body","WhatsNewList","whatsNews","WhatsNewEditor","whatsNewObject","AddAdmin","renderApiResponse","apiResponse","adminObject","email","privilege","AdminList","admins","admin","uid","phone","changedPrivilege","privileges","administrators","Table","App","renderNav","exact","path","render","QuestionCollectionDetail","withRouter","Boolean","window","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"oSAyEeA,E,kDA3Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,OAAS,WACP,EAAKC,SAAS,CAAEC,QAAS,EAAKC,MAAMD,UAVnB,EAanBE,WAAa,WACX,QAA8BC,IAA1B,EAAKN,MAAMK,aAAsD,IAA1B,EAAKL,MAAMK,WACpD,OACE,kBAACE,EAAA,EAAD,CAAKC,UAAU,UAAUC,QAAM,GAC7B,kBAACC,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASC,GAAG,UAAjC,YAhBN,EAAKT,MAAQ,CACXD,QAAQ,GAEV,EAAKF,OAAS,EAAKA,OAAOa,KAAZ,gBACd,EAAKT,WAAa,EAAKA,WAAWS,KAAhB,gBAND,E,qDAyBjB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQH,MAAM,QAAQI,OAAK,EAACC,OAAO,MACjC,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CAAeC,QAASC,KAAKpB,SAC7B,kBAACqB,EAAA,EAAD,CAAUnB,OAAQkB,KAAKjB,MAAMD,OAAQM,QAAM,GACzC,kBAACF,EAAA,EAAD,CAAKC,UAAU,UAAUC,QAAM,GAC7B,kBAACC,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,WAAjD,WAEA,kBAACH,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,WAAjD,YAEA,kBAACH,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,aAAjD,cAEA,kBAACH,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,WAAjD,YAEA,kBAACH,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,aAAjD,cAEA,kBAACH,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASJ,UAAU,MAAMK,GAAG,UAAjD,YAGDQ,KAAKhB,oB,GArDIkB,IAAMC,W,2HCmBbC,E,uKAtBP,OACI,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYP,KAAKrB,MAAM6B,KAAKC,OAC5B,kBAACC,EAAA,EAAD,KAAeV,KAAKrB,MAAM6B,KAAKG,YAC/B,kBAACC,EAAA,EAAD,CAAUC,wBAAyB,CAACC,OAAQd,KAAKrB,MAAM6B,KAAKO,QAC5D,kBAAC,IAAD,CAAMvB,GAAI,CACNwB,SAAS,cACTjC,MAAO,CAACkC,OAAOjB,KAAKrB,MAAM6B,KAAMU,QAAQ,KAE5C,kBAACC,EAAA,EAAD,qB,GAfOjB,IAAMC,W,oCCafiB,EAlBA,WAQD,IARErC,EAQH,uDARW,CACvBsC,OAAQ,2BACRC,WAAY,gCAMXC,EAAW,uCACV,OAAQA,EAAOC,MACb,IAAK,gBACiB,OADAzC,EAAM0C,KAAOF,EAAOG,QACb,2BAAI3C,GAAX,IAAkB0C,KAAMF,EAAOG,UACrD,IAAK,eACL,IAAK,YACL,IAAK,gBACL,QAAS,OAAO3C,I,gBCLP4C,EALDC,YACVR,EACAS,YAAgBC,MCgBdC,E,kDAEF,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IAYVqD,kBAAoB,WAChB,EAAKC,cAdU,EAgBnBC,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WAnB3B,EAwBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA3BR,EAgCnB0C,WAhCmB,sBAgCN,sBAAAO,EAAA,8DACqBvD,IAA1B0C,EAAMc,WAAWhB,KADZ,gCAECiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,UAAW,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACjGA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEmE,QAASF,EAAItC,KAAKwC,UAClC,EAAKnE,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,QAT9B,2CAhCM,EAgDnBY,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAtDR,EAAKT,MAAQ,CACTiE,QAAS,GACTb,SAAU,GACVG,WAAW,GAEf,EAAKL,WAAa,EAAKA,WAAWxC,KAAhB,gBAClB,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBAVN,E,qDAgEf,IAAI0D,EAWJ,OAV0B,MAAtBnD,KAAKjB,MAAMiE,cAA0C/D,IAAvBe,KAAKjB,MAAMiE,UACzCG,EAAInD,KAAKjB,MAAMiE,QAAQI,KAAI,SAACnC,GACxB,OACI,kBAACoC,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKtC,EAAOuC,KACpB,kBAAE,EAAF,CAAahD,KAAMS,SAO/B,6BACI,kBAACwC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,cACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,uBAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,WACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVgE,GAEJnD,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,qB,GA/FGnC,IAAMC,WAsGhB0D,eAnHS,SAAC9E,GACrB,MAAO,CACH0C,KAAM1C,MAIa,SAAC+E,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECVZ,CACHtC,KAAM,qBDoHCqC,CAA6C9B,G,0FEgc7CiC,G,kDAnjBX,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAsEVuD,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WA1E5C,EA+EnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAASjD,MAAO,CACZ2E,OAAQ,IAAKL,OAAQ,OAAQM,SAAU,WAAYC,IAAK,QAASC,KAAM,QACvEC,OAAQ,QAASC,MAAO,OAAQC,OAAQ,OAAQC,MAAO,QACxDjF,MAAM,aArFF,EA0FnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAlGO,EAwGnBiF,kBAAoB,WAChB,OAAI,EAAK1F,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,YAKb,6BAhHO,EAqHnBmF,aAAe,WACX,EAAK9F,SAAS,CAAE+F,YAAa,GAAIC,MAAO,KAAM,WACT,MAA7B,EAAKlG,MAAMI,MAAM+F,UAAoB,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAAMmC,YACvCjC,IAA1B0C,EAAMc,WAAWhB,MACjBiB,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAMkC,OAAOuC,IAAK,EAAKzE,MAAO,CAAE6D,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACrJA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,IAGzB,EAAK7F,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,YAMrCrD,IAA1B0C,EAAMc,WAAWhB,MACjBiB,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,UAAW,EAAKtC,MAAO,CAAE6D,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACxGA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,IAGzB,EAAK7F,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,WA1I5D,EAkJnB2C,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAnJnC,EAsJnBC,aAtJmB,uCAsJJ,WAAOJ,GAAP,eAAA1C,EAAA,yDACX,EAAK3D,SAAS,CAAEyD,WAAW,EAAMiD,cAAc,IAC3CC,EAAW,IAAIC,SACc,OAA7B,EAAK1G,MAAM2G,oBAAuDzG,IAA7B,EAAKF,MAAM2G,eAA4D,KAA7B,EAAK3G,MAAM2G,cAHnF,oBAIwB,OAA3B,EAAK3G,MAAM6F,kBAAmD3F,IAA3B,EAAKF,MAAM6F,aAAwD,KAA3B,EAAK7F,MAAM6F,YAJnF,uBAKHY,EAASG,OAAO,cAAe,EAAK5G,MAAM6F,aALvC,SAMGlC,IAAMqC,IAAIpD,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM2G,cAAeF,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC3IA,EAAItC,KAAKuC,SACT,EAAKlE,SAAS,CAAE+G,QAAS9C,EAAItC,KAAKoF,UAClC,EAAKjB,mBATV,+CAcGjC,IAAMmD,OAAOlE,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM2G,cAAe,CAAE9C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACpIA,EAAItC,KAAKuC,QACT,EAAK4B,kBAhBV,mCAqByB,OAA3B,EAAK5F,MAAM6F,kBAAmD3F,IAA3B,EAAKF,MAAM6F,aAAwD,KAA3B,EAAK7F,MAAM6F,YArBpF,wBAsBPY,EAASG,OAAO,cAAe,EAAK5G,MAAM6F,aAtBnC,UAuBDlC,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,UAAWkE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAChHA,EAAItC,KAAKuC,SACT,EAAKlE,SAAS,CAAE+G,QAAS9C,EAAItC,KAAKoF,UAClC,EAAKjB,mBA1BN,gCA+BP,EAAKA,eA/BE,4CAtJI,wDA2LnBmB,aAAe,gBACmB7G,IAA1B0C,EAAMc,WAAWhB,MACjBiB,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAMkC,OAAOuC,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC5IA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,IAGzB,EAAK7F,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,aAExC8C,OAAM,SAACC,GACNC,QAAQC,IAAIF,OArML,EA0MnBG,WAAa,SAACjB,GAMV,GAL2B,OAAvB,EAAKnG,MAAM6G,cAA2C3G,IAAvB,EAAKF,MAAM6G,SAAgD,KAAvB,EAAK7G,MAAM6G,UAC9E,EAAK/G,SAAS,CAAE6G,cAAe,EAAK3G,MAAM6G,UAC1C,EAAK/G,SAAS,CAAE+G,QAAS,MAE7B,EAAK/G,SAAS,CAAE+F,YAAaM,EAAMC,OAAOiB,MAAM,KAC5ClB,EAAMC,OAAOiB,OAASlB,EAAMC,OAAOiB,MAAM,GAAI,CAC7C,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACb,EAAK3H,SAAS,CAAEgG,MAAO2B,EAAErB,OAAOsB,UAEpCJ,EAAOK,cAAcxB,EAAMC,OAAOiB,MAAM,IAE5C,EAAKvH,SAAS,CAAEsD,SAAU,MAvNX,EA0NnBwE,YA1NmB,sBA0NL,sBAAAnE,EAAA,0FA1NK,EA8NnBoE,YA9NmB,sBA8NL,sBAAApE,EAAA,sDACV,EAAK3D,SAAS,CAAE+F,YAAa,KACF,OAAvB,EAAK7F,MAAM6G,cAA2C3G,IAAvB,EAAKF,MAAM6G,SAAgD,KAAvB,EAAK7G,MAAM6G,UAC9E,EAAK/G,SAAS,CAAE6G,cAAe,EAAK3G,MAAM6G,UAC1C,EAAK/G,SAAS,CAAE+G,QAAS,KAAM,gBAJzB,2CA9NK,EAuOnBiB,gBAAkB,WACd,OAA2B,MAAtB,EAAK9H,MAAM6G,SAA0C,KAAvB,EAAK7G,MAAM6G,SAA8C,MAA1B,EAAK7G,MAAM6F,aAAkD,KAA3B,EAAK7F,MAAM6F,YAiB/E,MAAtB,EAAK7F,MAAM6G,SAA0C,KAAvB,EAAK7G,MAAM6G,SAA8C,MAA1B,EAAK7G,MAAM6F,aAAkD,KAA3B,EAAK7F,MAAM6F,YAkBpF,OAAvB,EAAK7F,MAAM6G,cAA2C3G,IAAvB,EAAKF,MAAM6G,SAAgD,KAAvB,EAAK7G,MAAM6G,UAA8C,IAA5B,EAAK7G,MAAMwG,cAAoD,MAA1B,EAAKxG,MAAM6F,aACrJqB,QAAQC,IAAIvE,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM6G,SAClElD,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM6G,QAAS,CACrEhD,QAAS,CACLnB,KAAME,EAAMc,WAAWhB,QAE5BoB,KAJH,+BAAAL,EAAA,MAIQ,WAAOM,GAAP,SAAAN,EAAA,sDACqB,OAArB,EAAKzD,MAAM8F,YAAuC5F,IAArB,EAAKF,MAAM8F,OAA4C,KAArB,EAAK9F,MAAM8F,OAC1E,EAAKhG,SAAS,CAAEgG,MAAO,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,OAFhF,2CAJR,uDAYI,kBAACiD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,QACnB,kBAACkB,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAAS3C,KAAG,EAAC7E,MAAO,CAAEyH,SAAU,QAASC,UAAW,QAAStD,WAAY,OAAQuD,YAAa,QAAUzC,MAAM,OAAO0C,IAAK,EAAKnI,MAAM8F,QACrI,kBAACvE,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,0CACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAU,EAAKtB,cAE5D,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,OAAOI,MAAM,SAASQ,QAAS,EAAK6G,aAAtD,+BAvBnB,EAhBG,kBAACnD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,QACnB,kBAACkB,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAAS3C,KAAG,EAAC7E,MAAO,CAAEyH,SAAU,QAASC,UAAW,QAAStD,WAAY,OAAQuD,YAAa,QAAUzC,MAAM,OAAO0C,IAAK,EAAKnI,MAAM8F,QACrI,kBAACvE,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,+BACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAU,EAAKtB,cAE5D,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,OAAOI,MAAM,SAASQ,QAAS,EAAK6G,aAAtD,yBA1BhB,kBAACnD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,IAAInE,UAAU,OAClB,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAU,EAAKtB,mBAjPrE,EA4SnBuB,eAAiB,WACb,MAA8B,mBAA1B,EAAK3I,MAAM4B,YAA6D,YAA1B,EAAK5B,MAAM4B,WAErD,kBAAC8C,EAAA,EAAD,CAAKtE,UAAU,QACX,kBAACkE,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,aACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAM,EAAKzB,MAAM8I,UACjBC,OAAQ,SAAAH,KAGRF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEgJ,UAAWrH,KAE/BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,WASV,eAA1B,EAAK5I,MAAM4B,WAEZ,kBAAC8C,EAAA,EAAD,CAAKtE,UAAU,QACX,kBAACkE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,QACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAM,EAAKzB,MAAMmJ,KACjBJ,OAAQ,SAAAH,KAGRF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEqJ,KAAM1H,KAE1BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,UAOjC,kBAACtE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,SACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAM,EAAKzB,MAAMoJ,MACjBL,OAAQ,SAAAH,KAGRF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEsJ,MAAO3H,KAE3BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,WAUV,eAA1B,EAAK5I,MAAM4B,WAEZ,kBAAC8C,EAAA,EAAD,CAAKtE,UAAU,QACX,kBAACkE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,YACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAM,EAAKzB,MAAMqJ,SACjBN,OAAQ,SAAAH,KAGRF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEuJ,SAAU5H,KAE9BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,UAOjC,kBAACtE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,YACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAM,EAAKzB,MAAMsJ,SACjBP,OAAQ,SAAAH,KAERF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEwJ,SAAU7H,KAE9BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,gBAzCxC,GA9XU,EAkbnBW,YAAc,SAACpD,GACX,IAAIqD,EAAO,EAAKxJ,MAAMwJ,KACtBA,EAAKrD,EAAMC,OAAOC,MAAQF,EAAMC,OAAOqD,QACvC,EAAK3J,SAAS,CAAC0J,KAAMA,KArbN,EAubnBE,WAAa,WACT,GAAkC,OAA9B,EAAK9J,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE,OACI,6BACI,wBAAIO,MAAO,CAAEoJ,UAAW,SAAxB,QACA,kBAACvB,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAO,EAAKtG,MAAMwJ,KAAKI,UAAY,GAAIlB,SAAU,EAAKa,cAC3G,kBAACjB,EAAA,EAAD,CAAOC,IAAI,YAAX,cAEJ,kBAACH,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAO,EAAKtG,MAAMwJ,KAAKK,OAAS,GAAInB,SAAU,EAAKa,cAClG,kBAACjB,EAAA,EAAD,CAAOC,IAAI,SAAX,YAhckB,OAA9B,EAAK3I,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,OAChE,EAAKA,MAAQ,CACT0B,MAAO,GACPE,WAAY,GACZI,KAAM,GACN8H,QAAS,GACThB,UAAW,GACXK,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVE,KAAK,GACL7D,SAAS,EACTvC,SAAU,GACVG,WAAW,EACXiD,cAAc,QAGYtG,IAA1B0C,EAAMc,WAAWhB,MACjBiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAMkC,OAAOuC,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACzIA,EAAItC,KAAKuC,QACT,EAAKlE,SAASiE,EAAItC,KAAKS,QACvB,EAAKpC,SAAS,CACV6F,SAAS,EACT/D,WAAY,EAAKhC,MAAMI,MAAM+F,SAAS/F,MAAMkC,OAAON,WACnD2B,WAAW,EACXiG,KAAK,MAIT,EAAK1J,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,QAQnE,EAAKvD,MAAQ,CACT0B,MAAO,GACPE,WAAY,iBACZI,KAAM,GACN8H,QAAS,GACThB,UAAW,GACXK,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVE,KAAM,GACN7D,SAAS,EACTvC,SAAU,GACVG,WAAW,EACXiD,cAAc,GAGtB,EAAKmC,eAAiB,EAAKA,eAAejI,KAApB,gBACtB,EAAK6F,aAAe,EAAKA,aAAa7F,KAAlB,gBACpB,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAKgF,kBAAoB,EAAKA,kBAAkBhF,KAAvB,gBACzB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAKoH,gBAAkB,EAAKA,gBAAgBpH,KAArB,gBACvB,EAAK0G,WAAa,EAAKA,WAAW1G,KAAhB,gBAClB,EAAKkH,YAAc,EAAKA,YAAYlH,KAAjB,gBACnB,EAAKkF,aAAe,EAAKA,aAAalF,KAAlB,gBAlEL,E,qDAycT,IAAD,OACL,OACI,kBAACkE,EAAA,EAAD,KACI,6CACC3D,KAAK6G,kBACN,kBAACiC,EAAA,EAAD,CAAM3J,UAAU,QACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAayB,GAAI,GAA5B,YACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,SAAS4D,KAAK,aAAaoC,GAAG,aAAanC,MAAOrF,KAAKjB,MAAM4B,WAAY8G,SAAUzH,KAAKiF,cAChG,kDACA,8CACA,8CACA,+CAKhB,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAQyB,GAAI,GAAvB,SACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAOrF,KAAKjB,MAAM0B,MAAOgH,SAAUzH,KAAKiF,kBAI/F,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,cAAcyB,GAAI,GAA7B,eACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,IAAI5D,KAAK,cAAcoC,GAAG,cAAcnC,MAAOrF,KAAKjB,MAAMkK,YAAaxB,SAAUzH,KAAKiF,kBAI9H,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,MACHtD,KAAKyI,gBAIlB,kBAAChF,EAAA,EAAD,CAAKtE,UAAU,QACX,kBAACkE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,QACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAMR,KAAKjB,MAAMgC,KACjB+G,OAAQ,SAAAH,KAERF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEkC,KAAMP,KAE1BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,UAOjC,kBAACtE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWpB,UAAU,QAArB,WACA,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CACIqH,OAAQC,KACRpH,KAAMR,KAAKjB,MAAM8J,QACjBf,OAAQ,SAAAH,KAERF,SAAU,SAACvC,EAAOyC,GACd,IAAMnH,EAAOmH,EAAOI,UACpB,EAAKlJ,SAAS,CAAEgK,QAASrI,KAE7BwH,OAAQ,SAAC9C,EAAOyC,KAEhBM,QAAS,SAAC/C,EAAOyC,WAOpC3H,KAAK0H,iBACN,kBAACjE,EAAA,EAAD,CAAKtE,UAAU,OACX,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,QACX,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,SAASQ,QAASC,KAAK8F,cAArC,WAEJ,kBAACzC,EAAA,EAAD,CAAKlE,UAAU,QACX,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAASC,KAAKsF,cAAtC,YAGPtF,KAAKkD,aACLlD,KAAKqC,gBACLrC,KAAKkC,cACLlC,KAAKyE,yB,GA7iBKvE,IAAMC,WCe3B+I,G,kDAEF,WAAYvK,GAAQ,IAAD,8BACf,cAAMA,IAcVwK,SAAW,WACP,GAAI,EAAKpK,MAAM2F,QACX,OACI,kBAAC,IAAD,CAAUlF,GAAG,aAlBN,EAuBnB0C,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WA1B5C,EA+BnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAlCR,EAuCnB0F,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAxCnC,EA4CnBC,aAAe,SAACJ,GAER,EAAKnG,MAAMqK,SACX,EAAKvK,SAAS,CAACyD,WAAW,IAC1BI,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,eAAgB,EAAKtC,OAAO8D,MAAK,SAACC,IAC3C,IAApBA,EAAItC,KAAKuC,QACT,EAAKpE,MAAM0K,SAASvG,EAAIF,QAAQnB,WACFxC,IAA1B0C,EAAMc,WAAWhB,KACjB,EAAK5C,SAAS,CAAE6F,SAAS,KAGzB,EAAK7F,SAAS,CAAEsD,SAAU,yBAC1B,EAAKtD,SAAS,CAACyD,WAAW,MAIL,OAArBQ,EAAItC,KAAKyC,SACT,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAACyD,WAAW,MAG1B,EAAKzD,SAAS,CAAEsD,SAAU,yBAC1B,EAAKtD,SAAS,CAACyD,WAAW,SAMtCI,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,SAAU,EAAKtC,OAAO8D,MAAK,SAACC,OAC9DD,MAAK,WACJH,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,eAAgB,EAAKtC,OAAO8D,MAAK,SAACC,IAC3C,IAApBA,EAAItC,KAAKuC,QACT,EAAKpE,MAAM0K,SAASvG,EAAIF,QAAQnB,WACFxC,IAA1B0C,EAAMc,WAAWhB,KACjB,EAAK5C,SAAS,CAAE6F,SAAS,IAGzB,EAAK7F,SAAS,CAAEsD,SAAU,0BAKL,OAArBW,EAAItC,KAAKyC,QACT,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UAGnC,EAAKpE,SAAS,CAAEsD,SAAU,gCA1F/B,EAmGnBmH,WAAa,WACT,OAAI,EAAKvK,MAAMqK,QAEP,6BACI,qCACA,kBAACN,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACgI,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,QAAQ4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,cAAc9B,SAAU,EAAKxC,gBAEzF,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAW+B,YAAY,WAAW9B,SAAU,EAAKxC,gBAE/F,kBAAC9D,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,EAAKuF,cAAtC,UACA,6BACA,kBAACnE,EAAA,EAAD,CAAQ5B,MAAM,OAAOQ,QAAS,WAAQ,EAAKlB,SAAS,CAAEuK,SAAS,MAA/D,aAOR,6BACI,uCACA,kBAACN,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACgI,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,aAAa9B,SAAU,EAAKxC,gBAErF,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,QAAQ4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,cAAc9B,SAAU,EAAKxC,gBAEzF,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,gBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,QAAQ4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,qBAAqB9B,SAAU,EAAKxC,gBAEhG,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAW+B,YAAY,WAAW9B,SAAU,EAAKxC,gBAE/F,kBAAC9D,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,EAAKuF,cAAtC,UACA,6BACA,kBAACnE,EAAA,EAAD,CAAQ5B,MAAM,OAAOQ,QAAS,WAAQ,EAAKlB,SAAS,CAAEuK,SAAS,MAA/D,aA7IhB,EAAKrK,MAAQ,CACTqK,SAAS,EACTjH,SAAU,GACVG,WAAW,GAEf,EAAKgH,WAAa,EAAKA,WAAW7J,KAAhB,gBAClB,EAAKwF,aAAe,EAAKA,aAAaxF,KAAlB,gBACpB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAK0J,SAAW,EAAKA,SAAS1J,KAAd,gBAXD,E,qDAuJf,OACI,kBAACkE,EAAA,EAAD,CAAWxE,UAAU,QACjB,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKlE,UAAU,aACf,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,YACX,kBAACkB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,KACKN,KAAKsJ,gBAIlB,kBAACjG,EAAA,EAAD,CAAKlE,UAAU,cAElBa,KAAKmJ,WACLnJ,KAAKkC,cACLlC,KAAKqC,qB,GAzKEnC,IAAMC,WAiLf0D,gBA/LS,SAAC9E,GACrB,MAAO,CACH0C,KAAM1C,MAIa,SAAC+E,GACxB,MAAO,CACHuF,SAAU,SAAC5H,GAAD,OAAUqC,EFjBrB,SAAkBrC,GACrB,MAAO,CACHD,KAAM,gBACNE,QAASD,GEcoB4H,CAAS5H,QAuL/BoC,CAA6CqF,ICzK7CM,G,uKAtBP,OACI,6BACI,kBAACnJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYP,KAAKrB,MAAM6B,KAAK4E,MAC5B,kBAAC1E,EAAA,EAAD,KAAeV,KAAKrB,MAAM6B,KAAKgB,MAC/B,kBAACZ,EAAA,EAAD,KAAYZ,KAAKrB,MAAM6B,KAAKyI,aAC5B,kBAAC,IAAD,CAAMzJ,GAAI,CACNwB,SAAU,gBACVjC,MAAO,CAAE0K,qBAAsBzJ,KAAKrB,MAAM6B,KAAKgD,OAE/C,kBAACrC,EAAA,EAAD,qB,GAfSjB,IAAMC,WCkBrCuJ,G,kDAEF,WAAY/K,GAAQ,IAAD,8BACf,cAAMA,IAcVuD,YAAc,WACV,GAA2B,KAAxB,EAAKnD,MAAMoD,SACV,OACA,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WAlBvB,EAuBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA1BR,EA+BnBoK,uBA/BmB,sBA+BM,sBAAAnH,EAAA,8DACSvD,IAA1B0C,EAAMc,WAAWhB,KADA,gCAEXiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,aAAc,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACpGA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAE+K,oBAAqB9G,EAAItC,KAAKqJ,cAC9C,EAAKhL,SAAS,CAACyD,WAAU,MAGzB,EAAKzD,SAAS,CAACsD,SAAUW,EAAItC,KAAKyC,UAClC,EAAKpE,SAAS,CAACyD,WAAU,QAThB,2CA/BN,EA+CnBY,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BArDR,EAAKT,MAAQ,CACT6K,oBAAqB,GACrBzH,SAAU,GACVG,WAAW,GAEf,EAAKqH,uBAAyB,EAAKA,uBAAuBlK,KAA5B,gBAC9B,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAKkK,yBAXU,E,qDA+Df,IAAIxG,EAWJ,OAVsC,MAAlCnD,KAAKjB,MAAM6K,0BAAkE3K,IAAnCe,KAAKjB,MAAM6K,sBACrDzG,EAAInD,KAAKjB,MAAM6K,oBAAoBxG,KAAI,SAAC0G,GACpC,OACI,kBAACzG,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKuG,EAAmBtG,KAChC,kBAAEuG,GAAF,CAAyBvJ,KAAMsJ,SAO3C,6BACI,kBAACrG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,eACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,2BAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,wBACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVgE,GAEJnD,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,qB,GA9FenC,IAAMC,WAqG5B0D,gBAlHS,SAAC9E,GACrB,MAAO,CACH0C,KAAM1C,MAIa,SAAC+E,GACxB,MAAO,CACHC,QAAS,kBAAMD,EJVZ,CACHtC,KAAM,qBImHCqC,CAA6C6F,ICtB7CM,G,kDAhGX,WAAYrL,GAAQ,IAAD,8BACf,cAAMA,IAQVsL,kBAAoB,SAACC,EAAUC,GAC3B,GAAID,EAASE,YACT,OACI,kBAACjD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,eAAX,iBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,IAAI5D,KAAK,cAAcoC,GAAG,cAAcnC,MAAO6E,EAASE,YAAa3C,SAAU,SAACvC,GAAY,EAAKvG,MAAM0L,qBAAqBnF,EAAO,EAAKvG,MAAMwL,MAAOA,QAd9K,EAoBnBG,YAAc,SAACJ,GACX,GAAIA,EAAStE,QAYT,OAXAlD,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,aAAe4I,EAAStE,QAAS,CACrEhD,QAAS,CACLnB,KAAME,EAAMc,WAAWhB,QAE5BoB,MAAK,SAACC,GACwB,KAAzB,EAAK/D,MAAMwL,WACX,EAAK1L,SAAS,CAAE0L,UAAW,QAAUzH,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,UAMxF,6BACI,yBAAKlB,MAAO,CAAEyH,SAAU,QAASyD,UAAW,QAASxD,UAAW,QAAStD,WAAY,OAAQuD,YAAa,QAAUzC,MAAM,OAAO0C,IAAK,EAAKnI,MAAMwL,UAAWE,IAAI,UAjC5K,EAAK1L,MAAQ,CACTwL,UAAW,IAEf,EAAKN,kBAAoB,EAAKA,kBAAkBxK,KAAvB,gBALV,E,qDAyCT,IACF0D,EADC,OAyCL,OAvC4B,MAAxBnD,KAAKrB,MAAM+L,gBAA8CzL,IAAzBe,KAAKrB,MAAM+L,YAC3CvH,EAAInD,KAAKrB,MAAM+L,UAAUA,UAAUtH,KAAI,SAAC8G,EAAUC,GAC9C,OACI,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,KAAKC,IAAK4G,EAAOhL,UAAU,OAC/B,kBAACgI,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,kBAAX,mBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,iBAAiBoC,GAAG,iBAAiBnC,MAAO6E,EAASS,eAAgBlD,SAAU,SAACvC,GAAY,EAAKvG,MAAM0L,qBAAqBnF,EAAO,EAAKvG,MAAMwL,MAAOA,OAEjL,wBAAI7K,MAAO,CAAEoJ,UAAW,SAAxB,WACA,wBAAIpJ,MAAO,CAAEsL,kBAAmB,SAAUlC,UAAW,SACjD,kBAACvB,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,cAAX,OACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAO6E,EAASW,QAAQ,GAAIpD,SAAU,SAACvC,GAAY,EAAKvG,MAAMmM,mBAAmB5F,EAAO,EAAKvG,MAAMwL,MAAOA,EAAO,OAE1K,kBAAChD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,cAAX,OACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAO6E,EAASW,QAAQ,GAAIpD,SAAU,SAACvC,GAAY,EAAKvG,MAAMmM,mBAAmB5F,EAAO,EAAKvG,MAAMwL,MAAOA,EAAO,OAE1K,kBAAChD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,cAAX,OACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAO6E,EAASW,QAAQ,GAAIpD,SAAU,SAACvC,GAAY,EAAKvG,MAAMmM,mBAAmB5F,EAAO,EAAKvG,MAAMwL,MAAOA,EAAO,OAE1K,kBAAChD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,cAAX,OACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAO6E,EAASW,QAAQ,GAAIpD,SAAU,SAACvC,GAAY,EAAKvG,MAAMmM,mBAAmB5F,EAAO,EAAKvG,MAAMwL,MAAOA,EAAO,QAI9K,kBAAChD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,UAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,SAASoC,GAAG,SAASnC,MAAO6E,EAASa,OAAQtD,SAAU,SAACvC,GAAY,EAAKvG,MAAM0L,qBAAqBnF,EAAO,EAAKvG,MAAMwL,MAAOA,OAExJ,EAAKF,kBAAkBC,EAAUC,GACjC,EAAKG,YAAYJ,QAO9B,6BACI,kBAAC7J,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACK6C,S,GAvFIjD,IAAMC,WCkB7BuJ,G,kDAEF,WAAY/K,GAAQ,IAAD,8BACf,cAAMA,IAmBVuD,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WAvB3B,EA4BnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA/BR,EAoCnByL,sBApCmB,sBAoCK,4BAAAxI,EAAA,8DACUvD,IAA1B0C,EAAMc,WAAWhB,KADD,uBAEZwJ,EAAiB,EAAKtM,MAAMI,MAAM+F,SAAS/F,MAAM0K,qBAFrC,SAGV/G,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,cAAgB4J,EAAgB,CAAErI,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACtHA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEqM,WAAYpI,EAAItC,KAAK0K,aACrC,EAAKrM,SAAS,CAAEsM,aAAcrI,EAAItC,KAAK2K,eACvC,EAAKtM,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,QAXnB,2CApCL,EAwDnBY,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAhEO,EAsEnB4L,oBAAsB,WAClB,OAAI,EAAKrM,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,cAKb,6BA9EO,EAmFnB6L,gBAAkB,SAAClB,GACf,GAAI,EAAKpL,MAAMoM,aAAahB,GAAOmB,UAC/B,OACI,kBAACnE,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,aAAX,aACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,YAAYoC,GAAG,YAAYnC,MAAO,EAAKtG,MAAMoM,aAAahB,GAAOmB,UAAW7D,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAOiF,QAxF7J,EA6FnBqB,qBAAuB,SAACrB,GACpB,GAAI,EAAKpL,MAAMoM,aAAahB,GAAOsB,eAC/B,OACI,kBAACtE,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,kBAAX,mBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,KAAK5D,KAAK,iBAAiBoC,GAAG,iBAAiBnC,MAAO,EAAKtG,MAAMoM,aAAahB,GAAOsB,eAAgBhE,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAOiF,QAlG1L,EAwGnBG,YAAc,SAACJ,EAAUC,GACrB,GAAID,EAAStE,QAaT,OAZAlD,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,aAAe4I,EAAStE,QAAS,CACrEhD,QAAS,CACLnB,KAAME,EAAMc,WAAWhB,QAE5BoB,KAJH,+BAAAL,EAAA,MAIQ,WAAOM,GAAP,eAAAN,EAAA,sDAC4C,MAA5C,EAAKzD,MAAMoM,aAAahB,GAAOI,WAAkE,KAA7C,EAAKxL,MAAMoM,aAAahB,GAAOI,aAC/EY,EAAe,EAAKpM,MAAMoM,cACjBhB,GAAOI,UAAY,QAAUzH,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACzF,EAAK3B,SAAS,CAAEsM,aAAcA,KAJ9B,2CAJR,uDAaI,6BACI,yBAAK7L,MAAO,CAAEyH,SAAU,QAASyD,UAAW,QAASxD,UAAW,QAAStD,WAAY,OAAQuD,YAAa,QAAUzC,MAAM,OAAO0C,IAAK,EAAKnI,MAAMoM,aAAahB,GAAOI,UAAWE,IAAI,UAxHjL,EA8HnBiB,iBAAmB,gBACezM,IAA1B0C,EAAMc,WAAWhB,OACjB,EAAK5C,SAAS,CAAEyD,WAAW,IAC3BI,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgB,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM0K,qBAAsB,CAAE7G,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACzJA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEyD,WAAW,IAC3B,EAAKzD,SAAS,CAAE6F,SAAS,MAGzB,EAAK7F,SAAS,CAAEyD,WAAW,IAC3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,cAExC8C,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEyD,WAAW,IAC3B2D,QAAQC,IAAIF,QA5IL,EAiJnB2F,2BAA6B,SAACzG,GAC1B,IAAIgG,EAAa,EAAKnM,MAAMmM,WAC5BA,EAAWhG,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAC7C,EAAKxG,SAAS,CAAEqM,WAAYA,KApJb,EAuJnBK,yBAA2B,SAACrG,EAAOiF,GAC/B,IAAIgB,EAAe,EAAKpM,MAAMoM,aAC9BA,EAAahB,GAAOjF,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MACtD,EAAKxG,SAAS,CAAEsM,aAAcA,KA1Jf,EA6JnBS,6BAA+B,SAAC1G,EAAOiF,EAAO0B,GAC1C,IAAIV,EAAe,EAAKpM,MAAMoM,aAC9BA,EAAahB,GAAOO,UAAUmB,GAAkB3G,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAClF,EAAKxG,SAAS,CAAEsM,aAAcA,KAhKf,EAmKnBW,8BAAgC,SAAC5G,EAAOiF,EAAO0B,EAAkBE,GAC7D,IAAIZ,EAAe,EAAKpM,MAAMoM,aAC9BA,EAAahB,GAAOO,UAAUmB,GAAkBhB,QAAQkB,GAAe7G,EAAMC,OAAOE,MACpF,EAAKxG,SAAS,CAAEsM,aAAcA,KAtKf,EAyKnBa,eAAiB,WACb,GAA6B,MAAzBrK,EAAMc,WAAWhB,KAAc,CAC/B,EAAK5C,SAAS,CAAEyD,WAAW,IAC3B,IAAI2J,EAAa,EAAKlN,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAe1I,IACnEd,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,cAAgB4K,EAAa,YAAa,EAAKlN,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAgB,CAAEtJ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC7KA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEqN,cAAe,EAAG5J,WAAW,IAG7C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,SAlLpD,EAwLnB6J,iBAAmB,WACf,GAA6B,MAAzBxK,EAAMc,WAAWhB,KAAc,CAC/B,EAAK5C,SAAS,CAAEyD,WAAW,IAC3B,IAAI8J,EAAe,EAAKrN,MAAMmM,WAAW1H,IACzCd,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,cAAgB+K,EAAc,EAAKrN,MAAMmM,WAAY,CAAEtI,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACrIA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,IAG3C,EAAK7F,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,SAjMpD,EAuMnB+J,uBAAyB,WACrB,GAA+B,MAA3B,EAAKtN,MAAMoM,mBAAoDlM,IAA5B,EAAKF,MAAMoM,aAQ9C,OAPQ,EAAKpM,MAAMoM,aAAa/H,KAAI,SAAC8G,EAAUC,GAC3C,OACI,kBAAChJ,EAAA,EAAD,CAAQoC,IAAK4G,EAAOhL,UAAU,MAAMI,MAAM,UAAUQ,QAAS,WACzD,EAAKlB,SAAS,CAAEqN,cAAe/B,MADnC,IAEKA,EAAQ,EAFb,SA3MG,EAqNnBmC,uBAAyB,WACrB,GAA+B,MAA3B,EAAKvN,MAAMoM,mBAAoDlM,IAA5B,EAAKF,MAAMoM,aAC9C,OACI,kBAAC9H,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACjD,EAAA,EAAD,CAAMlB,UAAU,OACZ,kBAACmB,EAAA,EAAD,KACI,kBAACmD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,gBAAX,iBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,eAAeoC,GAAG,eAAenC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeK,aAAc9E,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAG/M,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,UAAUoC,GAAG,UAAUnC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeM,QAAS/E,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAGhM,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeO,MAAOhF,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAG1L,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,cAAX,eACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeQ,WAAYjF,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAGzM,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,mBAAX,oBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,kBAAkBoC,GAAG,kBAAkBnC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeS,gBAAiBlF,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAGxN,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOnC,MAAO,EAAKtG,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAeU,KAAMnF,SAAU,SAACvC,GAAY,EAAKqG,yBAAyBrG,EAAO,EAAKnG,MAAMmN,oBAItL,EAAKb,gBAAgB,EAAKtM,MAAMmN,eAChC,EAAKV,qBAAqB,EAAKzM,MAAMmN,gBAE1C,kBAAC7I,EAAA,EAAD,CAAKC,GAAG,KACH,EAAKgH,YAAY,EAAKvL,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAgB,EAAKnN,MAAMmN,iBAGxF,kBAAE,GAAF,CAAiBxB,UAAW,EAAK3L,MAAMoM,aAAa,EAAKpM,MAAMmN,eAAgB/B,MAAO,EAAKpL,MAAMmN,cAAe7B,qBAAsB,EAAKuB,6BAA8Bd,mBAAoB,EAAKgB,gCAClM,kBAAC3K,EAAA,EAAD,CAAQhC,UAAU,OAAOI,MAAM,UAAUQ,QAAS,EAAKiM,gBAAvD,uBAxQpB,EAAKjN,MAAQ,CACToD,SAAU,GACVG,WAAW,EACX4I,WAAY,GACZgB,cAAe,GAEnB,EAAKlB,sBAAwB,EAAKA,sBAAsBvL,KAA3B,gBAC7B,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAK2L,oBAAsB,EAAKA,oBAAoB3L,KAAzB,gBAE3B,EAAK4L,gBAAkB,EAAKA,gBAAgB5L,KAArB,gBACvB,EAAK+L,qBAAuB,EAAKA,qBAAqB/L,KAA1B,gBAC5B,EAAKuL,wBAhBU,E,qDAkRf,OACI,6BACI,kBAACrH,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAAY5D,KAAKjB,MAAMmM,WAAW9F,MAAQ,IAC/D,kBAAC3B,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOnC,MAAOrF,KAAKjB,MAAMmM,WAAW1J,MAAQ,GAAIiG,SAAUzH,KAAK2L,+BAGzG,kBAACtI,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAMmM,WAAW2B,UAAY,GAAIpF,SAAUzH,KAAK2L,+BAIrH,kBAACtI,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOnC,MAAOrF,KAAKjB,MAAMmM,WAAW4B,MAAQ,GAAIrF,SAAUzH,KAAK2L,+BAGzG,kBAACtI,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,qBAAX,uBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,oBAAoBoC,GAAG,oBAAoBnC,MAAOrF,KAAKjB,MAAMmM,WAAW6B,mBAAqB,GAAItF,SAAUzH,KAAK2L,+BAGhJ,kBAACtI,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,YAAX,aACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAMmM,WAAW8B,UAAY,GAAIvF,SAAUzH,KAAK2L,+BAKrH,kBAACtI,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,IAAI5D,KAAK,cAAcoC,GAAG,cAAcnC,MAAOrF,KAAKjB,MAAMmM,WAAWjC,aAAe,GAAIxB,SAAUzH,KAAK2L,gCAI/I,kBAAClI,EAAA,EAAD,CAAKtE,UAAU,QACX,yCACCa,KAAKqM,yBACLrM,KAAKsM,0BAETtM,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,gBACLrC,KAAKoL,sBACN,kBAACjK,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAASC,KAAK0L,kBAArD,qBACA,kBAACvK,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAAUQ,QAASC,KAAKmM,kBAAtD,0B,GA/UqBjM,IAAMC,WAsV5B0D,gBAnWS,SAAC9E,GACrB,MAAO,CACH0C,KAAM1C,MAIa,SAAC+E,GACxB,MAAO,CACHC,QAAS,kBAAMD,ENVZ,CACHtC,KAAM,qBMoWCqC,CAA6C6F,IC7L7CuD,G,kDAxKX,WAAYtO,GAAQ,IAAD,8BACf,cAAMA,IAQVuD,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WAZ5C,EAiBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aApBR,EAyBnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAjCO,EAuCnB0N,mBAAqB,WACjB,OAAI,EAAKnO,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,cAKb,6BA/CO,EAoDnByF,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SArDnC,EAwDnBc,WAAa,SAACjB,GACV,EAAKrG,SAAS,CAAEsO,KAAMjI,EAAMC,OAAOiB,MAAM,MAzD1B,EA4DnBd,aAAe,SAACJ,GACZ,EAAKrG,SAAS,CAAEyD,WAAW,IAC3B,IAAMkD,EAAW,IAAIC,SAErBD,EAASG,OACL,OACA,EAAK5G,MAAMoO,MAEf3H,EAASG,OACL,OACA,EAAK5G,MAAMqG,MAEfI,EAASG,OACL,OACA,EAAK5G,MAAMyC,MAEfgE,EAASG,OACL,WACA,EAAK5G,MAAM8N,UAEfrH,EAASG,OACL,cACA,EAAK5G,MAAMkK,kBAIehK,IAA1B0C,EAAMc,WAAWhB,MACjBiB,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,aAAcmE,EAAU,CACzD5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GAEDA,EAAItC,KAAKuC,OAET,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,cAhGhC,EAuGnBqF,YAAc,SAACpD,GACX,IAAIqD,EAAO,EAAKxJ,MAAMwJ,KACtBA,EAAKrD,EAAMC,OAAOC,MAAQF,EAAMC,OAAOqD,QACvC,EAAK3J,SAAS,CAAE0J,KAAMA,IAAQ,WAC1BtC,QAAQC,IAAI,EAAKnH,MAAMwJ,UAzG3B,EAAKxJ,MAAQ,CACTuD,WAAW,EACXH,SAAU,GACVoG,KAAM,IALK,E,qDAgHf,OACI,kBAAC5E,EAAA,EAAD,KACI,8DACA,kBAACmF,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,wBAAwB9B,SAAUzH,KAAKiF,gBAEhG,kBAACkC,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAW+B,YAAY,iBAAiB9B,SAAUzH,KAAKiF,iBAGrG,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,IAAIhE,MAAO,CAAEoE,WAAY,SAC7B,kBAACyD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,aAAa9B,SAAUzH,KAAKiF,gBAErF,kBAACkC,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,wBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAUzH,KAAKmG,gBAKpE,kBAACgB,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,cAAcoC,GAAG,cAAc+B,YAAY,oBAAoB9B,SAAUzH,KAAKiF,gBAE9G,wBAAI3F,MAAO,CAAEoJ,UAAW,SAAxB,QACA,kBAACvB,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAMwJ,KAAKI,UAAY,GAAIlB,SAAUzH,KAAKsI,cAC3G,kBAACjB,EAAA,EAAD,CAAOC,IAAI,YAAX,cAEJ,kBAACH,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAOrF,KAAKjB,MAAMwJ,KAAKK,OAAS,GAAInB,SAAUzH,KAAKsI,cAClG,kBAACjB,EAAA,EAAD,CAAOC,IAAI,SAAX,UAEJ,kBAACnG,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAASC,KAAKsF,cAAtC,UAEA,8BAEHtF,KAAKkD,aACLlD,KAAKkN,qBACLlN,KAAKqC,gBACLrC,KAAKkC,mB,GAlKiBhC,IAAMC,WCmK9BiN,G,kDAjKX,WAAYzO,GAAQ,IAAD,8BACf,cAAMA,IAaVuD,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WAjB5C,EAsBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAzBR,EA8BnB0F,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA/BnC,EAmCnBC,aAAe,SAACJ,GACZ,EAAKrG,SAAS,CAAEyD,WAAW,IAC3BI,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,eAAgB,EAAKtC,OAAO8D,MAAK,SAACC,IAC3C,IAApBA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE4C,KAAMqB,EAAIF,QAAQnB,OAAQ,WACtC,EAAK5C,SAAS,CAAEyD,WAAW,OAIN,OAArBQ,EAAItC,KAAKyC,SACT,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAU,yBAC1B,EAAKtD,SAAS,CAAEyD,WAAW,SAlDxB,EAwDnB6D,WAAa,SAACjB,GAGV,GADA,EAAKrG,SAAS,CAAE8H,YAAazB,EAAMC,OAAOiB,MAAM,KAC5ClB,EAAMC,OAAOiB,OAASlB,EAAMC,OAAOiB,MAAM,GAAI,CAC7C,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACb,EAAK3H,SAAS,CAAEgG,MAAO2B,EAAErB,OAAOsB,UAEpCJ,EAAOK,cAAcxB,EAAMC,OAAOiB,MAAM,IAE5C,EAAKvH,SAAS,CAAEsD,SAAU,MAlEX,EAqEnBwE,YArEmB,sBAqEL,4BAAAnE,EAAA,yDACqB,OAA3B,EAAKzD,MAAM4H,kBAAmD1H,IAA3B,EAAKF,MAAM4H,aAAwD,KAA3B,EAAK5H,MAAM4H,YADhF,uBAEFnB,EAAW,IAAIC,UACVE,OAAO,gBAAiB,EAAK5G,MAAM4H,aAHtC,SAIAjE,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,YAAakE,EAAU,CAAE5C,QAAS,CAAEnB,KAAM,EAAK1C,MAAM0C,QAAUoB,MAAK,SAACC,GAC5GA,EAAItC,KAAKuC,SACTkD,QAAQC,IAAIpD,EAAItC,MAChB,EAAK3B,SAAS,CAAE+G,QAAS9C,EAAItC,KAAKoF,cAEvCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKnH,SAAS,CAACsD,SAAU,aAXvB,2CArEK,EAqFnBkL,OAAS,WACL,IAAIC,EAAO,EAAKvO,MAAM6G,QACtB2H,UAAUC,UAAUC,UAAUH,GAAMzK,MAAK,WACrCoD,QAAQC,IAAI,2CACb,SAAUF,GACTC,QAAQyH,MAAM,wBAAyB1H,OA1F5B,EA8FnBsD,WAAa,WACT,GAAwB,OAApB,EAAKvK,MAAM0C,WAAqCxC,IAApB,EAAKF,MAAM0C,MAA0C,KAApB,EAAK1C,MAAM0C,KACxE,OACI,6BACI,qCACA,kBAACqH,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACgI,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,QAAQ4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,cAAc9B,SAAU,EAAKxC,gBAEzF,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAW+B,YAAY,WAAW9B,SAAU,EAAKxC,gBAE/F,kBAAC9D,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,EAAKuF,cAAtC,UACA,gCA7GD,EAoHnBqI,kBAAoB,WAChB,GAAwB,OAApB,EAAK5O,MAAM0C,WAAqCxC,IAApB,EAAKF,MAAM0C,MAA0C,KAApB,EAAK1C,MAAM0C,KACxE,OACI,kBAACpB,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAAS3C,KAAG,EAAC7E,MAAO,CAAEyH,SAAU,QAASC,UAAW,QAAStD,WAAY,OAAQuD,YAAa,QAAUzC,MAAM,OAAO0C,IAAK,EAAKnI,MAAM8F,QACrI,kBAACvE,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAU,EAAKtB,cAE5D,kBAAChF,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,EAAK4G,aAAtC,UACA,2BAAG,0BAAMrH,MAAO,CAAEsO,WAAY,QAA3B,aAAH,IAAyD,EAAK7O,MAAM6G,QAChE,kBAACzE,EAAA,EAAD,CAAQ5B,MAAM,OAAOQ,QAAS,EAAKsN,OAAQlO,UAAU,mBA9HzE,EAAKJ,MAAQ,CACToD,SAAU,GACVG,WAAW,GAEf,EAAKgH,WAAa,EAAKA,WAAW7J,KAAhB,gBAClB,EAAKwF,aAAe,EAAKA,aAAaxF,KAAlB,gBACpB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAKkO,kBAAoB,EAAKA,kBAAkBlO,KAAvB,gBAVV,E,qDAyIf,OACI,kBAACkE,EAAA,EAAD,CAAWxE,UAAU,QACjB,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKlE,UAAU,aACf,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,YACX,kBAACkB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,KACKN,KAAKsJ,aACLtJ,KAAK2N,uBAIlB,kBAACtK,EAAA,EAAD,CAAKlE,UAAU,cAElBa,KAAKkC,cACLlC,KAAKqC,qB,GA3JcnC,IAAMC,WCyB3B0N,G,uKAtBP,OACI,6BACI,kBAACxN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYP,KAAKrB,MAAM6B,KAAK4E,MAC5B,kBAAC1E,EAAA,EAAD,KAAeV,KAAKrB,MAAM6B,KAAKqM,UAC/B,kBAACjM,EAAA,EAAD,KAAYZ,KAAKrB,MAAM6B,KAAKyI,aAC5B,kBAAC,IAAD,CAAMzJ,GAAI,CACNwB,SAAU,cACVjC,MAAO,CAAE+O,OAAQ9N,KAAKrB,MAAM6B,QAE5B,kBAACW,EAAA,EAAD,qB,GAfHjB,IAAMC,WC0GhB4N,G,kDAnGX,WAAYpP,GAAQ,IAAD,8BACf,cAAMA,IAcVuD,YAAc,WACV,GAA2B,KAAxB,EAAKnD,MAAMoD,SACV,OACA,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WAlBvB,EAuBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA1BR,EA+BnByO,WA/BmB,sBA+BN,sBAAAxL,EAAA,8DACqBvD,IAA1B0C,EAAMc,WAAWhB,KADZ,gCAECiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,UAAW,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACjGA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEoP,QAASnL,EAAItC,KAAKyN,UAClC,EAAKpP,SAAS,CAACyD,WAAU,MAGzB,EAAKzD,SAAS,CAACsD,SAAUW,EAAItC,KAAKyC,UAClC,EAAKpE,SAAS,CAACyD,WAAU,QAT5B,2CA/BM,EA+CnBY,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BArDR,EAAKT,MAAQ,CACTkP,QAAS,GACT9L,SAAU,GACVG,WAAW,GAEf,EAAK0L,WAAa,EAAKA,WAAWvO,KAAhB,gBAClB,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAKuO,aAXU,E,qDA+Df,IAAI7K,EAWJ,OAV0B,MAAtBnD,KAAKjB,MAAMkP,cAA0ChP,IAAvBe,KAAKjB,MAAMkP,UACzC9K,EAAInD,KAAKjB,MAAMkP,QAAQ7K,KAAI,SAAC0K,GACxB,OACI,kBAACzK,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKuK,EAAOtK,KACpB,kBAAE,GAAF,CAAahD,KAAMsN,SAO/B,6BACI,kBAACrK,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,cACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,uBAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,WACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVgE,GAEJnD,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,qB,GA9FGnC,IAAMC,WCo+BhB+N,G,kDAr+BX,WAAYvP,GAAQ,IAAD,8BACf,cAAMA,IAwCVqD,kBAzCmB,sBAyCC,sBAAAQ,EAAA,yDAChB,EAAK3D,SAAS,CAAEsP,kBAAkB,IACA,OAA9B,EAAKxP,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAFpD,wBAGkBE,IAA1B0C,EAAMc,WAAWhB,KAHT,uBAIR,EAAK5C,SAAS,CAAEyD,WAAW,IAJnB,SAKFI,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM+O,OAAOtK,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,KAA3I,+BAAAL,EAAA,MAAgJ,WAAOM,GAAP,2BAAAN,EAAA,0DAC9IM,EAAItC,KAAKuC,OADqI,kBAE1I+K,EAAShL,EAAItC,KAAKsN,QACfvF,KAAO,GACd,EAAK1J,SAAS,CAAEiP,OAAQA,IAJsH,OAAAtL,EAAA,KAK1HsL,EAAOM,UALmH,8CAKrI5B,EALqI,kBAAAhK,EAAA,KAMvHsL,EAAOM,SAAS5B,GAAS6B,SAN8F,8CAMjIC,EANiI,eAAA9L,EAAA,kCAAAA,EAAA,6DAQ9H+L,EAAcT,EAAOM,SAAS5B,GAAS6B,QAAQC,GAAQE,WAAWC,GAR4D,SAS5H/L,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,qBAAuBkN,EAAa,CAAE3L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC9H,GAAIA,EAAItC,KAAKuC,OAAQ,CACjB,IAAI2L,EAAc,EAAK3P,MAAM2P,YAC7BA,EAAYH,GAAezL,EAAItC,KAAKiO,UACpC,EAAK5P,SAAS,CAAE6P,YAAaA,QAb6F,iDAAAlM,EAAA,KAOhHsL,EAAOM,SAAS5B,GAAS6B,QAAQC,GAAQE,YAPuE,sDAO7HC,EAP6H,0HAAAjM,EAAA,iBAmBrImM,GAnBqI,SAAAnM,EAAA,sEAoBpIE,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,WAAayM,EAAOc,QAAQD,GAAQ,CAAE/L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC9H,GAAIA,EAAItC,KAAKuC,OAAQ,CACjB,IAAI6L,EAAU,EAAK7P,MAAM6P,QACzBA,EAAQd,EAAOc,QAAQD,IAAU7L,EAAItC,KAAKqO,OAC1C,EAAKhQ,SAAS,CAAE+P,QAASA,QAxByG,iDAAApM,EAAA,KAmB5HsL,EAAOc,SAnBqH,sDAmBrID,EAnBqI,6BAmBrIA,GAnBqI,yCA4B9I1I,QAAQC,IAAI,EAAKnH,OACjB,EAAKF,SAAS,CAAEyD,WAAW,IA7BmH,wBAgC9I,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,IAhCuF,4CAAhJ,uDALE,OAyCR,EAAKzD,SAAS,CAAEiQ,oBAAqBC,OAAOC,KAAK,EAAKjQ,MAAM2P,aAAaO,SAEzEvM,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,gBAAiB,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACjGA,EAAItC,KAAKuC,QAAqC,GAA3BD,EAAItC,KAAKoO,QAAQK,QACpC,EAAKpQ,SAAS,CAAEqQ,WAAYpM,EAAItC,KAAKoO,QAASO,SAAUrM,EAAItC,KAAKoO,QAAQ,GAAGxJ,KAAMgK,WAAYtM,EAAItC,KAAKoO,QAAQ,GAAGpL,SA7ClH,2CAzCD,EA8FnBtB,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WAjG5C,EAsGnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAASjD,MAAO,CACZ2E,OAAQ,IAAKL,OAAQ,OAAQM,SAAU,WAAYC,IAAK,QAASC,KAAM,QACvEC,OAAQ,QAASC,MAAO,OAAQC,OAAQ,OAAQC,MAAO,QACxDjF,MAAM,aA5GF,EAiHnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAzHO,EA+HnB6P,kBAAoB,WAChB,OAAI,EAAKtQ,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,YAKb,6BAvIO,EA4InB2G,WAAa,SAACjB,GACV,EAAKrG,SAAS,CAAEsO,KAAMjI,EAAMC,OAAOiB,MAAM,MA7I1B,EAgJnBnB,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAjJnC,EAoJnBiD,YAAc,SAACpD,GACX,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAOvF,KAAKrD,EAAMC,OAAOC,MAAQF,EAAMC,OAAOqD,QAC9C,EAAK3J,SAAS,CAAEiP,OAAQA,IAAU,WAC9B7H,QAAQC,IAAI,EAAKnH,MAAM+O,OAAOvF,UAxJnB,EA4JnBjD,aAAe,WACX,EAAKzG,SAAS,CAAEyD,WAAW,SACGrD,IAA1B0C,EAAMc,WAAWhB,OACiB,OAA9B,EAAK9C,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE2D,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,kBAAmB,EAAKtC,MAAM+O,OAAQ,CAAElL,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACvHA,EAAItC,KAAKuC,QACTkD,QAAQC,IAAIpD,EAAItC,MAChB,EAAK3B,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,MAG3C,EAAK7F,SAAS,CAAEyD,WAAW,IAC3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,QAK/DI,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM+O,OAAOtK,IAAK,EAAKzE,MAAM+O,OAAQ,CAAElL,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAEvIA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,KAG3C,EAAK7F,SAAS,CAAEyD,WAAW,IAC3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,UAnLxD,EA2LnBgN,2BA3LmB,sBA2LU,4BAAA9M,EAAA,sDACrB+M,EAAgB,EAAKxQ,MAAMwQ,cADN,YAElBA,EAAcC,mBAAmBP,OAAS,GAFxB,gCAGfvM,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgBkO,EAAcC,mBAAmB,GAAI,CAAE5M,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC7IA,EAAItC,KAAKuC,QAKVwM,EAAcC,mBAAmBC,OAAO,EAAG,GAC3C,EAAK5Q,SAAS,CAAE0Q,cAAeA,KAL/B,EAAK1Q,SAAS,CAAEsD,SAAU,8BALb,kCAelBoN,EAAcG,sBAAsBT,OAAS,GAf3B,iCAgBfvM,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgBkO,EAAcG,sBAAsB,GAAI,CAAE9M,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAChJA,EAAItC,KAAKuC,QAKVwM,EAAcG,sBAAsBD,OAAO,EAAG,GAC9C,EAAK5Q,SAAS,CAAE0Q,cAAeA,KAL/B,EAAK1Q,SAAS,CAAEsD,SAAU,8BAlBb,mCA6BlBoN,EAAcI,WAAWV,OAAS,GA7BhB,kCA8BfvM,IAAMmD,OAAOlE,EAAMc,WAAWnB,WAAa,mBAAqB,EAAKvC,MAAMwQ,cAAcI,WAAW,GAAI,CAAE/M,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC9JmD,QAAQC,IAAIpD,EAAItC,MACZsC,EAAItC,KAAKuC,QACTwM,EAAcI,WAAWF,OAAO,EAAG,GACnC,EAAK5Q,SAAS,CAAE0Q,cAAeA,KAG/B,EAAK1Q,SAAS,CAAEsD,SAAU,8BAG/B4D,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEsD,SAAU,8BAzCT,gCA6CzB,EAAKtD,SAAS,CAAE+Q,gBAAgB,IA7CP,4CA3LV,EA0OnBC,cAAgB,SAAC3K,GACb,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAO1I,KAAOF,EAAMC,OAAOE,MAC3B,EAAKxG,SAAS,CAAEiP,OAAQA,KA7OT,EAiPnBgC,iBAAmB,WACf,EAAKjR,SAAS,CAAEyD,WAAW,IAC3B,IAAIwL,EAAS,EAAK/O,MAAM+O,OACpBY,EAAc,EAAK3P,MAAM2P,YAI7B,GAFAzI,QAAQC,IAAI,EAAKnH,MAAMwQ,eAEnB5N,EAAMc,WAAWhB,KAAM,CAEvB,IAAI8N,EAAgB,EAAKxQ,MAAMwQ,cAC/BA,EAAcQ,SAAW,EAAKhR,MAAM+O,OAAOtK,IAC3C+L,EAAcS,eAAiBT,EAAcG,sBAAsBT,OAASM,EAAcC,mBAAmBP,OAC7GvM,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,4BAA6BkO,EAAe,CAAE3M,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC7HA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEoR,SAAS,IACzBvB,EAAY5L,EAAItC,KAAKiO,UAAUjL,KAAOV,EAAItC,KAAKiO,UAC/C,EAAK5P,SAAS,CAAE6P,YAAaA,IAC7BZ,EAAOM,SAAS,EAAKrP,MAAMmR,cAAc7B,QAAQ,EAAKtP,MAAMoR,aAAa3B,WAAW4B,KAAKtN,EAAItC,KAAKiO,UAAUjL,KAC5G,EAAK3E,SAAS,CAAEiP,OAAQA,IACxB,EAAKjP,SAAS,CACV+Q,gBAAgB,EAChBtN,WAAW,EACX6L,kBAAkB,EAClBoB,cAAe,CACXnK,KAAM,GACNsK,sBAAuB,GACvBF,mBAAoB,GACpBa,UAAW,GACXV,WAAY,OAKpB,EAAK9Q,SAAS,CAAEyD,WAAW,EAAOH,SAAUW,EAAItC,KAAKyC,eAlRlD,EAyRnBqN,WAAa,WACT,IAAIxC,EAAS,EAAK/O,MAAM+O,OACD,MAAnBA,EAAOM,WACPN,EAAOM,SAAW,GAClB,EAAKvP,SAAS,CAAEiP,OAAQA,KAE5BA,EAAOM,SAASgC,KAAK,CACjBhL,KAAM,EAAKrG,MAAMwR,WACjBlC,QAAS,KAEb,EAAKxP,SAAS,CAAEiP,OAAQA,EAAQyC,WAAY,MAnS7B,EAsSnBC,UAAY,SAACrG,GACT,IAAI2D,EAAS,EAAK/O,MAAM+O,OACc,MAAlCA,EAAOM,SAASjE,GAAOkE,UACvBP,EAAOM,SAASjE,GAAOkE,QAAU,GACjC,EAAKxP,SAAS,CAAEiP,OAAQA,KAE5BA,EAAOM,SAASjE,GAAOkE,QAAQ+B,KAAK,CAChChL,KAAM,EAAKrG,MAAM0R,UACjBjC,WAAY,GACZ9D,UAAW,KAEf,EAAK7L,SAAS,CAAEiP,OAAQA,EAAQ2C,UAAW,MAjT5B,EAuTnB3K,aAAe,WACX,EAAKjH,SAAS,CAAEyD,WAAW,SACGrD,IAA1B0C,EAAMc,WAAWhB,OACiB,OAA9B,EAAK9C,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE,EAAKF,SAAS,CAAE6F,SAAS,IAGzBhC,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM+O,OAAOtK,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAEvHA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,KAG3C,EAAK7F,SAAS,CAAEyD,WAAW,IAC3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,UArUxD,EA8UnBoO,cAAgB,SAACR,GACb,IAAIpC,EAAS,EAAK/O,MAAM+O,OACpB6C,EAAO,EACX,IAAK,IAAIC,KAAK9C,EAAOM,SAAS8B,GAAc7B,QACxC,GAAIP,EAAOM,SAAS8B,GAAc7B,QAAQuC,GAAGpC,WAAWS,OAAS,EAAG,CAChE0B,EAAO,EACP,MAGR,GAAa,IAATA,EACAE,MAAM,+DAEL,CACD/C,EAAOM,SAASqB,OAAOS,EAAc,GACrC,IAAIY,EAAkB,EAAK/R,MAAM+R,gBACjCA,EAAkB,EACa,IAA3BhD,EAAOM,SAASa,SAChB6B,GAAmB,GAEvB,EAAKjS,SAAS,CAAEiS,gBAAiBA,EAAiBhD,OAAQA,MAjW/C,EAsWnBiD,aAAe,SAACb,EAAcC,GAC1B,IAAIrC,EAAS,EAAK/O,MAAM+O,OACpBA,EAAOM,SAAS8B,GAAc7B,QAAQ8B,GAAa3B,WAAWS,OAAS,EACvE4B,MAAM,6CAGN/C,EAAOM,SAAS8B,GAAc7B,QAAQoB,OAAOU,EAAa,GAC1D,EAAKtR,SAAS,CAAEiP,OAAQA,MA7Wb,EAiXnBkD,iBAAmB,SAACd,EAAcC,EAAac,GAC3C,IAAInD,EAAS,EAAK/O,MAAM+O,OACpBoD,EAAepD,EAAOM,SAAS8B,GAAc7B,QAAQ8B,GAAa3B,WAAWyC,GAEjFvO,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,qBAAuB6P,EAAc,CAAEtO,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC5H,GAAIA,EAAItC,KAAKuC,OAAQ,CACjB,EAAKlE,SAAS,CAAEoR,SAAS,IACzB,IAAIkB,EAAkB,EAAKpS,MAAMwQ,cACjC,EAAK1Q,SAAS,CAAE0Q,cAAe,EAAKxQ,MAAM2P,YAAYwC,KACtD,EAAK5B,6BACL,EAAKzQ,SAAS,CAAE0Q,cAAe4B,IAC/B,IAAIzC,EAAc,EAAK3P,MAAM2P,mBACtBA,EAAYwC,GACnB,EAAKrS,SAAS,CAAE6P,YAAaA,IAC7BZ,EAAOM,SAAS8B,GAAc7B,QAAQ8B,GAAa3B,WAAWiB,OAAOwB,EAAiB,GACtF,EAAKpS,SAAS,CAAEiP,OAAQA,SAhYjB,EA0YnBsD,2BAA6B,SAACC,EAAGC,EAAGnH,GAChC,IAA2B,IAAvB,EAAKpL,MAAMkR,QACX,OACI,kBAAC,IAAD,CAAMzQ,GAAI,CACNwB,SAAU,wBACVjC,MAAO,CAAE0P,UAAW,EAAK1P,MAAM2P,YAAY,EAAK3P,MAAM+O,OAAOM,SAASiD,GAAGhD,QAAQiD,GAAG9C,WAAWrE,OAE/F,kBAAChJ,EAAA,EAAD,eAjZG,EAyZnBoQ,sBAAwB,WACpB,GAAkC,MAA9B,EAAKxS,MAAM+O,OAAOM,SAWtB,OARQ,EAAKrP,MAAM+O,OAAOM,SAAShL,KAAI,SAACoJ,EAASrC,GAC7C,OACI,kBAAChJ,EAAA,EAAD,CAAQoC,IAAK4G,EAAOhL,UAAU,MAAMI,MAAM,UAAUQ,QAAS,WACzD,EAAKlB,SAAS,CAAEiS,gBAAiB3G,MAEnCqC,EAAQpH,UAlaH,EAwanBoM,cAAgB,WACZ,GAAI,EAAKzS,MAAM+O,OAAOc,SAAW,EAAK7P,MAAM6P,QAmCxC,OAlCQ,EAAK7P,MAAM+O,OAAOc,QAAQxL,KAAI,SAACqO,EAAStH,GAC5C,IAAIwE,EAAQ,EAAK5P,MAAM6P,QAAQ6C,GAC/B,OAAa,MAAT9C,QAA2B1P,IAAV0P,GACjBjM,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,WAAaqN,EAAM/I,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACpH,IAAI+B,EAAQ,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACjEoO,EAAU,EAAK7P,MAAM6P,QACzBA,EAAQD,EAAMnL,KAAKqB,MAAQA,EAC3B,EAAKhG,SAAS,CAAE+P,QAASA,OAGzB,kBAACvL,EAAA,EAAD,CAAKC,GAAG,IAAInE,UAAU,OAAOoE,IAAK4G,GAC9B,kBAAC9J,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAASI,IAAKyH,EAAM9J,QACpB,kBAACvE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWjB,MAAO,CAAEoJ,UAAW,SAAWiG,EAAMvJ,MAChD,kBAAC1E,EAAA,EAAD,CAAcpB,MAAO,CAAEoJ,UAAW,SAAWiG,EAAM+C,aACnD,kBAAC9Q,EAAA,EAAD,CAAUtB,MAAO,CAAEoJ,UAAW,SAAWiG,EAAM1F,aAC/C,kBAAC9H,EAAA,EAAD,CAAQ5B,MAAM,SAASQ,QAAS,WAC5B,IAAI+N,EAAS,EAAK/O,MAAM+O,OACxBA,EAAOc,QAAQa,OAAOtF,EAAO,GAC7B,EAAKtL,SAAS,CAAEiP,OAAQA,MAH5B,oBAaZ,yBAAKvK,IAAK4G,QAxcX,EAgdnBwH,mBAAqB,WACjB,GAAI,EAAK5S,MAAMmQ,WAMX,OALQ,EAAKnQ,MAAMmQ,WAAW9L,KAAI,SAACuL,GAC/B,OACI,4BAAQpL,IAAKoL,EAAMnL,KAAMmL,EAAMvJ,UApd5B,EA2dnBwM,kBAAoB,SAACP,EAAGC,GACpB,GAAI,EAAKvS,MAAM+O,OAAOM,SAASiD,GAAGhD,QAAQiD,GAAG9C,WAsBzC,OArBQ,EAAKzP,MAAM+O,OAAOM,SAASiD,GAAGhD,QAAQiD,GAAG9C,WAAWpL,KAAI,SAACyO,EAAY1H,GACzE,OAAI,EAAKpL,MAAM2P,YAAYmD,GAEnB,kBAACxO,EAAA,EAAD,CAAKC,GAAG,IAAInE,UAAU,OAAOoE,IAAK4G,GAC9B,kBAAC9J,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KAAW,2CAAiB,EAAKxB,MAAM2P,YAAYmD,GAAYzM,OAC/D,kBAAC9E,EAAA,EAAD,KACI,gDAAsB,EAAKvB,MAAM2P,YAAYmD,GAAYxB,UAAUpB,QACnE,+CAAqB,EAAKlQ,MAAM2P,YAAYmD,GAAYrC,mBAAmBP,OAAS,EAAKlQ,MAAM2P,YAAYmD,GAAYnC,sBAAsBT,QAC7I,uCAAa,EAAKlQ,MAAM2P,YAAYmD,GAAYlC,WAAWV,QAC1D,EAAKmC,2BAA2BC,EAAGC,EAAGnH,GACvC,kBAAChJ,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAAS,WAAQ,EAAKiR,iBAAiBK,EAAGC,EAAGnH,KAApF,yBAOhB,yBAAK5G,IAAK4G,QA/eP,EAufnB2H,cAAgB,SAACT,GACb,GAA6C,MAAzC,EAAKtS,MAAM+O,OAAOM,SAASiD,GAAGhD,QA8DlC,OA3DQ,EAAKtP,MAAM+O,OAAOM,SAASiD,GAAGhD,QAAQjL,KAAI,SAACkL,EAAQnE,GACvD,OACI,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,OAAOoE,IAAK4G,GAC/B,kBAAC9J,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KAAW,uCAAa+N,EAAOlJ,OAC/B,kBAAC9E,EAAA,EAAD,KACI,kBAACmD,EAAA,EAAD,KACK,EAAKmO,kBAAkBP,EAAGlH,GAC3B,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,IAAInE,UAAU,QAClB,kBAACkB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,2BACA,kBAACD,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACjG,EAAA,EAAD,CAAQ7B,MAAO,CAAEoE,WAAY,OAAQuD,YAAa,QAAU1H,MAAM,UAAUQ,QAAS,WAC/C,OAA9B,EAAKpB,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE8R,MAAM,wDAGN,EAAKhS,SAAS,CAAE+Q,gBAAgB,EAAMM,aAAcmB,EAAGlB,YAAahG,MAL5E,qBAcZ,kBAAC9J,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,gCACA,kBAACD,EAAA,EAAD,CAAUhB,MAAO,CAAE2H,YAAa,SAC3B,EAAK8K,sBAAsBV,EAAGlH,GAC/B,kBAAChD,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACG,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,0BAA0BoC,GAAG,0BAA0BC,SAAU,EAAKtB,aAC9F,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAC1BQ,QAAS,WACL,IAAI+N,EAAS,EAAK/O,MAAM+O,OACpBtI,EAAW,IAAIC,SACnBD,EAASG,OAAO,OAAQ,EAAK5G,MAAMoO,MACnCzK,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,aAAcmE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACzGA,EAAItC,KAAKuC,SACT+K,EAAOM,SAASiD,GAAGhD,QAAQlE,GAAOO,UAAU0F,KAAKtN,EAAItC,KAAKsJ,mBAAmBtG,KAC7E,EAAK3E,SAAS,CAAEiP,OAAQA,UARxC,UAgBZ,kBAACzN,EAAA,EAAD,CAAMlB,UAAU,QACZ,kBAACgC,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAAS,WAAQ,EAAKgR,aAAaM,EAAGlH,KAA7E,gCA7iBjB,EAwjBnB6H,eAAiB,WACb,GAAmC,OAA/B,EAAKjT,MAAM+O,OAAOM,eAAoDnP,IAA/B,EAAKF,MAAM+O,OAAOM,UAAgE,IAAtC,EAAKrP,MAAM+O,OAAOM,SAASa,SAAgD,IAAhC,EAAKlQ,MAAM+R,gBAA7I,CAII,IAAI3G,EAAQ,EAAKpL,MAAM+R,gBACnBtE,EAAU,EAAKzN,MAAM+O,OAAOM,SAASjE,GACzC,OACI,6BACI,kBAAC9J,EAAA,EAAD,CAAMlB,UAAU,OACZ,kBAACoB,EAAA,EAAD,KAAW,4BAAKiM,EAAQpH,OACxB,kBAAC9E,EAAA,EAAD,KACI,kBAACmD,EAAA,EAAD,KACK,EAAKqO,cAAc3H,GACpB,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,QACnB,kBAACkB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,uBACA,kBAACD,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC/D,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,aAAX,gBAEJ,kBAACjE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,YAAYoC,GAAG,YAAYnC,MAAO,EAAKtG,MAAM0R,WAAa,GAAIhJ,SAAU,EAAKxC,gBAEzG,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACnC,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,WAAQ,EAAKyQ,UAAUrG,KAAxD,mBAMpB,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,IAAIhE,MAAO,CAAE2S,UAAW,OAAQC,aAAc,SAClD,kBAAC/Q,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAAS,WAAQ,EAAK2Q,cAAcvG,KAA3E,8BAzlBb,EAqmBnB4H,sBAAwB,SAACV,EAAGC,GAQxB,OAPQ,EAAKvS,MAAM+O,OAAOM,SAASiD,GAAGhD,QAAQiD,GAAG5G,UAAUtH,KAAI,SAAC0G,EAAoBK,GAChF,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBL,QAzmBd,EA+mBnBqI,yBAA2B,WAQvB,OAPQ,EAAKpT,MAAMwQ,cAAcC,mBAAmBpM,KAAI,SAAC0G,EAAoBK,GACzE,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBL,QAnnBd,EA0nBnBsI,4BAA8B,WAQ1B,OAPQ,EAAKrT,MAAMwQ,cAAcG,sBAAsBtM,KAAI,SAAC0G,EAAoBK,GAC5E,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBL,QA9nBd,EAqoBnBuI,eAAiB,WAQb,OAPQ,EAAKtT,MAAMwQ,cAAcI,WAAWvM,KAAI,SAACkP,EAASnI,GACtD,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBmI,QAzoBd,EAgpBnBC,aAAe,WASX,OARQ,EAAKxT,MAAMwQ,cAAcc,UAAUjN,KAAI,SAACoP,EAAOrI,GACnD,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBqI,EAAMC,KACvB,qCAAWD,EAAMvJ,kBAnpB7B,EAAKlK,MAAQ,CACT2F,SAAS,EACTvC,SAAU,GACVG,WAAW,EACXiD,cAAc,EACdqK,gBAAgB,EAChB9B,OAAQ,CACJ4E,WAAW,EACXnK,KAAM,IAEVmG,YAAa,GAGbE,QAAS,GAGTW,cAAe,CACXnK,KAAM,GACNsK,sBAAuB,GACvBF,mBAAoB,GACpBa,UAAW,GACXV,WAAY,IAEhBgD,uBAAwB,2BACxB7B,gBAAiB,EACjBb,SAAS,GAIb,EAAK/N,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4P,kBAAoB,EAAKA,kBAAkB5P,KAAvB,gBACzB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAKuS,eAAiB,EAAKA,eAAevS,KAApB,gBACtB,EAAKqS,cAAgB,EAAKA,cAAcrS,KAAnB,gBACrB,EAAK+Q,UAAY,EAAKA,UAAU/Q,KAAf,gBACjB,EAAK2R,2BAA6B,EAAKA,2BAA2B3R,KAAhC,gBArCnB,E,qDA8pBT,IAAD,OACL,OAAIO,KAAKjB,MAAM6Q,eAEP,kBAACjM,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,IAAIhE,MAAO,CAAEoE,WAAY,OAAQuD,YAAa,SAClD,6BACI,sDACA,kBAAC6B,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACHtD,KAAKkC,cACLlC,KAAKqC,iBAEV,kBAACgB,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,OACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,yBAAyBlE,MAAOrF,KAAKjB,MAAMwQ,cAAcnK,MAAQ,GAClHqC,SAAU,SAACvC,GACP,IAAIqK,EAAgB,EAAKxQ,MAAMwQ,cAC/BA,EAAcnK,KAAOF,EAAMC,OAAOE,MAClC,EAAKxG,SAAS,CAAE0Q,cAAeA,IAAiB,WAC5CtJ,QAAQC,IAAI,EAAKnH,eAMrC,kBAACsE,EAAA,EAAD,CAAKC,GAAG,KACJ,oDACA,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUhB,MAAO,CAAE2H,YAAa,SAC5B,uBAAG3H,MAAO,CAAEoJ,UAAW,SAAvB,qBACC1I,KAAKmS,2BACN,uBAAG7S,MAAO,CAAEoJ,UAAW,SAAvB,gCACC1I,KAAKoS,8BACN,kBAACjL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACG,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,SAAS4D,KAAK,yBAAyBoC,GAAG,yBAAyBnC,MAAOrF,KAAKjB,MAAM4T,uBAC7GlL,SAAU,SAACvC,GACP,EAAKrG,SAAS,CAAE8T,uBAAwBzN,EAAMC,OAAOE,UAEzD,4DACA,4DAEJ,kBAACkC,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,OAAOiG,SAAUzH,KAAKmG,aAClD,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAC1BQ,QAAS,WACL,EAAKlB,SAAS,CAAEyD,WAAW,IAC3B,IAAIiN,EAAgB,EAAKxQ,MAAMwQ,cAC3B/J,EAAW,IAAIC,SACnBD,EAASG,OAAO,OAAQ,EAAK5G,MAAMoO,MACnCzK,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,aAAcmE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACzGA,EAAItC,KAAKuC,QAEiC,6BAAtC,EAAKhE,MAAM4T,uBACXpD,EAAcC,mBAAmBY,KAAKtN,EAAItC,KAAKsJ,mBAAmBtG,KAEvB,4BAAtC,EAAKzE,MAAM4T,wBAChBpD,EAAcG,sBAAsBU,KAAKtN,EAAItC,KAAKsJ,mBAAmBtG,KAEzE,EAAK3E,SAAS,CAAE0Q,cAAeA,IAAiB,gBAG3CzM,EAAItC,KAAKyC,SACd,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UAEvC,EAAKpE,SAAS,CAAEyD,WAAW,SArBvC,WA8BhB,kBAACe,EAAA,EAAD,CAAKC,GAAG,KACJ,wCACA,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUhB,MAAO,CAAE2H,YAAa,SAC3BjH,KAAKqS,iBACN,kBAAClL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACG,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,OAAOiG,SAAUzH,KAAKmG,aAClD,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAC1BQ,QAAO,sBAAE,8BAAAyC,EAAA,6DACL,EAAK3D,SAAS,CAAEyD,WAAW,IACvBiN,EAAgB,EAAKxQ,MAAMwQ,eAC3B/J,EAAW,IAAIC,UACVE,OAAO,cAAe,EAAK5G,MAAMoO,MAJrC,SAMCzK,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,kBAAmBkE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACxHA,EAAItC,KAAKuC,QACTwM,EAAcI,WAAWS,KAAKtN,EAAItC,KAAKoS,QACvC,EAAK/T,SAAS,CAAE0Q,cAAeA,KAE1BzM,EAAItC,KAAKyC,SACd,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UAEvC,EAAKpE,SAAS,CAAEyD,WAAW,OAC5ByD,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEsD,SAAU,4BAA8B6D,EAAK1D,WAAW,OAhBvE,4CADb,WAyBhB,kBAACe,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,QACnB,sCACA,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKN,KAAKuS,eACN,kBAACpL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC/D,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,YAAX,OAEJ,kBAACjE,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAM8T,UAAY,GAAIpL,SAAUzH,KAAKiF,gBAEtG,kBAAC5B,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,uBAAX,gBAEJ,kBAACjE,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,sBAAsBoC,GAAG,sBAAsBnC,MAAOrF,KAAKjB,MAAM+T,qBAAuB,GAAIrL,SAAUzH,KAAKiF,gBAEvI,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACnC,EAAA,EAAD,CAAQ5B,MAAM,UACVQ,QAAS,WACL,IAAIwP,EAAgB,EAAKxQ,MAAMwQ,cAC3BsD,EAAW,CAAEJ,IAAK,EAAK1T,MAAM8T,SAAU5J,YAAa,EAAKlK,MAAM+T,qBACnEvD,EAAcc,UAAUD,KAAKyC,GAC7B,EAAKhU,SAAS,CAAE0Q,cAAeA,EAAesD,SAAU,GAAIC,oBAAqB,KACjF7M,QAAQC,IAAI,EAAKnH,SANzB,aAexB,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,MAAMY,QAASC,KAAKsP,4BAAtC,UACA,kBAACnO,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAAUQ,QAASC,KAAK8P,kBAAtD,eAWpB,kBAACnM,EAAA,EAAD,KACI,6CACA,kBAACmF,EAAA,EAAD,CAAM3J,UAAU,QACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,OAAOyB,GAAI,GAAtB,eACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOnC,MAAOrF,KAAKjB,MAAM+O,OAAO1I,MAAQ,GAAIqC,SAAU,SAACvC,GACrF,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAO1I,KAAOF,EAAMC,OAAOE,MAC3B,EAAKxG,SAAS,CAAEiP,OAAQA,UAMxC,kBAACzK,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAWyB,GAAI,GAA1B,mBACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAM+O,OAAOiF,UAAY,GAAItL,SAAU,SAACvC,GACjG,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAOiF,SAAW7N,EAAMC,OAAOE,MAC/B,EAAKxG,SAAS,CAAEiP,OAAQA,WAM5C,kBAACrK,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,cAAcyB,GAAI,GAA7B,sBACA,kBAAC1F,EAAA,EAAD,CAAK0F,GAAI,IACL,kBAACxB,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,IAAI5D,KAAK,cAAcoC,GAAG,cAAcnC,MAAOrF,KAAKjB,MAAM+O,OAAO7E,aAAe,GAAIxB,SAAU,SAACvC,GACvH,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAO7E,YAAc/D,EAAMC,OAAOE,MAClC,EAAKxG,SAAS,CAAEiP,OAAQA,UAKxC,kBAACzK,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC3D,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,aAAX,wBAEJ,kBAACjE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACiE,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,SAAS4D,KAAK,YAAYoC,GAAG,YAAYnC,MAAOrF,KAAKjB,MAAM+O,OAAO4E,YAAa,EACvGjL,SAAU,SAACvC,GACP,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAO4E,UAAYxN,EAAMC,OAAOE,MAChC,EAAKxG,SAAS,CAAEiP,OAAQA,MAE5B,wCACA,8CAQpB,kBAACzK,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC3D,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAK/D,MAAO,CAAE2S,UAAW,OAAQC,aAAc,QAAU5O,GAAG,KACxD,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,SAAX,UAEJ,kBAACjE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACiE,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,OAAO4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAOrF,KAAKjB,MAAM+O,OAAOkF,OAAS,GACzFvL,SAAU,SAACvC,GACP,IAAI4I,EAAS,EAAK/O,MAAM+O,OACxBA,EAAOkF,MAAQ9N,EAAMC,OAAOE,MAC5B,EAAKxG,SAAS,CAAEiP,OAAQA,WAQhD,kBAACzK,EAAA,EAAD,CAAKC,GAAG,MACJ,wBAAIhE,MAAO,CAAEoJ,UAAW,SAAxB,QACA,kBAACvB,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAM+O,OAAOvF,KAAKI,UAAY,GAAIlB,SAAUzH,KAAKsI,cAClH,kBAACjB,EAAA,EAAD,CAAOC,IAAI,YAAX,cAEJ,kBAACH,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAOrF,KAAKjB,MAAM+O,OAAOvF,KAAKK,OAAS,GAAInB,SAAUzH,KAAKsI,cACzG,kBAACjB,EAAA,EAAD,CAAOC,IAAI,SAAX,YAKZ,wBAAIhI,MAAO,CAAEoJ,UAAW,QAAUvJ,UAAU,aAA5C,WACA,yBAAKG,MAAO,CAAEoJ,UAAW,SACrB,kBAACjF,EAAA,EAAD,KACKzD,KAAKwR,iBAEV,kBAACnR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+G,EAAA,EAAD,CAAOC,IAAI,YAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,SAAS4D,KAAK,WAAWoC,GAAG,WAAW+B,YAAY,mBAAmBlE,MAAOrF,KAAKjB,MAAMoQ,SAAU1H,SAAU,SAACvC,GACrH,EAAKrG,SAAS,CAAEsQ,SAAUjK,EAAMC,OAAOE,QACvC,IAAI8J,EAAW,EAAKpQ,MAAMmQ,WAAW+D,QAAO,SAAC9P,GACzC,OAAOA,EAAEiC,OAASF,EAAMC,OAAOE,SAChC,GACH,EAAKxG,SAAS,CAAEuQ,WAAYD,EAAS3L,QAEpCxD,KAAK2R,sBAEV,kBAACxQ,EAAA,EAAD,CAAQhC,UAAU,OAAOI,MAAM,UAAUQ,QAAS,WACjC,EAAKhB,MAAM+O,OACjBc,QAAQwB,KAAK,EAAKrR,MAAMqQ,YAC/B,IAAIR,EAAU,EAAK7P,MAAM6P,QACzBA,EAAQ,EAAK7P,MAAMqQ,YAAc,EAAKrQ,MAAMmQ,WAAW+D,QAAO,SAACtE,GAC3D,OAAOA,EAAMnL,MAAQ,EAAKzE,MAAMqQ,cACjC,GACH,EAAKvQ,SAAS,CAAE+P,QAASA,IACzB3I,QAAQC,IAAI,EAAKnH,SARrB,UAeZ,wBAAIO,MAAO,CAAEoJ,UAAW,QAAUvJ,UAAU,aAA5C,YACA,yBAAKG,MAAO,CAAEoJ,UAAW,SACpB1I,KAAKuR,yBAETvR,KAAKgS,iBACN,wBAAI7S,UAAU,MAAMG,MAAO,CAAEoJ,UAAW,SAAxC,mBACA,kBAACrF,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACjD,EAAA,EAAD,CAAMlB,UAAU,QACZ,kBAACmB,EAAA,EAAD,KACI,kBAAC6G,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC/D,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,cAAX,iBAEJ,kBAACjE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,aAAaoC,GAAG,aAAanC,MAAOrF,KAAKjB,MAAMwR,YAAc,GAAI9I,SAAUzH,KAAKiF,gBAE5G,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACnC,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAASC,KAAKsQ,YAAtC,qBAQxB,kBAAC7M,EAAA,EAAD,CAAKtE,UAAU,OACX,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,QACX,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,SAASQ,QAASC,KAAK8F,cAArC,WAEJ,kBAACzC,EAAA,EAAD,CAAKlE,UAAU,QACX,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAASC,KAAKsF,cAAtC,YAIPtF,KAAKqC,gBACLrC,KAAKkC,cACLlC,KAAKqP,yB,GA99BCnP,IAAMC,WCmZlB+S,G,kDAjZX,WAAYvU,GAAQ,IAAD,8BACf,cAAMA,IAgBVuD,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WApB5C,EAyBnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAASjD,MAAO,CACZ2E,OAAQ,IAAKL,OAAQ,OAAQM,SAAU,WAAYC,IAAK,QAASC,KAAM,QACvEC,OAAQ,QAASC,MAAO,OAAQC,OAAQ,OAAQC,MAAO,QACxDjF,MAAM,aA/BF,EAoCnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BA5CO,EAkDnB6P,kBAAoB,WAChB,OAAI,EAAKtQ,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,YAKb,6BA1DO,EA+DnB2G,WAAa,SAACjB,GACV,EAAKrG,SAAS,CAAEsO,KAAMjI,EAAMC,OAAOiB,MAAM,MAhE1B,EAmEnBnB,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SApEnC,EAuEnB8M,yBAA2B,WA+BvB,OA9BQ,EAAKpT,MAAM0P,UAAUe,mBAAmBpM,KAAI,SAAC0G,EAAoBK,GACrE,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBL,EACb,kBAAC,IAAD,CAAMtK,GAAI,CACNwB,SAAU,iBACVjC,MAAO,CAAE0K,qBAAsBK,KAE/B,kBAAC3I,EAAA,EAAD,CAAQ5B,MAAM,UAAUD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,eAErE,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,SAASD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,cAAcY,QAAS,WACnF,IAAI0O,EAAY,EAAK1P,MAAM0P,UAC3BA,EAAUe,mBAAmBC,OAAOtF,EAAO,GAC3C,EAAKtL,SAAS,CAAE4P,UAAWA,IAC3B/L,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,OACdL,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgByI,EAAoB,CAAElH,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,OAI/H,EAAKjE,SAAS,CAAEsD,SAAU,+CA7FvC,EAyGnBiQ,4BAA8B,WAgC1B,OA/BQ,EAAKrT,MAAM0P,UAAUiB,sBAAsBtM,KAAI,SAAC0G,EAAoBK,GACxE,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBL,EACb,kBAAC,IAAD,CAAMtK,GAAI,CACNwB,SAAU,iBACVjC,MAAO,CAAE0K,qBAAsBK,KAE/B,kBAAC3I,EAAA,EAAD,CAAQ5B,MAAM,OAAOD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,eAElE,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,SAASD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,cAAcY,QAAS,WACnF,IAAI0O,EAAY,EAAK1P,MAAM0P,UAC3BA,EAAUiB,sBAAsBD,OAAOtF,EAAO,GAC9C,EAAKtL,SAAS,CAAE4P,UAAWA,IAC3B/L,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,OACdL,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgByI,EAAoB,CAAElH,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,OAI/H,EAAKjE,SAAS,CAAEsD,SAAU,+CA/HvC,EA4InBkQ,eAAiB,WA2Cb,OA1CQ,EAAKtT,MAAM0P,UAAUkB,WAAWvM,KAAI,SAACkP,EAASnI,GAClD,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBmI,EACb,kBAACnR,EAAA,EAAD,CAAQ5B,MAAM,UAAUD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,YAC7DY,QAAS,WACD4B,EAAMc,WAAWhB,OACjB,EAAK5C,SAAS,CAAEyD,WAAW,IAC3BI,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,mBAAqBgR,EAAS,CAAE1P,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACtHmD,QAAQC,IAAIpD,EAAItC,MAChB,EAAK3B,SAAS,CACVuU,IAAK,+BAAiCtQ,EAAItC,KAC1C6S,SAAS,EACT/Q,WAAW,WAM/B,kBAACnB,EAAA,EAAD,CAAQ5B,MAAM,SAASD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,cAAcY,QAAS,WACnF,IAAI0O,EAAY,EAAK1P,MAAM0P,UAC3BA,EAAUkB,WAAWF,OAAOtF,EAAO,GACnC,EAAKtL,SAAS,CAAE4P,UAAWA,IAC3B/L,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,OACdL,IAAMmD,OAAOlE,EAAMc,WAAWnB,WAAa,mBAAqBgR,EAAS,CAAE1P,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,OAO7H,EAAKjE,SAAS,CAAEsD,SAAU,+CA9KvC,EA0LnBoQ,aAAe,WA6BX,OA5BQ,EAAKxT,MAAM0P,UAAU4B,UAAUjN,KAAI,SAACoP,EAAOrI,GAC/C,OACI,yBAAK5G,IAAK4G,GACN,2BAAIA,EAAQ,EAAZ,KAAiBqI,EAAMC,KACvB,qCAAWD,EAAMvJ,aACjB,kBAAC,IAAD,CAAMzJ,GAAI,IAGN,kBAAC2B,EAAA,EAAD,CAAQ5B,MAAM,UAAUD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,eAErE,kBAACgC,EAAA,EAAD,CAAQ5B,MAAM,SAASD,MAAO,CAAEoE,WAAY,QAAUvE,UAAU,cAAcY,QAAS,WACnF,IAAI0O,EAAY,EAAK1P,MAAM0P,UAC3BA,EAAU4B,UAAUZ,OAAOtF,EAAO,GAClC,EAAKtL,SAAS,CAAE4P,UAAWA,IAC3B/L,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,QAId,EAAKlE,SAAS,CAAEsD,SAAU,8CA7MlD,EAAKpD,MAAQ,CACT2F,SAAS,EACTvC,SAAU,GACVG,WAAW,EACXmM,UAAW,EAAK9P,MAAMI,MAAM+F,SAAS/F,MAAM0P,UAC3C4E,SAAS,EACTV,uBAAwB,4BAG5B,EAAKzQ,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4P,kBAAoB,EAAKA,kBAAkB5P,KAAvB,gBACzB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBAbN,E,qDA0NT,IAAD,OACL,OAAIO,KAAKjB,MAAMsU,QAEP,kBAAC1P,EAAA,EAAD,KACI,4BAAQlD,MAAM,SAAS6S,MAAM,gBAAgB9O,MAAM,OAAOD,OAAO,QAAQ2C,IAAKlH,KAAKjB,MAAMqU,MACzF,kBAACjS,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAAS,WAAQ,EAAKlB,SAAS,CAAEwU,SAAS,MAAlE,YAMJ,kBAAC1P,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KAAKhE,MAAO,CAAEoE,WAAY,OAAQuD,YAAa,SACnD,6BACI,sDACA,kBAAC6B,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACHtD,KAAKkC,cACLlC,KAAKqC,iBAEV,kBAACgB,EAAA,EAAD,CAAKC,GAAG,MACJ,4BAAKtD,KAAKjB,MAAM0P,UAAUrJ,OAG9B,kBAAC/B,EAAA,EAAD,CAAKC,GAAG,KACJ,oDACA,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUhB,MAAO,CAAE2H,YAAa,SAC5B,uBAAG3H,MAAO,CAAEoJ,UAAW,SAAvB,qBACC1I,KAAKmS,2BACN,uBAAG7S,MAAO,CAAEoJ,UAAW,SAAvB,iCACC1I,KAAKoS,8BACN,kBAACjL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACG,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,SAAS4D,KAAK,yBAAyBoC,GAAG,yBAAyBnC,MAAOrF,KAAKjB,MAAM4T,uBAC7GlL,SAAU,SAACvC,GACP,EAAKrG,SAAS,CAAE8T,uBAAwBzN,EAAMC,OAAOE,UAEzD,4DACA,4DAEJ,kBAACkC,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,OAAOiG,SAAUzH,KAAKmG,aAClD,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAC1BQ,QAAS,WACL,EAAKlB,SAAS,CAAEyD,WAAW,IAC3B,IAAIiR,EAAe,EAAKxU,MAAM0P,UAC1BjJ,EAAW,IAAIC,SACnBD,EAASG,OAAO,OAAQ,EAAK5G,MAAMoO,MACnCzK,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,aAAcmE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACzGA,EAAItC,KAAKuC,QAEiC,6BAAtC,EAAKhE,MAAM4T,uBACXY,EAAa/D,mBAAmBY,KAAKtN,EAAItC,KAAKsJ,mBAAmBtG,KAEtB,4BAAtC,EAAKzE,MAAM4T,wBAChBY,EAAa7D,sBAAsBU,KAAKtN,EAAItC,KAAKsJ,mBAAmBtG,KAExE,EAAK3E,SAAS,CAAE4P,UAAW8E,IAAgB,WACvC7Q,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,SAIdL,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,cAAgByB,EAAItC,KAAKsJ,mBAAmBtG,KACnF,EAAK3E,SAAS,CAAEsD,SAAU,6BAOjCW,EAAItC,KAAKyC,SACd,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UAEvC,EAAKpE,SAAS,CAAEyD,WAAW,SAjCvC,WA0ChB,kBAACe,EAAA,EAAD,CAAKC,GAAG,KACJ,wCACA,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUhB,MAAO,CAAE2H,YAAa,SAC3BjH,KAAKqS,iBACN,kBAAClL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACG,EAAA,EAAD,CAAOpI,UAAU,MAAMqC,KAAK,OAAOiG,SAAUzH,KAAKmG,aAClD,kBAAChF,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAC1BQ,QAAO,sBAAE,8BAAAyC,EAAA,6DACL,EAAK3D,SAAS,CAAEyD,WAAW,IACvBiR,EAAe,EAAKxU,MAAM0P,WAC1BjJ,EAAW,IAAIC,UACVE,OAAO,cAAe,EAAK5G,MAAMoO,MAJrC,SAMCzK,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,kBAAmBkE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACxHA,EAAItC,KAAKuC,QACTwQ,EAAa5D,WAAWS,KAAKtN,EAAItC,KAAKoS,QACtC,EAAK/T,SAAS,CAAE4P,UAAW8E,IAAgB,WACvC7Q,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,SAIdL,IAAMmD,OAAOlE,EAAMc,WAAWnB,WAAa,mBAAqBwB,EAAItC,KAAKoS,QACzE,EAAK/T,SAAS,CAAEsD,SAAU,6BAKjCW,EAAItC,KAAKyC,SACd,EAAKpE,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UAEvC,EAAKpE,SAAS,CAAEyD,WAAW,OAC5ByD,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEsD,SAAU,4BAA8B6D,EAAK1D,WAAW,OA3BvE,4CADb,WAoChB,kBAACe,EAAA,EAAD,CAAKC,GAAG,KAAKnE,UAAU,QACnB,sCACA,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKN,KAAKuS,eACN,kBAACpL,EAAA,EAAD,CAAWC,KAAG,GACV,kBAAC/D,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,YAAX,OAEJ,kBAACjE,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAOrF,KAAKjB,MAAM8T,UAAY,GAAIpL,SAAUzH,KAAKiF,gBAEtG,kBAAC5B,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,uBAAX,gBAEJ,kBAACjE,EAAA,EAAD,CAAKlE,UAAU,MAAMmE,GAAG,KACpB,kBAACiE,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,sBAAsBoC,GAAG,sBAAsBnC,MAAOrF,KAAKjB,MAAM+T,qBAAuB,GAAIrL,SAAUzH,KAAKiF,gBAEvI,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACnC,EAAA,EAAD,CAAQ5B,MAAM,UACVQ,QAAS,WACL,IAAIwT,EAAe,EAAKxU,MAAM0P,UAC1BoE,EAAW,CAAEJ,IAAK,EAAK1T,MAAM8T,SAAU5J,YAAa,EAAKlK,MAAM+T,qBACnES,EAAalD,UAAUD,KAAKyC,GAC5B,EAAKhU,SAAS,CAAE4P,UAAW8E,EAAcV,SAAU,GAAIC,oBAAqB,KAC5EpQ,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAM0P,UAAUjL,IAAM,aAAc,EAAKzE,MAAM0P,UAAW,CAAE7L,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACsQ,GAChKlN,QAAQC,IAAIiN,EAAS3S,MACjB2S,EAAS3S,KAAKuC,QAId,EAAKlE,SAAS,CAAEsD,SAAU,0BAZ1C,sB,GA/WhCjC,IAAMC,WCqCnBqT,G,kDAnCX,WAAY7U,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,GAFE,E,qDAOT,IAAD,OAKL,OAJA2D,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,WAAatB,KAAKrB,MAAM6B,KAAKoF,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC9H,IAAI+B,EAAQ,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACrE,EAAK3B,SAAS,CAAEgG,MAAOA,OAGvB,6BACI,kBAACxE,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAASI,IAAKlH,KAAKjB,MAAM8F,QACzB,kBAACvE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWjB,MAAO,CAACoJ,UAAU,SAAU1I,KAAKrB,MAAM6B,KAAK4E,MACvD,kBAAC1E,EAAA,EAAD,CAAcpB,MAAO,CAACoJ,UAAU,SAAU1I,KAAKrB,MAAM6B,KAAKkR,aAC1D,kBAAC9Q,EAAA,EAAD,CAAUtB,MAAO,CAACoJ,UAAU,SAAU1I,KAAKrB,MAAM6B,KAAKyI,aACtD,kBAAC,IAAD,CAAMzJ,GAAI,CACNwB,SAAU,cACVjC,MAAO,CAAE8P,OAAQ7O,KAAKrB,MAAM6B,QAE5B,kBAACW,EAAA,EAAD,qB,GA1BHjB,IAAMC,WC6HhBsT,G,kDA1HX,WAAY9U,GAAQ,IAAD,8BACf,cAAMA,IAYVqD,kBAbmB,sBAaC,sBAAAQ,EAAA,8DACcvD,IAA1B0C,EAAMc,WAAWhB,KADL,gCAENiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,UAAW,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACjGA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAE6U,QAAS5Q,EAAItC,KAAKkT,UAClC,EAAK7U,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,QATvB,uBAaNI,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,gBAAiB,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACvGA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAE+P,QAAS9L,EAAItC,KAAKoO,UAClC,EAAK/P,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,QApBvB,2CAbD,EAuCnBJ,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WA1C3B,EA+CnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAlDR,EAuDnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BA7DR,EAAKT,MAAQ,CACT2U,QAAS,GACT9E,QAAS,GACTzM,SAAU,GACVG,WAAW,GAEf,EAAKY,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBAVN,E,qDAuEf,IAAI0D,EAWAwQ,EAWJ,OArB0B,MAAtB3T,KAAKjB,MAAM2U,cAA0CzU,IAAvBe,KAAKjB,MAAM2U,UACzCvQ,EAAInD,KAAKjB,MAAM2U,QAAQtQ,KAAI,SAACyL,GACxB,OACI,kBAACxL,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKsL,EAAOrL,KACpB,kBAAC,GAAD,CAAYhD,KAAMqO,SAOR,MAAtB7O,KAAKjB,MAAM6P,cAA0C3P,IAAvBe,KAAKjB,MAAM6P,UACzC+E,EAAI3T,KAAKjB,MAAM6P,QAAQxL,KAAI,SAACuL,GACxB,OACI,kBAACtL,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKoL,EAAMnL,KACnB,kBAAE,GAAF,CAAahD,KAAMmO,SAO/B,6BACI,kBAAClL,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,cACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,uBAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,WACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVgE,GAEL,wBAAI7D,MAAO,CAAEsE,OAAQ,SAArB,WACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVwU,GAEJ3T,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,qB,GArHInC,IAAMC,WCmRjByT,G,kDAnRX,WAAYjV,GAAQ,IAAD,8BACf,cAAMA,IAUVqD,kBAXmB,sBAWC,sBAAAQ,EAAA,yDACkB,OAA9B,EAAK7D,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MADpD,wBAEkBE,IAA1B0C,EAAMc,WAAWhB,KAFT,uBAGR,EAAK5C,SAAS,CAAEyD,WAAW,IAHnB,SAIFI,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM8P,OAAOrL,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,KAA3I,+BAAAL,EAAA,MAAgJ,WAAOM,GAAP,SAAAN,EAAA,sDAC9IM,EAAItC,KAAKuC,QACTkD,QAAQC,IAAIpD,EAAItC,KAAKqO,QACrB,EAAKhQ,SAASiE,EAAItC,KAAKqO,QACvBnM,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,WAAa,EAAK3C,MAAMI,MAAM+F,SAAS/F,MAAM8P,OAAOjJ,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACrJ,IAAI+B,EAAQ,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACrE,EAAK3B,SAAS,CAAEgG,MAAOA,OAE3B,EAAKhG,SAAS,CAAEyD,WAAW,KAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,IAXuF,2CAAhJ,uDAJE,2CAXD,EAkCnBJ,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WArC5C,EA0CnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA7CR,EAkDnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BA1DO,EAgEnBqU,kBAAoB,WAChB,OAAI,EAAK9U,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,YAKb,6BAxEO,EA6EnByF,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA9EnC,EAiFnBc,WAAa,SAACjB,GACV,GAAIA,EAAMC,OAAOiB,OAASlB,EAAMC,OAAOiB,MAAM,GAAI,CAC7C,EAAKvH,SAAS,CAAEsO,KAAMjI,EAAMC,OAAOiB,MAAM,KACzC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACb,EAAK3H,SAAS,CAAEgG,MAAO2B,EAAErB,OAAOsB,UAEpCJ,EAAOK,cAAcxB,EAAMC,OAAOiB,MAAM,MAxF7B,EA4FnBd,aA5FmB,uCA4FJ,WAAOJ,GAAP,eAAA1C,EAAA,yDACX,EAAK3D,SAAS,CAAEyD,WAAW,SAGGrD,IAA1B0C,EAAMc,WAAWhB,KAJV,oBAKH+D,EAAW,IAAIC,SACe,OAA9B,EAAK9G,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAN7D,oBAOoB,MAAnB,EAAKA,MAAMoO,KAPZ,wBAQC3H,EAASG,OAAO,cAAe,EAAK5G,MAAMoO,MAR3C,SASOzK,IAAMqC,IAAIpD,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM6G,QAASJ,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACrIA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE+G,QAAS9C,EAAItC,KAAKoF,QAASuH,UAAMlO,EAAW4F,WAAO5F,IAAa,WAC5EyD,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM8P,OAAOrL,IAAK,EAAKzE,MAAO,CACrG6D,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,UAMnE,EAAKzD,SAAS,CAAEsD,SAAU,8BAzBnC,+BA8BC,EAAKtD,SAAS,CAACgG,WAAO5F,IAAY,WAC9ByD,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAa,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM8P,OAAOrL,IAAK,EAAKzE,MAAO,CACrG6D,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,UAtCpE,uCAgDHkD,EAASG,OAAO,cAAe,EAAK5G,MAAMoO,MAhDvC,UAiDGzK,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,UAAWkE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACpHmD,QAAQC,IAAIpD,EAAItC,MACZsC,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE+G,QAAS9C,EAAItC,KAAKoF,QAASuH,UAAMlO,EAAW4F,WAAO5F,IAAa,WAC5EyD,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,UAAW,EAAKtC,MAAO,CACxD6D,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,UAMnE,EAAKzD,SAAS,CAAEsD,SAAU,8BAlE/B,4CA5FI,wDAuKnB2R,mBAAqB,WACjB,GAAkC,OAA9B,EAAKnV,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE,OACI,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAAS,WAC5C,EAAKlB,SAAS,CAAEyD,WAAW,IAC3BI,IAAMmD,OAAOlE,EAAMc,WAAWnB,WAAa,WAAa,EAAKvC,MAAM6G,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACxHA,EAAItC,KAAKuC,OACTL,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,WAAa,EAAKtC,MAAMyE,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAChHA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,IAG3C,EAAK7F,SAAS,CAAEyD,WAAW,EAAOH,SAAUW,EAAItC,KAAKyC,aAE1D8C,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEsD,SAAU6D,OAI9B,EAAKnH,SAAS,CAAEyD,WAAW,EAAOH,SAAU,yBAA2BW,EAAItC,KAAKyC,eAhB5F,WA1KO,EAmMnBqF,YAAc,SAACpD,GACX,IAAIqD,EAAO,EAAKxJ,MAAMwJ,KACtBA,EAAKrD,EAAMC,OAAOC,MAAQF,EAAMC,OAAOqD,QACvC,EAAK3J,SAAS,CAAE0J,KAAMA,IAAQ,WAC1BtC,QAAQC,IAAI,EAAKnH,MAAMwJ,UAvMZ,EA2MnBE,WAAa,WACT,GAAkC,OAA9B,EAAK9J,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE,OACI,6BACI,wBAAIO,MAAO,CAAEoJ,UAAW,SAAxB,QACA,kBAACvB,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,WAAWoC,GAAG,WAAWnC,MAAO,EAAKtG,MAAMwJ,KAAKI,UAAY,GAAIlB,SAAU,EAAKa,cAC3G,kBAACjB,EAAA,EAAD,CAAOC,IAAI,YAAX,cAEJ,kBAACH,EAAA,EAAD,CAAWhI,UAAU,OAAOiI,KAAG,GAC3B,kBAACG,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,QAAQoC,GAAG,QAAQnC,MAAO,EAAKtG,MAAMwJ,KAAKK,OAAS,GAAInB,SAAU,EAAKa,cAClG,kBAACjB,EAAA,EAAD,CAAOC,IAAI,SAAX,YApNhB,EAAKvI,MAAQ,CACTuD,WAAW,EACXH,SAAU,GACVX,KAAM,SACN+G,KAAM,IAEV,EAAKuL,mBAAqB,EAAKA,mBAAmBrU,KAAxB,gBARX,E,qDA8Nf,OACI,kBAACkE,EAAA,EAAD,KACI,iDACA,yBAAKrE,MAAO,CAAEkL,UAAW,QAASzD,SAAU,SAAWG,IAAKlH,KAAKjB,MAAM8F,MAAO4F,IAAI,KAClF,kBAAC3B,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,oBAAoBlE,MAAOrF,KAAKjB,MAAMqG,MAAQ,GAAIqC,SAAUzH,KAAKiF,gBAE1H,kBAACkC,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,cAAcoC,GAAG,cAAc+B,YAAY,oBAAoBlE,MAAOrF,KAAKjB,MAAM2S,aAAe,GAAIjK,SAAUzH,KAAKiF,iBAGnJ,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,IAAIhE,MAAO,CAAEoE,WAAY,SAC7B,kBAACyD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,SAAS4D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,aAAalE,MAAOrF,KAAKjB,MAAMyC,MAAQ,GAAIiG,SAAUzH,KAAKiF,cAC7G,0CACA,2CAGR,kBAACkC,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,gBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAUzH,KAAKmG,gBAKpE,kBAACgB,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAW4D,KAAK,cAAcoC,GAAG,cAAc+B,YAAY,oBAAoBlE,MAAOrF,KAAKjB,MAAMkK,aAAe,GAAIxB,SAAUzH,KAAKiF,gBAElJjF,KAAKyI,aACLzI,KAAK8T,qBAEN,kBAAC3S,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAAUQ,QAASC,KAAKsF,cAAtD,UACA,8BAEHtF,KAAKkD,aACLlD,KAAK6T,oBACL7T,KAAKqC,gBACLrC,KAAKkC,mB,GA7QKhC,IAAMC,WCuClB4T,G,kDApCX,WAAYpV,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,GAFE,E,qDAOT,IAAD,OAOL,OANGiB,KAAKrB,MAAM6B,KAAKoF,SACflD,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,SAAWtB,KAAKrB,MAAM6B,KAAKoF,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC5H,IAAI+B,EAAQ,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACrE,EAAK3B,SAAS,CAAEgG,MAAOA,OAI3B,6BACI,kBAACxE,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAASI,IAAKlH,KAAKjB,MAAM8F,QACzB,kBAACvE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWjB,MAAO,CAACoJ,UAAU,SAAU1I,KAAKrB,MAAM6B,KAAKC,OACvD,kBAACG,EAAA,EAAD,CAAUtB,MAAO,CAACoJ,UAAU,SAAU1I,KAAKrB,MAAM6B,KAAKwT,MACtD,kBAAC,IAAD,CAAMxU,GAAI,CACNwB,SAAU,gBACVjC,MAAO,CAAE4J,SAAU3I,KAAKrB,MAAM6B,QAE9B,kBAACW,EAAA,EAAD,qB,GA3BDjB,IAAMC,WCkGlB8T,G,kDA/FX,WAAYtV,GAAQ,IAAD,8BACf,cAAMA,IAWVqD,kBAZmB,sBAYC,sBAAAQ,EAAA,8DACcvD,IAA1B0C,EAAMc,WAAWhB,KADL,gCAENiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,QAAS,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC/FA,EAAItC,KAAKuC,QACT,EAAKlE,SAAS,CAAEqV,UAAWpR,EAAItC,KAAK0T,YACpC,EAAKrV,SAAS,CAAEyD,WAAW,MAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,QATvB,2CAZD,EA2BnBJ,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WA9B3B,EAmCnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAtCR,EA2CnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAjDR,EAAKT,MAAQ,CACTmV,UAAW,GACX/R,SAAU,GACVG,WAAW,GAEf,EAAKY,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBATN,E,qDA2Df,IAAI0D,EAWJ,OAV4B,MAAxBnD,KAAKjB,MAAMmV,gBAA8CjV,IAAzBe,KAAKjB,MAAMmV,YAC3C/Q,EAAInD,KAAKjB,MAAMmV,UAAU9Q,KAAI,SAACuF,GAC1B,OACI,kBAACtF,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAKoF,EAASnF,KACtB,kBAAC,GAAD,CAAchD,KAAMmI,SAOhC,6BACI,kBAAClF,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,gBACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,yBAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,cACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACVgE,GAEJnD,KAAKkC,eAETlC,KAAKkD,aACLlD,KAAKqC,qB,GA1FKnC,IAAMC,WCkOlBgU,G,kDAlOX,WAAYxV,GAAQ,IAAD,8BACf,cAAMA,IAQVqD,kBATmB,sBASC,sBAAAQ,EAAA,yDACkB,OAA9B,EAAK7D,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MADpD,wBAEkBE,IAA1B0C,EAAMc,WAAWhB,KAFT,uBAGR,EAAK5C,SAAS,CAAEyD,WAAW,IAHnB,SAIFI,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,SAAW,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM4J,SAASnF,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,KAA3I,+BAAAL,EAAA,MAAgJ,WAAOM,GAAP,SAAAN,EAAA,sDAC9IM,EAAItC,KAAKuC,QACTkD,QAAQC,IAAIpD,EAAItC,KAAKmI,UACrB,EAAK9J,SAASiE,EAAItC,KAAKmI,UACnB,EAAKhK,MAAMI,MAAM+F,SAAS/F,MAAM4J,SAAS/C,SACzClD,IAAMC,IAAIhB,EAAMc,WAAWnB,WAAa,SAAW,EAAK3C,MAAMI,MAAM+F,SAAS/F,MAAM4J,SAAS/C,QAAS,CAAEhD,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACrJ,IAAI+B,EAAQ,QAAU/B,EAAIF,QAAQ,gBAAkB,WAAaE,EAAItC,KACrE,EAAK3B,SAAS,CAAEgG,MAAOA,OAG/B,EAAKhG,SAAS,CAAEyD,WAAW,KAG3B,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,IAbuF,2CAAhJ,uDAJE,2CATD,EAkCnBJ,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WArC5C,EA0CnBE,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aA7CR,EAkDnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BA1DO,EAgEnBqU,kBAAoB,WAChB,OAAI,EAAK9U,MAAM2F,QAEP,kBAAC,IAAD,CAAUlF,GAAG,cAKb,6BAxEO,EA6EnByF,aAAe,SAACC,GACZ,EAAKrG,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA9EnC,EAiFnBc,WAAa,SAACjB,GACV,GAAIA,EAAMC,OAAOiB,OAASlB,EAAMC,OAAOiB,MAAM,GAAI,CAC7C,EAAKvH,SAAS,CAAEsO,KAAMjI,EAAMC,OAAOiB,MAAM,KACzC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACb,EAAK3H,SAAS,CAAEgG,MAAO2B,EAAErB,OAAOsB,UAEpCJ,EAAOK,cAAcxB,EAAMC,OAAOiB,MAAM,MAxF7B,EA4FnBd,aAAe,SAACJ,GACZ,EAAKrG,SAAS,CAAEyD,WAAW,IAC3B,IAAI8R,EAAiB,GAKrB,GAJAA,EAAe3T,MAAQ,EAAK1B,MAAM0B,MAClC2T,EAAeJ,KAAO,EAAKjV,MAAMiV,KACjCI,EAAexO,QAAU,EAAK7G,MAAM6G,aAEN3G,IAA1B0C,EAAMc,WAAWhB,KAAoB,CACrC,IAAI+D,EAAW,IAAIC,SACe,OAA9B,EAAK9G,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAC5D,EAAKA,MAAMoO,MACX3H,EAASG,OAAO,gBAAiB,EAAK5G,MAAMoO,MAC5CzK,IAAMqC,IAAIpD,EAAMc,WAAWnB,WAAa,SAAW,EAAKvC,MAAM6G,QAASJ,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC7HA,EAAItC,KAAKuC,QACTqR,EAAexO,QAAU9C,EAAItC,KAAKoF,QAClClD,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,SAAW,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM4J,SAASnF,IAAK4Q,EAAgB,CACzGxR,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,QAK/D,EAAKzD,SAAS,CAAEsD,SAAU,yBAA0BG,WAAW,QAKvEI,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,SAAW,EAAK1C,MAAMI,MAAM+F,SAAS/F,MAAM4J,SAASnF,IAAK4Q,EAAgB,CACzGxR,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,QAMnEkD,EAASG,OAAO,gBAAiB,EAAK5G,MAAMoO,MAC5CzK,IAAMsC,KAAKrD,EAAMc,WAAWnB,WAAa,QAASkE,EAAU,CAAE5C,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACxGA,EAAItC,KAAKuC,QACTqR,EAAexO,QAAU9C,EAAItC,KAAKoF,QAClClD,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,QAAS+S,EAAgB,CAC1DxR,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QACnCoB,MAAK,SAACC,GACDA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAE6F,SAAS,EAAMpC,WAAW,IAG1C,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,QAASX,WAAW,QAK/D,EAAKzD,SAAS,CAAEsD,SAAU,yBAA0BG,WAAW,UAzJhE,EAkKnBwR,mBAAqB,WACjB,GAAkC,OAA9B,EAAKnV,MAAMI,MAAM+F,UAAyD,QAApC,EAAKnG,MAAMI,MAAM+F,SAAS/F,MAChE,OACI,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,SAASQ,QAAS,WAC5C,EAAKlB,SAAS,CAAEyD,WAAW,IAC3BI,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,SAAW,EAAKtC,MAAMyE,IAAK,CAAEZ,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GAC9GA,EAAItC,KAAKuC,OACT,EAAKlE,SAAS,CAAEyD,WAAW,EAAOoC,SAAS,IAG3C,EAAK7F,SAAS,CAAEyD,WAAW,EAAOH,SAAUW,EAAItC,KAAKyC,aAE1D8C,OAAM,SAACC,GACN,EAAKnH,SAAS,CAAEsD,SAAU6D,SAVlC,WAnKR,EAAKjH,MAAQ,CACTuD,WAAW,EACXH,SAAU,IAEd,EAAK2R,mBAAqB,EAAKA,mBAAmBrU,KAAxB,gBANX,E,qDAuLf,OACI,kBAACkE,EAAA,EAAD,KACI,iDACA,yBAAKrE,MAAO,CAAEkL,UAAW,QAASzD,SAAU,SAAWG,IAAKlH,KAAKjB,MAAM8F,MAAO4F,IAAI,KAClF,kBAAC3B,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,4BAA4BlE,MAAOrF,KAAKjB,MAAM0B,OAAS,GAAIgH,SAAUzH,KAAKiF,iBAGzI,kBAAC5B,EAAA,EAAD,CAAKC,GAAG,IAAIhE,MAAO,CAAEoE,WAAY,SAC7B,kBAACyD,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,gBACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,OAAO4D,KAAK,OAAOoC,GAAG,OAAOC,SAAUzH,KAAKmG,eAIhE,kBAAC9C,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC6D,EAAA,EAAD,CAAWC,KAAG,EAACjI,UAAU,QACrB,kBAACkI,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,WAAWwH,KAAK,IAAI5D,KAAK,OAAOoC,GAAG,OAAO+B,YAAY,oBAAoBlE,MAAOrF,KAAKjB,MAAMiV,MAAQ,GAAIvM,SAAUzH,KAAKiF,kBAK9IjF,KAAK8T,qBAEN,kBAAC3S,EAAA,EAAD,CAAQhC,UAAU,MAAMI,MAAM,UAAUQ,QAASC,KAAKsF,cAAtD,UACA,8BAEHtF,KAAKkD,aACLlD,KAAK6T,oBACL7T,KAAKqC,gBACLrC,KAAKkC,mB,GA5NOhC,IAAMC,WC8HpBkU,G,kDA3HX,WAAY1V,GAAQ,IAAD,8BACf,cAAMA,IAaVuE,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BAtBO,EA4BnB2J,SAAW,WACP,GAAI,EAAKpK,MAAM2F,QACX,OACI,kBAAC,IAAD,CAAUlF,GAAG,YA/BN,EAoCnB0C,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,UAAU,EAAKR,MAAMoD,WAvC5C,EA4CnBmS,kBAAoB,WAChB,GAA+B,KAA3B,EAAKvV,MAAMwV,YACX,OACI,kBAACnS,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,WAAW,EAAKR,MAAMwV,cA/C7C,EAoDnBlS,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAvDR,EA4DnB0F,aAAe,SAACC,GACZe,QAAQC,IAAI,EAAKnH,OACjB,EAAKF,SAAL,eAAiBqG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA9DnC,EAkEnBC,aAAe,SAACJ,GACZ,EAAKrG,SAAS,CAACsD,SAAS,GAAIoS,YAAa,GAAIjS,WAAW,IACxD,IAAIkS,EAAc,CAAEC,MAAO,EAAK1V,MAAM0V,MAAOC,UAAW,EAAK3V,MAAM2V,WACnEhS,IAAMsC,KAAKrD,EAAMc,WAAWpB,OAAS,UAAWmT,EAAa,CAAC5R,QAAS,CAACnB,KAAME,EAAMc,WAAWhB,QAAQoB,MAAK,SAACC,GACtGA,EAAItC,KAAKuC,OACR,EAAKlE,SAAS,CAAC0V,YAAa,2BAA4BjS,WAAW,IAGnE,EAAKzD,SAAS,CAACsD,SAAU,kBAAoBW,EAAItC,KAAKyC,QAASX,WAAW,QAxElF,EAAKvD,MAAQ,CACT2V,UAAW,QACXvS,SAAU,GACVoS,YAAY,GACZjS,WAAW,GAEf,EAAK2C,aAAe,EAAKA,aAAaxF,KAAlB,gBACpB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAK0J,SAAW,EAAKA,SAAS1J,KAAd,gBAXD,E,qDAiFf,OACI,kBAACkE,EAAA,EAAD,CAAWxE,UAAU,QACjB,kBAACsE,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAKlE,UAAU,aACf,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,YACX,kBAACkB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,KACI,6BACI,6CACA,kBAACwI,EAAA,EAAD,CAAM3J,UAAU,OACZ,kBAACgI,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,QAAQ4D,KAAK,QAAQoC,GAAG,QAAQ+B,YAAY,0BAA0B9B,SAAUzH,KAAKiF,gBAErG,kBAACkC,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,aACA,kBAACC,EAAA,EAAD,CAAO/F,KAAK,SAAS4D,KAAK,YAAYoC,GAAG,YAAY+B,YAAY,oCAAoC9B,SAAUzH,KAAKiF,cAChH,yCACA,4CAGR,kBAAC9D,EAAA,EAAD,CAAQ5B,MAAM,UAAUQ,QAASC,KAAKsF,cAAtC,eAMpB,kBAACjC,EAAA,EAAD,CAAKlE,UAAU,cAElBa,KAAKmJ,WACLnJ,KAAKkC,cACLlC,KAAKsU,oBACLtU,KAAKqC,gBACLrC,KAAKkD,kB,GArHChD,IAAMC,W,UC+KdwU,G,kDA7KX,WAAYhW,GAAQ,IAAD,8BACf,cAAMA,IAYVqD,kBAbmB,sBAaC,sBAAAQ,EAAA,8DACcvD,IAA1B0C,EAAMc,WAAWhB,KADL,gCAENiB,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,UAAW,CAAEuB,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,KAA7F,+BAAAL,EAAA,MAAkG,WAAOM,GAAP,mBAAAN,EAAA,0DAChGM,EAAItC,KAAKuC,OADuF,iBAE5F6R,EAAS,GAFmF,IAAApS,EAAA,iBAGvFqS,GAHuF,eAAArS,EAAA,6DAIxFgS,EAAc1R,EAAItC,KAAKoU,OAAOC,GAJ0D,SAKtFnS,IAAMC,IAAIhB,EAAMc,WAAWpB,OAAS,WAAayB,EAAItC,KAAKoU,OAAOC,GAAOC,IAAK,CAAClS,QAAS,CAACnB,KAAME,EAAMc,WAAWhB,QAAQoB,MAAK,SAACsQ,GAC/HqB,EAAYpP,KAAO+N,EAAS3S,KAAKqU,MAAMzP,KACvCoP,EAAYC,MAAQtB,EAAS3S,KAAKqU,MAAMJ,MACxCD,EAAYO,MAAQ5B,EAAS3S,KAAKqU,MAAME,MACxCP,EAAYQ,iBAAmBR,EAAYS,cAT6C,OAW5FL,EAAOxE,KAAKoE,GAXgF,iDAAAhS,EAAA,KAG9EM,EAAItC,KAAKoU,QAHqE,oDAGvFC,EAHuF,6BAGvFA,GAHuF,qCAahG,EAAKhW,SAAS,CAAE+V,OAAQA,EAAQtS,WAAW,IAbqD,wBAgBhG,EAAKzD,SAAS,CAAEsD,SAAUW,EAAItC,KAAKyC,UACnC,EAAKpE,SAAS,CAAEyD,WAAW,IAjBqE,4CAAlG,uDAFM,2CAbD,EAsCnBJ,YAAc,WACV,GAA4B,KAAxB,EAAKnD,MAAMoD,SACX,OACI,kBAACC,EAAA,EAAD,CAAO7C,MAAM,UAAU,EAAKR,MAAMoD,WAzC3B,EA8CnBmS,kBAAoB,WAChB,GAA+B,KAA3B,EAAKvV,MAAMwV,YACX,OACI,kBAACnS,EAAA,EAAD,CAAOjD,UAAU,OAAOI,MAAM,WAAW,EAAKR,MAAMwV,cAjD7C,EAsDnBlS,cAAgB,WACZ,GAAI,EAAKtD,MAAMuD,UACX,OACI,kBAACC,EAAA,EAAD,CAAShD,MAAM,aAzDR,EA8DnB2D,WAAa,WACT,YAA8BjE,IAA1B0C,EAAMc,WAAWhB,KAEb,kBAAC,IAAD,CAAUjC,GAAG,WAKb,6BApER,EAAKT,MAAQ,CACT6V,OAAQ,GACRzS,SAAU,GACVoS,YAAY,GACZjS,WAAW,GAEf,EAAKY,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK4C,cAAgB,EAAKA,cAAc5C,KAAnB,gBAVN,E,qDA6ET,IACF0D,EADC,OAuDL,OArDyB,MAArBnD,KAAKjB,MAAM6V,aAAwC3V,IAAtBe,KAAKjB,MAAM6V,SACxCzR,EAAInD,KAAKjB,MAAM6V,OAAOxR,KAAI,SAACyR,EAAO1K,GAC9B,OACI,wBAAI5G,IAAK4G,GACL,4BAAKA,EAAQ,GACb,4BAAK0K,EAAMzP,MACX,4BAAKyP,EAAMJ,OACX,4BAAKI,EAAME,OACX,4BAAKF,EAAMI,YACX,4BACI,kBAAC1N,EAAA,EAAD,CAAO/F,KAAK,SAAS4D,KAAK,YAAYoC,GAAG,YAAY+B,YAAY,oCAAoClE,MAAOwP,EAAMG,iBAAkBvN,SAAU,SAACvC,GAC3I,IAAIgQ,EAAiB,EAAKnW,MAAM6V,OAChCM,EAAe/K,GAAO6K,iBAAmB9P,EAAMC,OAAOE,MACtD,EAAKxG,SAAS,CAAE+V,OAAQM,MAExB,yCACA,4CAGR,4BAAI,kBAAC/T,EAAA,EAAD,CAAQ5B,MAAM,SAASJ,UAAU,cAAcY,QAAS,WACxD,EAAKlB,SAAS,CAAEyD,WAAW,EAAMH,SAAU,GAAIoS,YAAa,KAC5D7R,IAAMmD,OAAOlE,EAAMc,WAAWpB,OAAS,WAAawT,EAAMC,IAAK,CAAElS,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,IAC/GmD,QAAQC,IAAIpD,EAAItC,MACZsC,EAAItC,KAAKuC,SACI,EAAKhE,MAAM6V,OACjBnF,OAAOtF,EAAO,GACrB,EAAKtL,SAAS,CAAEyD,WAAW,KAG3B,EAAKzD,SAAS,CAAEyD,WAAW,EAAMH,SAAU,qBAAuBW,EAAItC,KAAKyC,gBAInF,kBAAC9B,EAAA,EAAD,CAAQ5B,MAAM,UAAUJ,UAAU,kBAAkBY,QAAS,WACzD,EAAKlB,SAAS,CAAEyD,WAAW,EAAMH,SAAU,GAAIoS,YAAa,KAC5D7R,IAAMqC,IAAIpD,EAAMc,WAAWpB,OAAS,WAAawT,EAAMC,IAAK,CAAEJ,UAAW,EAAK3V,MAAM6V,OAAOzK,GAAO6K,kBAAoB,CAAEpS,QAAS,CAAEnB,KAAME,EAAMc,WAAWhB,QAAUoB,MAAK,SAACC,GACtK,GAAIA,EAAItC,KAAKuC,OAAQ,CACjB,IAAI6R,EAAS,EAAK7V,MAAM6V,OACxBA,EAAOzK,GAAO8K,WAAaL,EAAOzK,GAAO6K,iBACzC,EAAKnW,SAAS,CAAC+V,OAAQA,IACvB,EAAK/V,SAAS,CAAC0V,YAAa,uBAAwBjS,WAAW,SAG/D,EAAKzD,SAAS,CAACsD,SAAU,+BAAiCW,EAAItC,KAAKyC,QAASX,WAAW,gBAWnH,6BACI,kBAACmB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMnE,MAAO,CAAEoE,WAAY,QAAUlE,GAAI,CACrCwB,SAAU,YACVjC,MAAO,QAEP,kBAACoC,EAAA,EAAD,CAAQhC,UAAU,YAAYI,MAAM,WAApC,sBAGR,kBAACoE,EAAA,EAAD,CAAWxE,UAAU,QACjB,wBAAIG,MAAO,CAAEsE,OAAQ,SAArB,kBACA,kBAACH,EAAA,EAAD,CAAKtE,UAAU,QACX,kBAACgW,GAAA,EAAD,KACI,+BACI,4BACI,sCACA,oCACA,qCACA,qCACA,0CACA,iDACA,wCAGR,+BACKhS,KAIZnD,KAAKkC,cACLlC,KAAKsU,qBAETtU,KAAKkD,aACLlD,KAAKqC,qB,GAxKEnC,IAAMC,WCsBxBiV,G,4MAEJC,UAAY,WACV,GAAqC,aAAjC,EAAK1W,MAAMmG,SAAS9D,SACtB,OACE,kBAAC,EAAD,O,uDAMJ,OACE,yBAAK7B,UAAU,OACZa,KAAKqV,YACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC7W,GAAD,OAC5B,kBAAC,IAAD,CAAUa,GAAG,eAEf,kBAAC,IAAD,CAAO8V,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC7W,GAAD,OAClC,kBAAC,EAAD,SAEF,kBAAC,IAAD,CAAO4W,KAAK,eAAeC,OAAQ,SAAC7W,GAAD,OACjC,kBAAC,GAAD,CAAcI,MAAOJ,OAEvB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAC7W,GAAD,OACjC,kBAAC,GAAD,SAEF,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAC7W,GAAD,OACpC,kBAAC,GAAD,SAEF,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,SAAC7W,GAAD,OACzC,kBAAC8W,GAAD,CAA0B1W,MAAOJ,OAEnC,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,SAAC7W,GAAD,OACxC,kBAAC,GAAD,CAA0BI,MAAOJ,OAEnC,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAC7W,GAAD,OACnC,kBAAC,GAAD,SAEF,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC7W,GAAD,OAClC,kBAAC,GAAD,SAEF,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,eAAeC,OAAQ,SAAC7W,GAAD,OACvC,kBAAC,GAAD,CAAcI,MAAOJ,OAEvB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,wBAAwBC,OAAQ,SAAC7W,GAAD,OAChD,kBAAC,GAAD,CAAeI,MAAOJ,OAExB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC7W,GAAD,OAClC,kBAAC,GAAD,SAEF,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,eAAeC,OAAQ,SAAC7W,GAAD,OACvC,kBAAC,GAAD,CAAcI,MAAOJ,OAEvB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAC7W,GAAD,OACpC,kBAAC,GAAD,CAAcI,MAAOJ,OAEvB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,SAAC7W,GAAD,OACzC,kBAAC,GAAD,CAAgBI,MAAOJ,OAEzB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,aAAaC,OAAQ,SAAC7W,GAAD,OACrC,kBAAC,GAAD,CAAUI,MAAOJ,OAEnB,kBAAC,IAAD,CAAO2W,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAC7W,GAAD,OACjC,kBAAC,GAAD,CAAWI,MAAOJ,a,GAhEZuB,IAAMC,WAyETuV,eAAW7R,aA/EF,SAAC9E,GACvB,MAAO,CACL0C,KAAM1C,KA6EgB8E,CAAyBuR,KC1F/BO,QACW,cAA7BC,OAAO9Q,SAAS+Q,UAEe,UAA7BD,OAAO9Q,SAAS+Q,UAEhBD,OAAO9Q,SAAS+Q,SAASC,MACvB,2DCNNC,IAASP,OACP,kBAAC,IAAD,CAAU7T,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJqU,SAASC,eAAe,SDiHpB,kBAAmB1I,WACrBA,UAAU2I,cAAcC,MACrBtT,MAAK,SAAAuT,GACJA,EAAaC,gBAEdtQ,OAAM,SAAA2H,GACLzH,QAAQyH,MAAMA,EAAMzK,a","file":"static/js/main.27c88652.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from 'reactstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n    this.isLoggedIn = this.isLoggedIn.bind(this);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n  isLoggedIn = () => {\r\n    if (this.props.isLoggedIn === undefined || this.props.isLoggedIn === false) {\r\n      return (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n          <Link style={{color: \"grey\"}} to=\"/login\">Login</Link>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand >Indic Law</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/digest\">Digest</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/course\">Courses</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/question\">Questions</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/mentor\">Mentors</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/whatsnew\">Whats new</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n              <Link style={{color: \"grey\"}} className=\"m-3\" to=\"/admin\">Admins</Link>\r\n              </NavItem>\r\n            </Nav>\r\n            {this.isLoggedIn()}\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { Card, CardText, CardBody,CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'; \r\n  \r\n\r\nclass DigestCard extends React.Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>{this.props.data.title}</CardTitle>\r\n                  <CardSubtitle>{this.props.data.digestType}</CardSubtitle>\r\n                  <CardText dangerouslySetInnerHTML={{__html: this.props.data.news}}></CardText>\r\n                  <Link to={{\r\n                      pathname:\"digest/edit\",\r\n                      state: {digest:this.props.data, isEdit: true}\r\n                  }}>\r\n                  <Button>Edit</Button>\r\n                  </Link>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default DigestCard;","const reducer = (state = {\r\n  apiUrl: \"https://api.indiclaw.com\",\r\n  storageUrl: \"https://storage.indiclaw.com\"\r\n  // storageUrl: \"https://devstorage.indiclaw.com\",\r\n  // apiUrl: \"https://api-indiclaw.herokuapp.com\",\r\n  // storageUrl: \"http://localhost:5000\",\r\n  // apiUrl: \"http://localhost:4000\"\r\n\r\n}, action) => {\r\n    switch (action.type) {\r\n      case \"saveLoginAuth\": state.auth = action.payload;\r\n                            return {...state, auth: action.payload};\r\n      case \"getLoginAuth\": return state;\r\n      case \"getAPIUrl\" : return state;\r\n      case \"getStorageUrl\": return state;\r\n      default: return state;\r\n    }\r\n }\r\n export default reducer;","import reducer from './reducer';\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n    );\r\n\r\nexport default store","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport DigestCard from './elements/DigestCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAuth: () => dispatch(getAuth())\r\n    };\r\n}\r\n\r\n\r\nclass DigestList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            digests: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getDigests = this.getDigests.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        this.getDigests();\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getDigests = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/digest\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ digests: res.data.digests });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.digests != null && this.state.digests !== undefined) {\r\n            c = this.state.digests.map((digest) => {\r\n                return (\r\n                    <Col lg=\"3\" key={digest._id}>\r\n                        < DigestCard data={digest} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"digest/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Digest</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Digests</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DigestList);","export function saveAuth(auth) {\r\n    return {\r\n        type: \"saveLoginAuth\",\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport function getAuth() {\r\n    return {\r\n        type: \"getLoginAuth\"\r\n    }\r\n}\r\n\r\nexport function getAPIUrl(){\r\n    return{\r\n        type: \"getAPIUrl\"\r\n    }\r\n}\r\n\r\nexport function getStorageUrl(){\r\n    return{\r\n        type: \"getStorageUrl\"\r\n    }\r\n}","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner, CardImg } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\n\r\nclass DigestEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            this.state = {\r\n                title: \"\",\r\n                digestType: \"\",\r\n                news: \"\",\r\n                context: \"\",\r\n                learnings: \"\",\r\n                laws: \"\",\r\n                ratio: \"\",\r\n                features: \"\",\r\n                dialogue: \"\",\r\n                tags:{},\r\n                success: false,\r\n                apiError: \"\",\r\n                isLoading: true,\r\n                isSubmitting: false\r\n            };\r\n\r\n            if (store.getState().auth !== undefined) {\r\n                axios.get(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.setState(res.data.digest);\r\n                        this.setState({\r\n                            success: false,\r\n                            digestType: this.props.state.location.state.digest.digestType,\r\n                            isLoading: false,\r\n                            tags:{}\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.state = {\r\n                title: \"\",\r\n                digestType: \"CurrentAffairs\",\r\n                news: \"\",\r\n                context: \"\",\r\n                learnings: \"\",\r\n                laws: \"\",\r\n                ratio: \"\",\r\n                features: \"\",\r\n                dialogue: \"\",\r\n                tags: {},\r\n                success: false,\r\n                apiError: \"\",\r\n                isLoading: false,\r\n                isSubmitting: false,\r\n            }\r\n        }\r\n        this.populateFields = this.populateFields.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToDigests = this.redirectToDigests.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderImagePart = this.renderImagePart.bind(this);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.uploadImage = this.uploadImage.bind(this);\r\n        this.submitDigest = this.submitDigest.bind(this);\r\n    }\r\n\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToDigests = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/digest\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    submitDigest = () => {\r\n        this.setState({ digestImage: \"\", image: \"\" }, () => {\r\n            if (this.props.state.location != null && this.props.state.location.state.isEdit) {\r\n                if (store.getState().auth !== undefined) {\r\n                    axios.put(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, this.state, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (store.getState().auth !== undefined) {\r\n                    axios.post(store.getState().apiUrl + \"/digest\", this.state, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true, isSubmitting: true });\r\n        var formData = new FormData();\r\n        if (this.state.removeImageId !== null && this.state.removeImageId !== undefined && this.state.removeImageId !== \"\") {\r\n            if (this.state.digestImage !== null && this.state.digestImage !== undefined && this.state.digestImage !== \"\") {\r\n                formData.append('digestImage', this.state.digestImage);\r\n                await axios.put(store.getState().storageUrl + \"/digest/\" + this.state.removeImageId, formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId });\r\n                        this.submitDigest();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                await axios.delete(store.getState().storageUrl + \"/digest/\" + this.state.removeImageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.submitDigest();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else if (this.state.digestImage !== null && this.state.digestImage !== undefined && this.state.digestImage !== \"\") {\r\n            formData.append('digestImage', this.state.digestImage);\r\n            await axios.post(store.getState().storageUrl + \"/digest\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ imageId: res.data.imageId });\r\n                    this.submitDigest();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.submitDigest();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        if (store.getState().auth !== undefined) {\r\n            axios.delete(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ success: true });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\") {\r\n            this.setState({ removeImageId: this.state.imageId });\r\n            this.setState({ imageId: \"\" });\r\n        }\r\n        this.setState({ digestImage: event.target.files[0] });\r\n        if (event.target.files && event.target.files[0]) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n        this.setState({ apiError: \"\" });\r\n    }\r\n\r\n    uploadImage = async () => {\r\n\r\n    }\r\n\r\n    removeImage = async () => {\r\n        this.setState({ digestImage: \"\" });\r\n        if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\") {\r\n            this.setState({ removeImageId: this.state.imageId });\r\n            this.setState({ imageId: \"\" }, () => {\r\n            });\r\n        }\r\n    }\r\n\r\n    renderImagePart = () => {\r\n        if ((this.state.imageId == null || this.state.imageId === \"\") && (this.state.digestImage == null || this.state.digestImage === \"\")) {\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"4\"></Col>\r\n                    <Col lg=\"4\" className=\"m-3\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if ((this.state.imageId == null || this.state.imageId === \"\") && (this.state.digestImage != null || this.state.digestImage !== \"\")) {\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"12\" className=\"mb-3\">\r\n                        <Card>\r\n                            <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} />\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Choose file to change Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                                <Button className=\"ml-1\" color=\"danger\" onClick={this.removeImage}>Remove this Image</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\" && this.state.isSubmitting === false && this.state.digestImage == null) {\r\n            console.log(store.getState().storageUrl + \"/digest/\" + this.state.imageId);\r\n            axios.get(store.getState().storageUrl + \"/digest/\" + this.state.imageId, {\r\n                headers: {\r\n                    auth: store.getState().auth,\r\n                }\r\n            }).then(async (res) => {\r\n                if (this.state.image === null || this.state.image === undefined || this.state.image === \"\") {\r\n                    this.setState({ image: \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data });\r\n                }\r\n\r\n            });\r\n\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"12\" className=\"mb-3\">\r\n                        <Card>\r\n                            <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} />\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Choose file and upload to change Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                                <Button className=\"ml-1\" color=\"danger\" onClick={this.removeImage}>Remove this Image</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n    populateFields = () => {\r\n        if (this.state.digestType === \"CurrentAffairs\" || this.state.digestType === \"History\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"3\"></Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Learnings</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.learnings}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ learnings: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if (this.state.digestType === \"Judgements\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Laws</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.laws}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ laws: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Ratio</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.ratio}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ ratio: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n        else if (this.state.digestType === \"Bills/Laws\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Features</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.features}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ features: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Dialogue</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.dialogue}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ dialogue: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({tags: tags});\r\n    }\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Digest Editor</h1>\r\n                {this.renderImagePart()}\r\n                <Form className=\"mt-4\">\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <FormGroup row>\r\n                                <Label for=\"digestType\" sm={2}>Category</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"select\" name=\"digestType\" id=\"digestType\" value={this.state.digestType} onChange={this.handleChange}>\r\n                                        <option>CurrentAffairs</option>\r\n                                        <option>Judgements</option>\r\n                                        <option>Bills/Laws</option>\r\n                                        <option>History</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <FormGroup row>\r\n                                <Label for=\"title\" sm={2}>Title</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row>\r\n                                <Label for=\"description\" sm={1}>Description</Label>\r\n                                <Col sm={11}>\r\n                                    <Input type=\"textarea\" rows=\"3\" name=\"description\" id=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            {this.renderTags()}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">News</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.news}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ news: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Context</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.context}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ context: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.populateFields()}\r\n                <Row className=\"m-4\">\r\n                    <Col className=\"lg-2\">\r\n                        <Button color=\"danger\" onClick={this.handleDelete}>Delete</Button>\r\n                    </Col>\r\n                    <Col className=\"lg-2\">\r\n                        <Button color=\"primary\" onClick={this.handleSubmit} >Submit</Button>\r\n                    </Col>\r\n                </Row>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n                {this.redirectToDigests()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DigestEditor;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { saveAuth } from '../reduxStore/action';\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveAuth: (auth) => dispatch(saveAuth(auth))\r\n    };\r\n}\r\n\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: true,\r\n            apiError: \"\",\r\n            isLoading: false\r\n        }\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n\r\n    redirect = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/digest\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        if (this.state.isLogin) {\r\n            this.setState({isLoading: true});\r\n            axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n                if (res.data.status === true) {\r\n                    this.props.saveAuth(res.headers.auth);\r\n                    if (store.getState().auth !== undefined) {\r\n                        this.setState({ success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"Could not log you in\" });\r\n                        this.setState({isLoading: false});\r\n                    }\r\n                }\r\n                else {\r\n                    if (res.data.message !== null) {\r\n                        this.setState({ apiError: res.data.message });\r\n                        this.setState({isLoading: false});\r\n                    }\r\n                    else{\r\n                        this.setState({ apiError: \"Could not log you in\" });\r\n                        this.setState({isLoading: false});\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            axios.post(store.getState().apiUrl + \"/users\", this.state).then((res) => {\r\n            }).then(() => {\r\n                axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n                    if (res.data.status === true) {\r\n                        this.props.saveAuth(res.headers.auth);\r\n                        if (store.getState().auth !== undefined) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"Could not log you in\" });\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        if (res.data.message !== null) {\r\n                            this.setState({ apiError: res.data.message });\r\n                        }\r\n                        else{\r\n                            this.setState({ apiError: \"Could not log you in\" });\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    renderForm = () => {\r\n        if (this.state.isLogin) {\r\n            return (\r\n                <div>\r\n                    <h2>Login</h2>\r\n                    <Form className=\"m-3\">\r\n                        <FormGroup row>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                        <br />\r\n                        <Button color=\"link\" onClick={() => { this.setState({ isLogin: false }) }}>Sign Up</Button>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h2>Sign Up</h2>\r\n                    <Form className=\"m-3\">\r\n                        <FormGroup row>\r\n                            <Label for=\"name\">Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter name\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"phone\">Phone Number</Label>\r\n                            <Input type=\"phone\" name=\"phone\" id=\"phone\" placeholder=\"Enter phone number\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                        <br />\r\n                        <Button color=\"link\" onClick={() => { this.setState({ isLogin: true }) }}>Log in</Button>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                {this.renderForm()}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.redirect()}\r\n                {this.renderError()}\r\n                {this.renderSpinner()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass questionCollectionCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle>{this.props.data.type}</CardSubtitle>\r\n                        <CardText>{ this.props.data.description }</CardText>\r\n                        <Link to={{\r\n                            pathname: \"question/view\",\r\n                            state: { questionCollectionId: this.props.data._id}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default questionCollectionCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport QuestionCollectionCard from './elements/QuestionCollectionCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAuth: () => dispatch(getAuth())\r\n    };\r\n}\r\n\r\n\r\nclass QuestionCollectionList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionCollections: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getQuestionCollections = this.getQuestionCollections.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.getQuestionCollections();\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getQuestionCollections = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/questions\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ questionCollections: res.data.collections});\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.questionCollections != null && this.state.questionCollections !== undefined) {\r\n            c = this.state.questionCollections.map((questionCollection) => {\r\n                return (\r\n                    <Col lg=\"3\" key={questionCollection._id}>\r\n                        < QuestionCollectionCard data={questionCollection} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"question/new\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Collection</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Question Collections</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCollectionList);","import React from 'react';\r\nimport { Card, CardBody, Col, FormGroup, Input, Label } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\nclass QuestionLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageData: \"\"\r\n        }\r\n        this.renderExplanation = this.renderExplanation.bind(this);\r\n\r\n    }\r\n\r\n    renderExplanation = (question, index) => {\r\n        if (question.explanation) {\r\n            return (\r\n                <FormGroup row className=\"mt-3\">\r\n                    <Label for=\"explanation\"> Explanation </Label>\r\n                    <Input type=\"textarea\" rows=\"5\" name=\"explanation\" id=\"explanation\" value={question.explanation} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                </FormGroup>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImage = (question) => {\r\n        if (question.imageId) {\r\n            axios.get(store.getState().storageUrl + \"/question/\" + question.imageId, {\r\n                headers: {\r\n                    auth: store.getState().auth,\r\n                }\r\n            }).then((res) => {\r\n                if (this.state.imageData === \"\") {\r\n                    this.setState({ imageData: \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data });\r\n                }\r\n\r\n\r\n            });\r\n            return (\r\n                <div>\r\n                    <img style={{ maxWidth: \"500px\", maxHeight: \"300px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.imageData} alt=\"img\" />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var c;\r\n        if (this.props.questions != null && this.props.questions !== undefined) {\r\n            c = this.props.questions.questions.map((question, index) => {\r\n                return (\r\n                    <Col lg=\"12\" key={index} className=\"m-3\" >\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"questionNumber\">Question Number</Label>\r\n                            <Input type=\"text\" name=\"questionNumber\" id=\"questionNumber\" value={question.questionNumber} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                        </FormGroup>\r\n                        <h5 style={{ textAlign: \"left\" }}>Options</h5>\r\n                        <ul style={{ textAlignVertical: \"center\", textAlign: \"left\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[0]\">A) </Label>\r\n                                <Input type=\"text\" name=\"options[0]\" id=\"options[0]\" value={question.options[0]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 0) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[1]\">B) </Label>\r\n                                <Input type=\"text\" name=\"options[1]\" id=\"options[1]\" value={question.options[1]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 1) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[2]\">C) </Label>\r\n                                <Input type=\"text\" name=\"options[2]\" id=\"options[2]\" value={question.options[2]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 2) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[3]\">D) </Label>\r\n                                <Input type=\"text\" name=\"options[3]\" id=\"options[3]\" value={question.options[3]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 3) }} />\r\n                            </FormGroup>\r\n\r\n                        </ul>\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"answer\"> Answer </Label>\r\n                            <Input type=\"text\" name=\"answer\" id=\"answer\" value={question.answer} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                        </FormGroup>\r\n                        {this.renderExplanation(question, index)}\r\n                        {this.renderImage(question)}\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        {c}\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionLayout;","import React from 'react';\r\nimport { Container, Row, Col, Spinner, Alert, CardBody, Card, Button, FormGroup, Input, Label } from 'reactstrap';\r\nimport QuestionLayout from './elements/QuestionLayout';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAuth: () => dispatch(getAuth())\r\n    };\r\n}\r\n\r\n\r\nclass QuestionCollectionList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiError: \"\",\r\n            isLoading: true,\r\n            collection: {},\r\n            questionIndex: 0\r\n        }\r\n        this.getQuestionCollection = this.getQuestionCollection.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirectToQuestions = this.redirectToQuestions.bind(this);\r\n\r\n        this.renderDirection = this.renderDirection.bind(this);\r\n        this.renderLegalPrinciple = this.renderLegalPrinciple.bind(this);\r\n        this.getQuestionCollection();\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getQuestionCollection = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            var collectionName = this.props.state.location.state.questionCollectionId;\r\n            await axios.get(store.getState().apiUrl + \"/questions/\" + collectionName, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ collection: res.data.collection });\r\n                    this.setState({ questionData: res.data.questionData });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToQuestions = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/question\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderDirection = (index) => {\r\n        if (this.state.questionData[index].direction) {\r\n            return (\r\n                <FormGroup row className=\"mt-3\">\r\n                    <Label for=\"direction\">Direction</Label>\r\n                    <Input type=\"text\" name=\"direction\" id=\"direction\" value={this.state.questionData[index].direction} onChange={(event) => { this.handleQuestionDataChange(event, index) }} />\r\n                </FormGroup>\r\n            );\r\n        }\r\n    }\r\n    renderLegalPrinciple = (index) => {\r\n        if (this.state.questionData[index].legalPrinciple) {\r\n            return (\r\n                <FormGroup row className=\"mt-3\">\r\n                    <Label for=\"legalPrinciple\">Legal Principle</Label>\r\n                    <Input type=\"textarea\" rows=\"15\" name=\"legalPrinciple\" id=\"legalPrinciple\" value={this.state.questionData[index].legalPrinciple} onChange={(event) => { this.handleQuestionDataChange(event, index) }} />\r\n                </FormGroup>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImage = (question, index) => {\r\n        if (question.imageId) {\r\n            axios.get(store.getState().storageUrl + \"/question/\" + question.imageId, {\r\n                headers: {\r\n                    auth: store.getState().auth,\r\n                }\r\n            }).then(async (res) => {\r\n                if (this.state.questionData[index].imageData == null || this.state.questionData[index].imageData === \"\") {\r\n                    var questionData = this.state.questionData;\r\n                    questionData[index].imageData = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                    this.setState({ questionData: questionData });\r\n                }\r\n\r\n            });\r\n            return (\r\n                <div>\r\n                    <img style={{ maxWidth: \"500px\", maxHeight: \"300px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.questionData[index].imageData} alt=\"img\" />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    deleteCollection = () => {\r\n        if (store.getState().auth !== undefined) {\r\n            this.setState({ isLoading: true });\r\n            axios.delete(store.getState().apiUrl + \"/questions/\" + this.props.state.location.state.questionCollectionId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ isLoading: false });\r\n                    this.setState({ success: true });\r\n                }\r\n                else {\r\n                    this.setState({ isLoading: false });\r\n                    this.setState({ apiError: res.data.message });\r\n                }\r\n            }).catch((err) => {\r\n                this.setState({ isLoading: false });\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCollectionDataChange = (event) => {\r\n        var collection = this.state.collection;\r\n        collection[event.target.name] = event.target.value;\r\n        this.setState({ collection: collection });\r\n    }\r\n\r\n    handleQuestionDataChange = (event, index) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index][event.target.name] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    handleSubQuestionsDataChange = (event, index, subQuestionIndex) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index].questions[subQuestionIndex][event.target.name] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    handleSubQuestionOptionChange = (event, index, subQuestionIndex, optionIndex) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index].questions[subQuestionIndex].options[optionIndex] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    updateQuestion = () => {\r\n        if (store.getState().auth != null) {\r\n            this.setState({ isLoading: true });\r\n            var questionId = this.state.questionData[this.state.questionIndex]._id;\r\n            axios.put(store.getState().apiUrl + \"/questions/\" + questionId + \"/question\", this.state.questionData[this.state.questionIndex], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ questionIndex: 0, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateCollection = () => {\r\n        if (store.getState().auth != null) {\r\n            this.setState({ isLoading: true });\r\n            var collectionId = this.state.collection._id;\r\n            axios.put(store.getState().apiUrl + \"/questions/\" + collectionId, this.state.collection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ isLoading: false, success: true });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    renderQuestionSelector = () => {\r\n        if (this.state.questionData != null && this.state.questionData !== undefined) {\r\n            var c = this.state.questionData.map((question, index) => {\r\n                return (\r\n                    <Button key={index} className=\"m-2\" color=\"primary\" onClick={() => {\r\n                        this.setState({ questionIndex: index });\r\n                    }}> {index + 1} </Button>\r\n                );\r\n            });\r\n            return c;\r\n\r\n        }\r\n    }\r\n\r\n    renderSelectedQuestion = () => {\r\n        if (this.state.questionData != null && this.state.questionData !== undefined) {\r\n            return (\r\n                <Col lg=\"12\">\r\n                    <Card className=\"m-3\">\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"questionType\">Question Type</Label>\r\n                                            <Input type=\"text\" name=\"questionType\" id=\"questionType\" value={this.state.questionData[this.state.questionIndex].questionType} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"section\">Section</Label>\r\n                                            <Input type=\"text\" name=\"section\" id=\"section\" value={this.state.questionData[this.state.questionIndex].section} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"topic\">Topic</Label>\r\n                                            <Input type=\"text\" name=\"topic\" id=\"topic\" value={this.state.questionData[this.state.questionIndex].topic} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"sourceExam\">Source Exam</Label>\r\n                                            <Input type=\"text\" name=\"sourceExam\" id=\"sourceExam\" value={this.state.questionData[this.state.questionIndex].sourceExam} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"difficultyLevel\">Difficulty Level</Label>\r\n                                            <Input type=\"text\" name=\"difficultyLevel\" id=\"difficultyLevel\" value={this.state.questionData[this.state.questionIndex].difficultyLevel} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"Time\">Time</Label>\r\n                                            <Input type=\"text\" name=\"Time\" id=\"Time\" value={this.state.questionData[this.state.questionIndex].Time} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    {this.renderDirection(this.state.questionIndex)}\r\n                                    {this.renderLegalPrinciple(this.state.questionIndex)}\r\n                                </Col>\r\n                                <Col lg=\"6\">\r\n                                    {this.renderImage(this.state.questionData[this.state.questionIndex], this.state.questionIndex)}\r\n                                </Col>\r\n                            </Row>\r\n                            < QuestionLayout questions={this.state.questionData[this.state.questionIndex]} index={this.state.questionIndex} handleChangeFunction={this.handleSubQuestionsDataChange} handleOptionChange={this.handleSubQuestionOptionChange} />\r\n                            <Button className=\"mt-3\" color=\"primary\" onClick={this.updateQuestion}>Update Question</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >{this.state.collection.name || \"\"}</h1>\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"text\" name=\"type\" id=\"type\" value={this.state.collection.type || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"2\"></Col>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"category\">Category</Label>\r\n                                <Input type=\"text\" name=\"category\" id=\"category\" value={this.state.collection.category || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"3\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"time\">Time</Label>\r\n                                <Input type=\"text\" name=\"time\" id=\"time\" value={this.state.collection.time || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"3\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"numberOfQuestions\">Number of Questions</Label>\r\n                                <Input type=\"text\" name=\"numberOfQuestions\" id=\"numberOfQuestions\" value={this.state.collection.numberOfQuestions || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"3\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"maxMarks\">Max marks</Label>\r\n                                <Input type=\"text\" name=\"maxMarks\" id=\"maxMarks\" value={this.state.collection.maxMarks || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"description\">Description</Label>\r\n                                <Input type=\"textarea\" rows=\"6\" name=\"description\" id=\"description\" value={this.state.collection.description || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3\">\r\n                        <h3>Questions</h3>\r\n                        {this.renderQuestionSelector()}\r\n                        {this.renderSelectedQuestion()}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n                {this.redirectToQuestions()}\r\n                <Button className=\"m-5\" color=\"danger\" onClick={this.deleteCollection}>Delete Collection</Button>\r\n                <Button className=\"m-5\" color=\"primary\" onClick={this.updateCollection}>Update Collection</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCollectionList);","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\n\r\nclass QuestionCollectionCreate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            tags: {}\r\n        };\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToQuestion = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/question\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"file\",\r\n            this.state.file\r\n        );\r\n        formData.append(\r\n            \"name\",\r\n            this.state.name\r\n        );\r\n        formData.append(\r\n            \"type\",\r\n            this.state.type\r\n        );\r\n        formData.append(\r\n            \"category\",\r\n            this.state.category\r\n        );\r\n        formData.append(\r\n            \"description\",\r\n            this.state.description\r\n        );\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            axios.post(store.getState().apiUrl + \"/questions\", formData, {\r\n                headers: { auth: store.getState().auth }\r\n            }).then((res) => {\r\n\r\n                if (res.data.status) {\r\n\r\n                    this.setState({ success: true, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    //console.log(this.state.apiError);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Question Collection</h1>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter collection name\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"category\">Category</Label>\r\n                                <Input type=\"text\" name=\"category\" id=\"category\" placeholder=\"Enter category\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"text\" name=\"type\" id=\"type\" placeholder=\"Enter type\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Question Excel Sheet</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Enter description\" onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToQuestion()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCollectionCreate;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner, CardImg } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nclass ImageStorageComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiError: \"\",\r\n            isLoading: false\r\n        }\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderImageUpload = this.renderImageUpload.bind(this);\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n            if (res.data.status === true) {\r\n                this.setState({ auth: res.headers.auth }, () => {\r\n                    this.setState({ isLoading: false });\r\n                });\r\n            }\r\n            else {\r\n                if (res.data.message !== null) {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: \"Could not log you in\" });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n\r\n        this.setState({ uploadImage: event.target.files[0] });\r\n        if (event.target.files && event.target.files[0]) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n        this.setState({ apiError: \"\" });\r\n    }\r\n\r\n    uploadImage = async () => {\r\n        if (this.state.uploadImage !== null && this.state.uploadImage !== undefined && this.state.uploadImage !== \"\") {\r\n            var formData = new FormData();\r\n            formData.append('questionImage', this.state.uploadImage);\r\n            await axios.post(store.getState().storageUrl + \"/question\", formData, { headers: { auth: this.state.auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    console.log(res.data);\r\n                    this.setState({ imageId: res.data.imageId });\r\n                }\r\n            }).catch((err) =>{\r\n                console.log(err);\r\n                this.setState({apiError: \"error\"});\r\n            })\r\n        }\r\n    }\r\n\r\n    copyId = () => {\r\n        var text = this.state.imageId;\r\n        navigator.clipboard.writeText(text).then(function () {\r\n            console.log('Copying to clipboard was successful!');\r\n        }, function (err) {\r\n            console.error('Could not copy text: ', err);\r\n        });\r\n    }\r\n\r\n    renderForm = () => {\r\n        if (this.state.auth === null || this.state.auth === undefined || this.state.auth === \"\") {\r\n            return (\r\n                <div>\r\n                    <h2>Login</h2>\r\n                    <Form className=\"m-3\">\r\n                        <FormGroup row>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                        <br />\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImageUpload = () => {\r\n        if (this.state.auth !== null && this.state.auth !== undefined && this.state.auth !== \"\") {\r\n            return (\r\n                <Card>\r\n                    <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} />\r\n                    <CardBody>\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"file\">Image</Label>\r\n                            <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.uploadImage} >Upload</Button>\r\n                        <p><span style={{ fontWeight: \"500\" }}>Image id:</span> {this.state.imageId}\r\n                            <Button color=\"link\" onClick={this.copyId} className=\"fa fa-copy\"></Button></p>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                {this.renderForm()}\r\n                                {this.renderImageUpload()}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.renderError()}\r\n                {this.renderSpinner()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ImageStorageComponent;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle>{this.props.data.category}</CardSubtitle>\r\n                        <CardText>{ this.props.data.description }</CardText>\r\n                        <Link to={{\r\n                            pathname: \"course/edit\",\r\n                            state: { course: this.props.data}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CourseCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\";\r\nimport CourseCard from './elements/CourseCard';\r\n\r\n\r\n\r\n\r\nclass CourseList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getCourses = this.getCourses.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.getCourses();\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getCourses = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/course\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ courses: res.data.courses });\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.courses != null && this.state.courses !== undefined) {\r\n            c = this.state.courses.map((course) => {\r\n                return (\r\n                    <Col lg=\"3\" key={course._id}>\r\n                        < CourseCard data={course} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"course/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Course</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Courses</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CourseList;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner, CardImg, CardText, CardSubtitle } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\n\r\nclass CourseEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            apiError: \"\",\r\n            isLoading: false,\r\n            isSubmitting: false,\r\n            subSectionForm: false,\r\n            course: {\r\n                available: false,\r\n                tags: {}\r\n            },\r\n            subSections: {\r\n\r\n            },\r\n            coaches: {\r\n\r\n            },\r\n            newSubSection: {\r\n                name: \"\",\r\n                previousYearQuestions: [],\r\n                sectionalQuestions: [],\r\n                videoURLs: [],\r\n                handoutIds: []\r\n            },\r\n            questionCollectionType: \"Sectional Test Questions\",\r\n            selectedSection: 0,\r\n            changed: false\r\n        };\r\n\r\n\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToCourses = this.redirectToCourses.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderSections = this.renderSections.bind(this);\r\n        this.renderModules = this.renderModules.bind(this);\r\n        this.addModule = this.addModule.bind(this);\r\n        this.renderSubSectionViewButton = this.renderSubSectionViewButton.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ subSectionUpdate: false });\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/course/\" + this.props.state.location.state.course._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        var course = res.data.course;\r\n                        course.tags = {};\r\n                        this.setState({ course: course });\r\n                        for (var section in course.sections) {\r\n                            for (var module in course.sections[section].modules) {\r\n                                for (var subModule in course.sections[section].modules[module].subModules) {\r\n                                    let subModuleId = course.sections[section].modules[module].subModules[subModule];\r\n                                    await axios.get(store.getState().apiUrl + \"/course/submodule/\" + subModuleId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        if (res.data.status) {\r\n                                            var subSections = this.state.subSections;\r\n                                            subSections[subModuleId] = res.data.subModule;\r\n                                            this.setState({ subSections: subSections });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let coach in course.coaches) {\r\n                            await axios.get(store.getState().apiUrl + \"/mentor/\" + course.coaches[coach], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    var coaches = this.state.coaches;\r\n                                    coaches[course.coaches[coach]] = res.data.mentor;\r\n                                    this.setState({ coaches: coaches });\r\n                                }\r\n                            })\r\n                        }\r\n                        console.log(this.state);\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n                this.setState({ numberOfSubSections: Object.keys(this.state.subSections).length });\r\n\r\n                axios.get(store.getState().apiUrl + \"/mentor/coach\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status && res.data.coaches.length != 0) {\r\n                        this.setState({ allCoaches: res.data.coaches, newCoach: res.data.coaches[0].name, newCoachId: res.data.coaches[0]._id });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToCourses = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/course\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var course = this.state.course;\r\n        course.tags[event.target.name] = event.target.checked;\r\n        this.setState({ course: course }, () => {\r\n            console.log(this.state.course.tags)\r\n        });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({ isLoading: true });\r\n        if (store.getState().auth !== undefined) {\r\n            if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                axios.post(store.getState().apiUrl + \"/course/partial\", this.state.course, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data);\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                axios.put(store.getState().apiUrl + \"/course/\" + this.state.course._id, this.state.course, { headers: { auth: store.getState().auth } }).then((res) => {\r\n\r\n                    if (res.data.status) {\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    cancelSubSectionSubmission = async () => {\r\n        var newSubSection = this.state.newSubSection;\r\n        while (newSubSection.sectionalQuestions.length > 0) {\r\n            await axios.delete(store.getState().apiUrl + \"/questions/\" + newSubSection.sectionalQuestions[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (!res.data.status) {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n                else {\r\n                    newSubSection.sectionalQuestions.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n\r\n            });\r\n        }\r\n        while (newSubSection.previousYearQuestions.length > 0) {\r\n            await axios.delete(store.getState().apiUrl + \"/questions/\" + newSubSection.previousYearQuestions[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (!res.data.status) {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n                else {\r\n                    newSubSection.previousYearQuestions.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        while (newSubSection.handoutIds.length > 0) {\r\n            await axios.delete(store.getState().storageUrl + \"/course/handout/\" + this.state.newSubSection.handoutIds[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.status) {\r\n                    newSubSection.handoutIds.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n            }).catch((err) => {\r\n                this.setState({ apiError: \"Could not delete files\" });\r\n                return;\r\n            });\r\n        }\r\n        this.setState({ subSectionForm: false });\r\n    }\r\n    setCourseName = (event) => {\r\n        var course = this.state.course;\r\n        course.name = event.target.value;\r\n        this.setState({ course: course });\r\n    }\r\n    //ADD Functionss....................................\r\n\r\n    submitSubSection = () => {\r\n        this.setState({ isLoading: true });\r\n        var course = this.state.course;\r\n        var subSections = this.state.subSections;\r\n        // push new subsection using axios.......................................\r\n        console.log(this.state.newSubSection);\r\n\r\n        if (store.getState().auth) {\r\n\r\n            var newSubSection = this.state.newSubSection;\r\n            newSubSection.courseId = this.state.course._id;\r\n            newSubSection.sectionalTests = newSubSection.previousYearQuestions.length + newSubSection.sectionalQuestions.length;\r\n            axios.post(store.getState().apiUrl + \"/course/submodule/partial\", newSubSection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ changed: true });\r\n                    subSections[res.data.subModule._id] = res.data.subModule;\r\n                    this.setState({ subSections: subSections });\r\n                    course.sections[this.state.sectionIndex].modules[this.state.moduleIndex].subModules.push(res.data.subModule._id);\r\n                    this.setState({ course: course });\r\n                    this.setState({\r\n                        subSectionForm: false,\r\n                        isLoading: false,\r\n                        subSectionUpdate: false,\r\n                        newSubSection: {\r\n                            name: \"\",\r\n                            previousYearQuestions: [],\r\n                            sectionalQuestions: [],\r\n                            videoURLs: [],\r\n                            handoutIds: []\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({ isLoading: false, apiError: res.data.message });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    addSection = () => {\r\n        var course = this.state.course;\r\n        if (course.sections == null) {\r\n            course.sections = [];\r\n            this.setState({ course: course });\r\n        }\r\n        course.sections.push({\r\n            name: this.state.newSection,\r\n            modules: []\r\n        });\r\n        this.setState({ course: course, newSection: \"\" });\r\n    }\r\n\r\n    addModule = (index) => {\r\n        var course = this.state.course;\r\n        if (course.sections[index].modules == null) {\r\n            course.sections[index].modules = [];\r\n            this.setState({ course: course });\r\n        }\r\n        course.sections[index].modules.push({\r\n            name: this.state.newModule,\r\n            subModules: [],\r\n            questions: []\r\n        })\r\n        this.setState({ course: course, newModule: \"\" });\r\n    }\r\n\r\n\r\n    // Delete Functions........................................................\r\n\r\n    handleDelete = () => {\r\n        this.setState({ isLoading: true });\r\n        if (store.getState().auth !== undefined) {\r\n            if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                this.setState({ success: true });\r\n            }\r\n            else {\r\n                axios.delete(store.getState().apiUrl + \"/course/\" + this.state.course._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n\r\n                    if (res.data.status) {\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteSection = (sectionIndex) => {\r\n        var course = this.state.course;\r\n        var flag = 0;\r\n        for (var m in course.sections[sectionIndex].modules) {\r\n            if (course.sections[sectionIndex].modules[m].subModules.length > 0) {\r\n                flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === 1) {\r\n            alert(\"delete all sub modules inside the module of the section\");\r\n        }\r\n        else {\r\n            course.sections.splice(sectionIndex, 1);\r\n            var selectedSection = this.state.selectedSection;\r\n            selectedSection = 0;\r\n            if (course.sections.length === 0) {\r\n                selectedSection = -1;\r\n            }\r\n            this.setState({ selectedSection: selectedSection, course: course });\r\n        }\r\n\r\n    }\r\n\r\n    deleteModule = (sectionIndex, moduleIndex) => {\r\n        var course = this.state.course;\r\n        if (course.sections[sectionIndex].modules[moduleIndex].subModules.length > 0) {\r\n            alert(\"delete all sub modules inside the module\");\r\n        }\r\n        else {\r\n            course.sections[sectionIndex].modules.splice(moduleIndex, 1);\r\n            this.setState({ course: course });\r\n        }\r\n    }\r\n\r\n    deleteSubSection = (sectionIndex, moduleIndex, subSectionIndex) => {\r\n        var course = this.state.course;\r\n        var subSectionId = course.sections[sectionIndex].modules[moduleIndex].subModules[subSectionIndex];\r\n\r\n        axios.delete(store.getState().apiUrl + \"/course/submodule/\" + subSectionId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n            if (res.data.status) {\r\n                this.setState({ changed: true });\r\n                var emptySubSection = this.state.newSubSection;\r\n                this.setState({ newSubSection: this.state.subSections[subSectionId] });\r\n                this.cancelSubSectionSubmission();\r\n                this.setState({ newSubSection: emptySubSection });\r\n                var subSections = this.state.subSections;\r\n                delete subSections[subSectionId];\r\n                this.setState({ subSections: subSections });\r\n                course.sections[sectionIndex].modules[moduleIndex].subModules.splice(subSectionIndex, 1);\r\n                this.setState({ course: course });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // Rendering functions.....................................................\r\n\r\n    renderSubSectionViewButton = (i, j, index) => {\r\n        if (this.state.changed === false) {\r\n            return (\r\n                <Link to={{\r\n                    pathname: \"/course/viewSubModule\",\r\n                    state: { subModule: this.state.subSections[this.state.course.sections[i].modules[j].subModules[index]] }\r\n                }}>\r\n                    <Button>View</Button>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderSectionSelector = () => {\r\n        if (this.state.course.sections == null) {\r\n            return;\r\n        }\r\n        var c = this.state.course.sections.map((section, index) => {\r\n            return (\r\n                <Button key={index} className=\"m-2\" color=\"primary\" onClick={() => {\r\n                    this.setState({ selectedSection: index });\r\n                }}\r\n                >{section.name}</Button>\r\n            )\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderCoaches = () => {\r\n        if (this.state.course.coaches && this.state.coaches) {\r\n            var c = this.state.course.coaches.map((coachid, index) => {\r\n                var coach = this.state.coaches[coachid];\r\n                if (coach != null && coach !== undefined) {\r\n                    axios.get(store.getState().storageUrl + \"/digest/\" + coach.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                        var coaches = this.state.coaches;\r\n                        coaches[coach._id].image = image;\r\n                        this.setState({ coaches: coaches });\r\n                    })\r\n                    return (\r\n                        <Col lg=\"3\" className=\"mb-2\" key={index}>\r\n                            <Card>\r\n                                <CardImg src={coach.image}></CardImg>\r\n                                <CardBody>\r\n                                    <CardTitle style={{ textAlign: \"left\" }}>{coach.name}</CardTitle>\r\n                                    <CardSubtitle style={{ textAlign: \"left\" }}>{coach.designation}</CardSubtitle>\r\n                                    <CardText style={{ textAlign: \"left\" }}>{coach.description}</CardText>\r\n                                    <Button color=\"danger\" onClick={() => {\r\n                                        var course = this.state.course;\r\n                                        course.coaches.splice(index, 1);\r\n                                        this.setState({ course: course });\r\n                                    }}>Remove Coach</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <div key={index}></div>\r\n                    );\r\n                }\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    renderCoachOptions = () => {\r\n        if (this.state.allCoaches) {\r\n            var c = this.state.allCoaches.map((coach) => {\r\n                return (\r\n                    <option key={coach._id}>{coach.name}</option>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    renderSubSections = (i, j) => {\r\n        if (this.state.course.sections[i].modules[j].subModules) {\r\n            var c = this.state.course.sections[i].modules[j].subModules.map((subSection, index) => {\r\n                if (this.state.subSections[subSection]) {\r\n                    return (\r\n                        <Col lg=\"4\" className=\"mt-3\" key={index}>\r\n                            <Card>\r\n                                <CardTitle><h6>Sub module: {this.state.subSections[subSection].name}</h6></CardTitle>\r\n                                <CardBody>\r\n                                    <p>Number of Videos: {this.state.subSections[subSection].videoURLs.length}</p>\r\n                                    <p>Number of Tests: {this.state.subSections[subSection].sectionalQuestions.length + this.state.subSections[subSection].previousYearQuestions.length}</p>\r\n                                    <p>Handout: {this.state.subSections[subSection].handoutIds.length}</p>\r\n                                    {this.renderSubSectionViewButton(i, j, index)}\r\n                                    <Button className=\"m-1\" color=\"danger\" onClick={() => { this.deleteSubSection(i, j, index) }}>Delete Sub Section</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    );\r\n                }\r\n                return (\r\n                    <div key={index}></div>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n\r\n    }\r\n\r\n    renderModules = (i) => {\r\n        if (this.state.course.sections[i].modules == null) {\r\n            return;\r\n        }\r\n        var c = this.state.course.sections[i].modules.map((module, index) => {\r\n            return (\r\n                <Col lg=\"12\" className=\"mt-3\" key={index}>\r\n                    <Card>\r\n                        <CardTitle><h5>Module: {module.name}</h5></CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                {this.renderSubSections(i, index)}\r\n                                <Col lg=\"4\" className=\"mt-3\">\r\n                                    <Card >\r\n                                        <CardTitle>Add new sub module</CardTitle>\r\n                                        <CardBody>\r\n                                            <FormGroup row>\r\n                                                <Button style={{ marginLeft: \"auto\", marginRight: \"auto\" }} color=\"primary\" onClick={() => {\r\n                                                    if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                                                        alert(\"You must submit the course before adding sub modules\");\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({ subSectionForm: true, sectionIndex: i, moduleIndex: index });\r\n                                                    }\r\n                                                }\r\n\r\n                                                }\r\n                                                >Add Sub Module</Button>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                    <Card>\r\n                                        <CardTitle>Add questions to module</CardTitle>\r\n                                        <CardBody style={{ marginRight: \"auto\" }}>\r\n                                            {this.renderModuleQuestions(i, index)}\r\n                                            <FormGroup row>\r\n                                                <Input type=\"file\" name=\"newQuestionCollectionId\" id=\"newQuestionCollectionId\" onChange={this.handleFile}></Input>\r\n                                                <Button className=\"m-2\" color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        var course = this.state.course;\r\n                                                        var formData = new FormData();\r\n                                                        formData.append(\"file\", this.state.file);\r\n                                                        axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                            if (res.data.status) {\r\n                                                                course.sections[i].modules[index].questions.push(res.data.questionCollection._id);\r\n                                                                this.setState({ course: course });\r\n                                                            }\r\n                                                        });\r\n                                                    }}\r\n                                                >Add</Button>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                    <Card className=\"mt-3\">\r\n                                        <Button className=\"m-3\" color=\"danger\" onClick={() => { this.deleteModule(i, index) }}>Delete this Module</Button>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderSections = () => {\r\n        if (this.state.course.sections === null || this.state.course.sections === undefined || this.state.course.sections.length === 0 || this.state.selectedSection === -1) {\r\n            return;\r\n        }\r\n        else {\r\n            var index = this.state.selectedSection;\r\n            var section = this.state.course.sections[index];\r\n            return (\r\n                <div>\r\n                    <Card className=\"m-3\">\r\n                        <CardTitle><h4>{section.name}</h4></CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                {this.renderModules(index)}\r\n                                <Col lg=\"10\" className=\"mt-3\">\r\n                                    <Card >\r\n                                        <CardTitle>Add new Module</CardTitle>\r\n                                        <CardBody>\r\n                                            <FormGroup row>\r\n                                                <Col lg=\"2\">\r\n                                                    <Label for=\"newModule\" >Module Name</Label>\r\n                                                </Col>\r\n                                                <Col lg=\"8\">\r\n                                                    <Input type=\"text\" name=\"newModule\" id=\"newModule\" value={this.state.newModule || \"\"} onChange={this.handleChange}></Input>\r\n                                                </Col>\r\n                                                <Col lg=\"2\">\r\n                                                    <Button color=\"primary\" onClick={() => { this.addModule(index) }}>Add Module</Button>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg=\"2\" style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n                                    <Button className=\"m-3\" color=\"danger\" onClick={() => { this.deleteSection(index) }}>Delete this section</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    renderModuleQuestions = (i, j) => {\r\n        var c = this.state.course.sections[i].modules[j].questions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderSectionalQuestions = () => {\r\n        var c = this.state.newSubSection.sectionalQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderPreviousYearQuestions = () => {\r\n        var c = this.state.newSubSection.previousYearQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderHandouts = () => {\r\n        var c = this.state.newSubSection.handoutIds.map((handout, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {handout}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderVideos = () => {\r\n        var c = this.state.newSubSection.videoURLs.map((video, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {video.url}</p>\r\n                    <p>Desc:  {video.description}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.subSectionForm) {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"8\" style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                            <div >\r\n                                <h2>Create New Sub Section</h2>\r\n                                <Form className=\"m-3\">\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            {this.renderError()}\r\n                                            {this.renderSpinner()}\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup row className=\"m-2\">\r\n                                                <Label for=\"name\">Name</Label>\r\n                                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter sub section name\" value={this.state.newSubSection.name || \"\"}\r\n                                                    onChange={(event) => {\r\n                                                        var newSubSection = this.state.newSubSection;\r\n                                                        newSubSection.name = event.target.value;\r\n                                                        this.setState({ newSubSection: newSubSection }, () => {\r\n                                                            console.log(this.state);\r\n                                                        });\r\n                                                    }} />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Question Collections</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    <p style={{ textAlign: \"left\" }}>Sectional tests: </p>\r\n                                                    {this.renderSectionalQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Previous year question tests</p>\r\n                                                    {this.renderPreviousYearQuestions()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"select\" name=\"questionCollectionType\" id=\"questionCollectionType\" value={this.state.questionCollectionType}\r\n                                                            onChange={(event) => {\r\n                                                                this.setState({ questionCollectionType: event.target.value });\r\n                                                            }}>\r\n                                                            <option>Sectional Test Questions</option>\r\n                                                            <option>Previous Year Questions</option>\r\n                                                        </Input>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubSection = this.state.newSubSection;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"file\", this.state.file);\r\n                                                                axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        //console.log(this.state.questionCollectionType);\r\n                                                                        if (this.state.questionCollectionType === \"Sectional Test Questions\") {\r\n                                                                            newSubSection.sectionalQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Previous Year Questions\") {\r\n                                                                            newSubSection.previousYearQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        this.setState({ newSubSection: newSubSection }, () => {\r\n                                                                        });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                });\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Handouts</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    {this.renderHandouts()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={async () => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubSection = this.state.newSubSection;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"handoutFile\", this.state.file);\r\n\r\n                                                                await axios.post(store.getState().storageUrl + \"/course/handout\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        newSubSection.handoutIds.push(res.data.fileId);\r\n                                                                        this.setState({ newSubSection: newSubSection });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                }).catch((err) => {\r\n                                                                    this.setState({ apiError: \"could not upload, error: \" + err, isLoading: false });\r\n                                                                })\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col lg=\"12\" className=\"mt-3\">\r\n                                            <p> Videos</p>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    {this.renderVideos()}\r\n                                                    <FormGroup row>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideo\" >ID</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideo\" id=\"newVideo\" value={this.state.newVideo || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDescription\" >Description</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoDescription\" id=\"newVideoDescription\" value={this.state.newVideoDescription || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"2\">\r\n                                                            <Button color=\"primary\"\r\n                                                                onClick={() => {\r\n                                                                    var newSubSection = this.state.newSubSection;\r\n                                                                    var newVideo = { url: this.state.newVideo, description: this.state.newVideoDescription };\r\n                                                                    newSubSection.videoURLs.push(newVideo);\r\n                                                                    this.setState({ newSubSection: newSubSection, newVideo: \"\", newVideoDescription: \"\" });\r\n                                                                    console.log(this.state);\r\n                                                                }}\r\n                                                            >Add</Button>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button className=\"m-3\" onClick={this.cancelSubSectionSubmission}>Cancel</Button>\r\n                                    <Button className=\"m-3\" color=\"primary\" onClick={this.submitSubSection}>Submit</Button>\r\n\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <h1>Course Editor</h1>\r\n                    <Form className=\"mt-4\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"name\" sm={2}>Course Name</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.course.name || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.name = event.target.value;\r\n                                            this.setState({ course: course });\r\n\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"duration\" sm={2}>Course Duration</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"text\" name=\"duration\" id=\"duration\" value={this.state.course.duration || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.duration = event.target.value;\r\n                                            this.setState({ course: course });\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg=\"12\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"description\" sm={2}>Course Description</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"textarea\" rows=\"5\" name=\"description\" id=\"description\" value={this.state.course.description || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.description = event.target.value;\r\n                                            this.setState({ course: course });\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"4\">\r\n                                <FormGroup row>\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <Label for=\"available\">Is course available</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"5\">\r\n                                            <Input className=\"m-2\" type=\"select\" name=\"available\" id=\"available\" value={this.state.course.available || false}\r\n                                                onChange={(event) => {\r\n                                                    var course = this.state.course;\r\n                                                    course.available = event.target.value\r\n                                                    this.setState({ course: course });\r\n                                                }}>\r\n                                                <option>true</option>\r\n                                                <option>false</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col lg=\"4\">\r\n                                <FormGroup row>\r\n                                    <Row>\r\n                                        <Col style={{ marginTop: \"auto\", marginBottom: \"auto\" }} lg=\"3\">\r\n                                            <Label for=\"price\">price</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"5\">\r\n                                            <Input className=\"m-2\" type=\"text\" name=\"price\" id=\"price\" value={this.state.course.price || \"\"}\r\n                                                onChange={(event) => {\r\n                                                    var course = this.state.course;\r\n                                                    course.price = event.target.value\r\n                                                    this.setState({ course: course });\r\n                                                }}>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"12\">\r\n                                <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                                <FormGroup className=\"ml-4\" row>\r\n                                    <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.course.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                                    <Label for=\"whatsNew\">Whats new</Label>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"ml-4\" row>\r\n                                    <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.course.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                                    <Label for=\"other\">Other</Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <h2 style={{ textAlign: \"left\" }} className=\"mt-3 mb-3\" >Coaches</h2>\r\n                        <div style={{ textAlign: \"left\" }}>\r\n                            <Row>\r\n                                {this.renderCoaches()}\r\n                            </Row>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <Label for=\"newCoach\">Coach</Label>\r\n                                    <Input type=\"select\" name=\"newCoach\" id=\"newCoach\" placeholder=\"Select new coach\" value={this.state.newCoach} onChange={(event) => {\r\n                                        this.setState({ newCoach: event.target.value });\r\n                                        var newCoach = this.state.allCoaches.filter((c) => {\r\n                                            return c.name === event.target.value;\r\n                                        })[0];\r\n                                        this.setState({ newCoachId: newCoach._id })\r\n                                    }} >\r\n                                        {this.renderCoachOptions()}\r\n                                    </Input>\r\n                                    <Button className=\"mt-2\" color=\"primary\" onClick={() => {\r\n                                        var course = this.state.course;\r\n                                        course.coaches.push(this.state.newCoachId);\r\n                                        var coaches = this.state.coaches;\r\n                                        coaches[this.state.newCoachId] = this.state.allCoaches.filter((coach) => {\r\n                                            return coach._id === this.state.newCoachId;\r\n                                        })[0];\r\n                                        this.setState({ coaches: coaches });\r\n                                        console.log(this.state)\r\n                                    }}>Add</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n\r\n\r\n                        <h2 style={{ textAlign: \"left\" }} className=\"mt-3 mb-3\" >Sections</h2>\r\n                        <div style={{ textAlign: \"left\" }}>\r\n                            {this.renderSectionSelector()}\r\n                        </div>\r\n                        {this.renderSections()}\r\n                        <h4 className=\"m-3\" style={{ textAlign: \"left\" }}>Add New Section</h4>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"mt-3\">\r\n                                <CardBody>\r\n                                    <FormGroup row>\r\n                                        <Col lg=\"2\">\r\n                                            <Label for=\"newSection\" >Section Name</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"6\">\r\n                                            <Input type=\"text\" name=\"newSection\" id=\"newSection\" value={this.state.newSection || \"\"} onChange={this.handleChange}></Input>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <Button color=\"primary\" onClick={this.addSection}>Add section</Button>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Form>\r\n\r\n                    <Row className=\"m-4\">\r\n                        <Col className=\"lg-2\">\r\n                            <Button color=\"danger\" onClick={this.handleDelete}>Delete</Button>\r\n                        </Col>\r\n                        <Col className=\"lg-2\">\r\n                            <Button color=\"primary\" onClick={this.handleSubmit} >Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* {this.checkLogin()} */}\r\n                    {this.renderSpinner()}\r\n                    {this.renderError()}\r\n                    {this.redirectToCourses()}\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CourseEditor;","import React from 'react';\r\nimport { Card, CardBody, Button, Container, Row, Col, Form, Alert, Spinner, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport store from \"../reduxStore/store\";\r\nimport axios from 'axios';\r\n\r\nclass SubModuleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            apiError: \"\",\r\n            isLoading: false,\r\n            subModule: this.props.state.location.state.subModule,\r\n            pdfView: false,\r\n            questionCollectionType: \"Sectional Test Questions\"\r\n        };\r\n\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToCourses = this.redirectToCourses.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToCourses = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/course\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    renderSectionalQuestions = () => {\r\n        var c = this.state.subModule.sectionalQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                            var subModule = this.state.subModule;\r\n                            subModule.sectionalQuestions.splice(index, 1);\r\n                            this.setState({ subModule: subModule });\r\n                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                console.log(response.data);\r\n                                if (response.data.status) {\r\n                                    axios.delete(store.getState().apiUrl + \"/questions/\" + questionCollection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                                }\r\n                            });\r\n\r\n                        }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderPreviousYearQuestions = () => {\r\n        var c = this.state.subModule.previousYearQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                            var subModule = this.state.subModule;\r\n                            subModule.previousYearQuestions.splice(index, 1);\r\n                            this.setState({ subModule: subModule });\r\n                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                console.log(response.data);\r\n                                if (response.data.status) {\r\n                                    axios.delete(store.getState().apiUrl + \"/questions/\" + questionCollection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                                }\r\n                            });\r\n\r\n                        }}></Button>\r\n\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderHandouts = () => {\r\n        var c = this.state.subModule.handoutIds.map((handout, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {handout}\r\n                        <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"\r\n                            onClick={() => {\r\n                                if (store.getState().auth) {\r\n                                    this.setState({ isLoading: true });\r\n                                    axios.get(store.getState().storageUrl + \"/course/handout/\" + handout, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        console.log(res.data);\r\n                                        this.setState({\r\n                                            pdf: \"data:application/pdf;base64,\" + res.data,\r\n                                            pdfView: true,\r\n                                            isLoading: false\r\n                                        })\r\n                                    });\r\n                                }\r\n                            }}\r\n                        ></Button>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                            var subModule = this.state.subModule;\r\n                            subModule.handoutIds.splice(index, 1);\r\n                            this.setState({ subModule: subModule });\r\n                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                console.log(response.data);\r\n                                if (response.data.status) {\r\n                                    axios.delete(store.getState().storageUrl + \"/course/handout/\" + handout, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        // if(!res.data.status){\r\n                                        //     this.setState({apiError: \"could not delete from storage\"});\r\n                                        // }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                                }\r\n                            });\r\n\r\n                        }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderVideos = () => {\r\n        var c = this.state.subModule.videoURLs.map((video, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {video.url}</p>\r\n                    <p>Desc:  {video.description}</p>\r\n                    <Link to={{\r\n\r\n                    }}>\r\n                        <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                    </Link>\r\n                    <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                        var subModule = this.state.subModule;\r\n                        subModule.videoURLs.splice(index, 1);\r\n                        this.setState({ subModule: subModule });\r\n                        axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                            console.log(response.data);\r\n                            if (response.data.status) {\r\n                               \r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                            }\r\n                        });\r\n\r\n                    }}></Button>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.pdfView) {\r\n            return (\r\n                <Container>\r\n                    <iframe title=\"iframe\" Style=\"display:block\" width='100%' height='500px' src={this.state.pdf}></iframe>\r\n                    <Button color=\"primary\" onClick={() => { this.setState({ pdfView: false }) }}>Go back</Button>\r\n                </Container>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"10\" style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                            <div >\r\n                                <h2>Create New Sub Section</h2>\r\n                                <Form className=\"m-3\">\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            {this.renderError()}\r\n                                            {this.renderSpinner()}\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <h3>{this.state.subModule.name}</h3>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Question Collections</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    <p style={{ textAlign: \"left\" }}>Sectional tests: </p>\r\n                                                    {this.renderSectionalQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Previous year question tests:</p>\r\n                                                    {this.renderPreviousYearQuestions()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"select\" name=\"questionCollectionType\" id=\"questionCollectionType\" value={this.state.questionCollectionType}\r\n                                                            onChange={(event) => {\r\n                                                                this.setState({ questionCollectionType: event.target.value });\r\n                                                            }}>\r\n                                                            <option>Sectional Test Questions</option>\r\n                                                            <option>Previous Year Questions</option>\r\n                                                        </Input>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubModule = this.state.subModule;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"file\", this.state.file);\r\n                                                                axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        //console.log(this.state.questionCollectionType);\r\n                                                                        if (this.state.questionCollectionType === \"Sectional Test Questions\") {\r\n                                                                            newSubModule.sectionalQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Previous Year Questions\") {\r\n                                                                            newSubModule.previousYearQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        this.setState({ subModule: newSubModule }, () => {\r\n                                                                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                                console.log(response.data);\r\n                                                                                if (response.data.status) {\r\n\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    axios.delete(store.getState().apiUrl + \"/questions/\" + res.data.questionCollection._id);\r\n                                                                                    this.setState({ apiError: \"Could not update\" });\r\n                                                                                }\r\n                                                                            });\r\n                                                                        });\r\n\r\n\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                });\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Handouts</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    {this.renderHandouts()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={async () => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubModule = this.state.subModule;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"handoutFile\", this.state.file);\r\n\r\n                                                                await axios.post(store.getState().storageUrl + \"/course/handout\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        newSubModule.handoutIds.push(res.data.fileId);\r\n                                                                        this.setState({ subModule: newSubModule }, () => {\r\n                                                                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                                console.log(response.data);\r\n                                                                                if (response.data.status) {\r\n\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    axios.delete(store.getState().storageUrl + \"/course/handout/\" + res.data.fileId);\r\n                                                                                    this.setState({ apiError: \"Could not update\" });\r\n                                                                                }\r\n                                                                            });\r\n                                                                        });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                }).catch((err) => {\r\n                                                                    this.setState({ apiError: \"could not upload, error: \" + err, isLoading: false });\r\n                                                                })\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col lg=\"12\" className=\"mt-3\">\r\n                                            <p> Videos</p>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    {this.renderVideos()}\r\n                                                    <FormGroup row>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideo\" >ID</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideo\" id=\"newVideo\" value={this.state.newVideo || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDescription\" >Description</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoDescription\" id=\"newVideoDescription\" value={this.state.newVideoDescription || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"2\">\r\n                                                            <Button color=\"primary\"\r\n                                                                onClick={() => {\r\n                                                                    var newSubModule = this.state.subModule;\r\n                                                                    var newVideo = { url: this.state.newVideo, description: this.state.newVideoDescription };\r\n                                                                    newSubModule.videoURLs.push(newVideo);\r\n                                                                    this.setState({ subModule: newSubModule, newVideo: \"\", newVideoDescription: \"\" });\r\n                                                                    axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                        console.log(response.data);\r\n                                                                        if (response.data.status) {\r\n\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            this.setState({ apiError: \"could not update\" });\r\n                                                                        }\r\n                                                                    });\r\n                                                                }}\r\n                                                            >Add</Button>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default SubModuleView;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, CardImg } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from '../../reduxStore/store'\r\n\r\n\r\nclass MentorCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        axios.get(store.getState().storageUrl + \"/mentor/\" + this.props.data.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n            var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n            this.setState({ image: image });\r\n        })\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardImg src={this.state.image}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle style={{textAlign:\"left\"}}>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle style={{textAlign:\"left\"}}>{this.props.data.designation}</CardSubtitle>\r\n                        <CardText style={{textAlign:\"left\"}}>{this.props.data.description}</CardText>\r\n                        <Link to={{\r\n                            pathname: \"mentor/edit\",\r\n                            state: { mentor: this.props.data }\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MentorCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport MentorCard from './MentorCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass MentorsList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mentors: [],\r\n            coaches: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/mentor\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ mentors: res.data.mentors });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n            await axios.get(store.getState().apiUrl + \"/mentor/coach\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ coaches: res.data.coaches });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.mentors != null && this.state.mentors !== undefined) {\r\n            c = this.state.mentors.map((mentor) => {\r\n                return (\r\n                    <Col lg=\"3\" key={mentor._id}>\r\n                        <MentorCard data={mentor} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        var d;\r\n        if (this.state.coaches != null && this.state.coaches !== undefined) {\r\n            d = this.state.coaches.map((coach) => {\r\n                return (\r\n                    <Col lg=\"3\" key={coach._id}>\r\n                        < MentorCard data={coach} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"mentor/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Mentor</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Mentors</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    <h1 style={{ margin: \"auto\" }} >Coaches</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {d}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MentorsList","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\n\r\nclass MentorEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            type: \"Mentor\",\r\n            tags: {}\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data.mentor);\r\n                        this.setState(res.data.mentor);\r\n                        axios.get(store.getState().storageUrl + \"/mentor/\" + this.props.state.location.state.mentor.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                            var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                            this.setState({ image: image });\r\n                        })\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/mentor\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file != null) {\r\n                    formData.append('mentorImage', this.state.file);\r\n                    await axios.put(store.getState().storageUrl + \"/mentor/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                axios.put(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, this.state, {\r\n                                    headers: { auth: store.getState().auth }\r\n                                }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ success: true, isLoading: false });\r\n                                    }\r\n                                    else {\r\n                                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\" });\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({image: undefined}, () => {\r\n                        axios.put(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, this.state, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    });\r\n                    \r\n                }\r\n\r\n\r\n            }\r\n            else {\r\n                formData.append('mentorImage', this.state.file);\r\n                await axios.post(store.getState().storageUrl + \"/mentor\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                            axios.post(store.getState().apiUrl + \"/mentor\", this.state, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\" });\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().storageUrl + \"/mentor/\" + this.state.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            axios.delete(store.getState().apiUrl + \"/mentor/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ isLoading: false, success: true });\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: false, apiError: res.data.message });\r\n                                }\r\n                            }).catch((err) => {\r\n                                this.setState({ apiError: err });\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: \"could not delete image\" + res.data.message });\r\n                        }\r\n                    });\r\n\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Mentor</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter Mentor name\" value={this.state.name || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"designation\">Designation</Label>\r\n                                <Input type=\"text\" name=\"designation\" id=\"designation\" placeholder=\"Enter designation\" value={this.state.designation || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"select\" name=\"type\" id=\"type\" placeholder=\"Enter type\" value={this.state.type || \"\"} onChange={this.handleChange} >\r\n                                    <option>Mentor</option>\r\n                                    <option>Coach</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Mentor Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Enter description\" value={this.state.description || \"\"} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    {this.renderTags()}\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MentorEditor;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, Button, CardImg } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from '../../reduxStore/store'\r\n\r\n\r\nclass WhatsNewCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if(this.props.data.imageId){\r\n            axios.get(store.getState().storageUrl + \"/news/\" + this.props.data.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                this.setState({ image: image });\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardImg src={this.state.image}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle style={{textAlign:\"left\"}}>{this.props.data.title}</CardTitle>\r\n                        <CardText style={{textAlign:\"left\"}}>{this.props.data.body}</CardText>\r\n                        <Link to={{\r\n                            pathname: \"whatsnew/edit\",\r\n                            state: { whatsNew: this.props.data }\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WhatsNewCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport WhatsNewCard from './WhatsNewCard';\r\n\r\n\r\nclass WhatsNewList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            whatsNews: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/news\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ whatsNews: res.data.whatsNews });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.whatsNews != null && this.state.whatsNews !== undefined) {\r\n            c = this.state.whatsNews.map((whatsNew) => {\r\n                return (\r\n                    <Col lg=\"3\" key={whatsNew._id}>\r\n                        <WhatsNewCard data={whatsNew} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"whatsnew/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New WhatsNew</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Whats New!</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WhatsNewList","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\n\r\nclass WhatsNewEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\"\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data.whatsNew);\r\n                        this.setState(res.data.whatsNew);\r\n                        if (this.props.state.location.state.whatsNew.imageId) {\r\n                            axios.get(store.getState().storageUrl + \"/news/\" + this.props.state.location.state.whatsNew.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                                this.setState({ image: image });\r\n                            });\r\n                        }\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/whatsnew\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        var whatsNewObject = {};\r\n        whatsNewObject.title = this.state.title;\r\n        whatsNewObject.body = this.state.body;\r\n        whatsNewObject.imageId = this.state.imageId;\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file) {\r\n                    formData.append(\"whatsNewImage\", this.state.file);\r\n                    axios.put(store.getState().storageUrl + \"/news/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            whatsNewObject.imageId = res.data.imageId;\r\n                            axios.put(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, whatsNewObject, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\", isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    axios.put(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, whatsNewObject, {\r\n                        headers: { auth: store.getState().auth }\r\n                    }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true, isLoading: false });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                formData.append(\"whatsNewImage\", this.state.file);\r\n                axios.post(store.getState().storageUrl + \"/news\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        whatsNewObject.imageId = res.data.imageId;\r\n                        axios.post(store.getState().apiUrl + \"/news\", whatsNewObject, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\", isLoading: false });\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().apiUrl + \"/news/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ isLoading: false, success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: res.data.message });\r\n                        }\r\n                    }).catch((err) => {\r\n                        this.setState({ apiError: err });\r\n                    })\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create Whats New!</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Enter Title for whats new\" value={this.state.title || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Mentor Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"body\">Body</Label>\r\n                                <Input type=\"textarea\" rows=\"5\" name=\"body\" id=\"body\" placeholder=\"Enter the content\" value={this.state.body || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WhatsNewEditor;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass AddAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            privilege: \"admin\",\r\n            apiError: \"\",\r\n            apiResponse:\"\",\r\n            isLoading: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirect = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/admin\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderApiResponse = () => {\r\n        if (this.state.apiResponse !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"success\">{this.state.apiResponse}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(this.state);\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({apiError:\"\", apiResponse: \"\", isLoading: true});\r\n        var adminObject = { email: this.state.email, privilege: this.state.privilege } ;\r\n        axios.post(store.getState().apiUrl + \"/admins\", adminObject, {headers: {auth: store.getState().auth}}).then((res) => {\r\n            if(res.data.status){\r\n                this.setState({apiResponse: \"Admin added successfully\", isLoading: false});\r\n            }\r\n            else{\r\n                this.setState({apiError: \"could not add: \" + res.data.message, isLoading: false});\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                <div>\r\n                                    <h2>Add new Admin</h2>\r\n                                    <Form className=\"m-3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"email\">Email</Label>\r\n                                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email of the user\" onChange={this.handleChange} />\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"privilege\">Privilege</Label>\r\n                                            <Input type=\"select\" name=\"privilege\" id=\"privilege\" placeholder=\"Enter privilege given to the user\" onChange={this.handleChange} >\r\n                                                <option>admin</option>\r\n                                                <option>editor</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                                    </Form>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.redirect()}\r\n                {this.renderError()}\r\n                {this.renderApiResponse()}\r\n                {this.renderSpinner()}\r\n                {this.checkLogin()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddAdmin;","import React from 'react';\r\nimport { Container, Row, Input, Button, Alert, Spinner, Table } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass AdminList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            admins: [],\r\n            apiError: \"\",\r\n            apiResponse:\"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/admins\", { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                if (res.data.status) {\r\n                    var admins = [];\r\n                    for (let admin in res.data.admins) {\r\n                        let adminObject = res.data.admins[admin];\r\n                        await axios.get(store.getState().apiUrl + \"/admins/\" + res.data.admins[admin].uid, {headers: {auth: store.getState().auth}}).then((response)=>{\r\n                            adminObject.name = response.data.admin.name;\r\n                            adminObject.email = response.data.admin.email;\r\n                            adminObject.phone = response.data.admin.phone;\r\n                            adminObject.changedPrivilege = adminObject.privileges;\r\n                        })\r\n                        admins.push(adminObject);\r\n                    }\r\n                    this.setState({ admins: admins, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderApiResponse = () => {\r\n        if (this.state.apiResponse !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"success\">{this.state.apiResponse}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.admins != null && this.state.admins !== undefined) {\r\n            c = this.state.admins.map((admin, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{admin.name}</td>\r\n                        <td>{admin.email}</td>\r\n                        <td>{admin.phone}</td>\r\n                        <td>{admin.privileges}</td>\r\n                        <td>\r\n                            <Input type=\"select\" name=\"privilege\" id=\"privilege\" placeholder=\"Enter privilege given to the user\" value={admin.changedPrivilege} onChange={(event) => {\r\n                                var administrators = this.state.admins;\r\n                                administrators[index].changedPrivilege = event.target.value;\r\n                                this.setState({ admins: administrators });\r\n                            }} >\r\n                                <option>admin</option>\r\n                                <option>editor</option>\r\n                            </Input>\r\n                        </td>\r\n                        <td><Button color=\"danger\" className=\"fa fa-trash\" onClick={() => {\r\n                            this.setState({ isLoading: true, apiError: \"\", apiResponse: \"\" });\r\n                            axios.delete(store.getState().apiUrl + \"/admins/\" + admin.uid, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                console.log(res.data);\r\n                                if (res.data.status) {\r\n                                    var admins = this.state.admins;\r\n                                    admins.splice(index, 1);\r\n                                    this.setState({ isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: true, apiError: \"could not delete: \" + res.data.message });\r\n                                }\r\n                            });\r\n                        }}></Button>\r\n                            <Button color=\"primary\" className=\"fa fa-edit ml-2\" onClick={() => {\r\n                                this.setState({ isLoading: true, apiError: \"\", apiResponse: \"\" });\r\n                                axios.put(store.getState().apiUrl + \"/admins/\" + admin.uid, { privilege: this.state.admins[index].changedPrivilege }, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        var admins = this.state.admins;\r\n                                        admins[index].privileges = admins[index].changedPrivilege;\r\n                                        this.setState({admins: admins});\r\n                                        this.setState({apiResponse: \"Successfully changed\", isLoading: false});\r\n                                    }\r\n                                    else{\r\n                                        this.setState({apiError: \"Could not change privilege: \" + res.data.message, isLoading: false});\r\n                                    }\r\n                                });\r\n                            }}></Button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"admin/new\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Admin</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Administrators</h1>\r\n                    <Row className=\"mt-3\">\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SL no.</th>\r\n                                    <th>Name</th>\r\n                                    <th>email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Privileges</th>\r\n                                    <th>Change Privileges</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {c}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row>\r\n                    {this.renderError()}\r\n                    {this.renderApiResponse()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AdminList","import React from 'react';\nimport './App.css';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Switch, Route } from \"react-router-dom\";\nimport Sidebar from './components/Sidebar';\nimport DigestList from \"./components/DigestList\";\nimport DigestEditor from \"./components/DigestEditor\";\nimport LoginForm from \"./components/LoginForm\";\nimport { connect } from \"react-redux\";\nimport QuestionCollectionList from './components/QuestionCollectionList';\nimport QuestionCollectionDetail from './components/QuestionCollectionDetail';\nimport QuestionCollectionCreate from './components/QuestionCollectionCreate';\nimport ImageStorageComponent from './components/ImageStorageComponent';\nimport CourseList from './components/CourseList';\nimport CourseEditor from './components/CourseEditor';\nimport SubModuleView from './components/SubModuleView';\nimport MentorsList from './components/mentors/MentorsList';\nimport MentorEditor from './components/mentors/MentorEditor';\nimport WhatsNewList from './components/whatsNew/WhatsNewList';\nimport WhatsNewEditor from './components/whatsNew/WhatsNewEditor';\nimport AddAdmin from './components/admin/AddAdmin';\nimport AdminList from './components/admin/AdminList';\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state\n  };\n}\n\nclass App extends React.Component {\n\n  renderNav = () => {\n    if (this.props.location.pathname !== \"/storage\") {\n      return (\n        <Sidebar />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderNav()}\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n            <Redirect to=\"/digest\"/>\n          )} />\n          <Route exact path=\"/digest\" render={(props) => (\n            <DigestList />\n          )} />\n          <Route path=\"/digest/edit\" render={(props) => (\n            <DigestEditor state={props} />\n          )} />\n          <Route exact path=\"/login\" render={(props) => (\n            <LoginForm />\n          )} />\n          <Route exact path=\"/question\" render={(props) => (\n            <QuestionCollectionList />\n          )} />\n          <Route exact path=\"/question/view\" render={(props) => (\n            <QuestionCollectionDetail state={props} />\n          )} />\n          <Route exact path=\"/question/new\" render={(props) => (\n            <QuestionCollectionCreate state={props} />\n          )} />\n          <Route exact path=\"/storage\" render={(props) => (\n            <ImageStorageComponent />\n          )} />\n          <Route exact path=\"/course\" render={(props) => (\n            <CourseList />\n          )} />\n          <Route exact path=\"/course/edit\" render={(props) => (\n            <CourseEditor state={props} />\n          )} />\n          <Route exact path=\"/course/viewSubModule\" render={(props) => (\n            <SubModuleView state={props} />\n          )} />\n          <Route exact path=\"/mentor\" render={(props) => (\n            <MentorsList />\n          )} />\n          <Route exact path=\"/mentor/edit\" render={(props) => (\n            <MentorEditor state={props} />\n          )} />\n          <Route exact path=\"/whatsnew\" render={(props) => (\n            <WhatsNewList state={props} />\n          )} />\n          <Route exact path=\"/whatsnew/edit\" render={(props) => (\n            <WhatsNewEditor state={props} />\n          )} />\n          <Route exact path=\"/admin/new\" render={(props) => (\n            <AddAdmin state={props} />\n          )} />\n          <Route exact path=\"/admin\" render={(props) => (\n            <AdminList state={props} />\n          )} />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'; \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}