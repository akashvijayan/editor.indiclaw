{"version":3,"sources":["reduxStore/reducer.js","reduxStore/store.js","reduxStore/action.js","components/Sidebar.js","components/elements/DigestCard.js","components/DigestList.js","components/elements/ImageRenderer.js","components/DigestEditor.js","components/LoginForm.js","components/elements/QuestionCollectionCard.js","components/QuestionCollectionList.js","components/elements/QuestionLayout.js","components/QuestionCollectionDetail.js","components/QuestionCollectionCreate.js","components/ImageStorageComponent.js","components/elements/CourseCard.js","components/CourseList.js","components/mentors/MentorCard.js","components/elements/CourseImage.js","components/CourseEditor.js","components/SubModuleView.js","components/mentors/MentorsList.js","components/mentors/MentorEditor.js","components/whatsNew/WhatsNewCard.js","components/whatsNew/WhatsNewList.js","components/whatsNew/WhatsNewEditor.js","components/admin/AddAdmin.js","components/admin/AdminList.js","components/blog/BlogCard.js","components/blog/BlogList.js","components/blog/BlogEditor.js","components/team/TeamCard.js","components/team/TeamList.js","components/team/TeamEditor.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","storageUrl","apiUrl","action","type","auth","payload","token","store","createStore","applyMiddleware","thunk","saveAuth","Sidebar","props","toggle","setState","isOpen","isLoggedIn","undefined","getState","Nav","className","navbar","NavItem","style","color","to","Button","onClick","event","axios","post","localStorage","getItem","then","res","data","status","setItem","console","log","bind","Navbar","light","expand","NavbarBrand","NavbarToggler","this","Collapse","React","Component","connect","dispatch","DigestCard","Card","CardBody","CardTitle","title","CardSubtitle","digestType","CardText","dangerouslySetInnerHTML","__html","news","pathname","digest","isEdit","DigestList","componentDidMount","getDigests","renderError","apiError","Alert","renderSpinner","isLoading","Spinner","a","get","headers","digests","message","checkLogin","c","map","Col","lg","key","_id","Row","marginLeft","Container","margin","Pagination","aria-label","PaginationItem","PaginationLink","first","next","timestamp","length","dateCreated","ImageRenderer","url","parameter","imageId","maxHeight","maxWidth","src","alt","DigestEditor","zIndex","position","top","left","bottom","right","height","width","redirectToDigests","success","submitDigest","digestImage","image","location","put","handleChange","target","name","value","handleSubmit","isSubmitting","formData","FormData","removeImageId","append","delete","catch","err","handleDelete","handleFile","files","reader","FileReader","onload","e","result","readAsDataURL","uploadImage","removeImage","renderImagePart","FormGroup","row","Label","for","Input","id","onChange","CardImg","objectFit","marginRight","populateFields","editor","ClassicEditor","learnings","onInit","getData","onBlur","onFocus","laws","ratio","features","dialogue","onTagChange","tags","checked","onMetaChange","meta","renderTags","textAlign","whatsNew","other","renderMeta","description","context","Form","sm","rows","LoginForm","loginUsingToken","redirect","isLogin","saveRefreshToken","phone","verificationMethod","renderForm","placeholder","otp","questionCollectionCard","questionCollectionId","QuestionCollectionList","getQuestionCollections","questionCollections","collections","questionCollection","QuestionCollectionCard","getAuth","QuestionLayout","renderExplanation","question","index","explanation","content","i","concat","push","singleLatex","l","handleChangeFunction","renderImage","imageData","questions","questionNumber","textAlignVertical","options","handleOptionChange","answer","getQuestionCollection","collectionName","collection","questionData","redirectToQuestions","renderDirection","direction","handleQuestionDataChange","renderLegalPrinciple","legalPrinciple","questionIndex","deleteCollection","handleCollectionDataChange","handleSubQuestionsDataChange","subQuestionIndex","handleSubQuestionOptionChange","optionIndex","updateQuestion","questionId","updateCollection","collectionId","renderQuestionSelector","renderSelectedQuestion","questionType","section","topic","sourceExam","difficultyLevel","Time","marksPerQuestion","time","numberOfQuestions","maxMarks","QuestionCollectionCreate","redirectToQuestion","file","ImageStorageComponent","copyId","text","navigator","clipboard","writeText","error","renderImageUpload","fontWeight","CourseCard","category","course","CourseList","getCourses","courses","MentorCard","designation","mentor","CourseImage","imageType","imageFiles","imageDatas","imageIds","spinnerStart","onUpload","CourseEditor","subSectionUpdate","newSectionIndex","sections","modules","module","subModuleId","subModules","subModule","subSections","coach","coaches","numberOfSubSections","Object","keys","allCoaches","newCoach","newCoachId","newVideoAuthor","allFullLengthTests","newFullLengthTest","newFullLengthTestId","redirectToCourses","handleCourseDetailChange","cancelSubSectionSubmission","newSubSection","sectionalQuestions","splice","previousYearQuestions","handoutIds","subSectionForm","setCourseName","submitSubSection","courseId","sectionalTests","changed","sectionIndex","moduleIndex","videoURLs","addSection","newSection","addModule","newModule","deleteSection","flag","m","alert","selectedSection","deleteModule","deleteSubSection","subSectionIndex","subSectionId","emptySubSection","renderSubSectionViewButton","j","sectionName","renderSectionSelector","renderCoaches","coachid","renderCoachOptions","renderFullLengthTests","fullLengthTests","questionCollectionName","filter","test","renderFullLengthtestOptions","renderSubSections","subSection","numberOfTests","directQuestions","practiceQuestions","newPatternQuestions","renderModules","renderSections","marginTop","marginBottom","renderModuleQuestions","renderSectionalQuestions","renderPreviousYearQuestions","renderPracticeQuestions","renderDirectQuestions","renderNewPatternQuestions","renderHandouts","handout","renderVideos","video","videoAuthorName","author","duration","renderWhatYouWillLearn","whatYouWillLearn","item","renderFAQ","FAQ","renderAdditionalDetails","newWhatYouWillLearn","newQuestion","newAnswer","available","questionCollectionType","fileId","newVideoTitle","newVideo","newVideoDuration","newVideoDescription","smallDescription","price","classHours","studyNotes","tests","exams","SubModuleView","handleVideoDetailChange","deleteQuestionCollection","response","pdf","pdfView","newSubModule","handoutId","history","goBack","withRouter","MentorsList","mentors","d","MentorEditor","redirectToMentors","renderDeleteButton","previewVideoUrl","bio","WhatsNewCard","body","WhatsNewList","whatsNews","WhatsNewEditor","whatsNewObject","AddAdmin","renderApiResponse","apiResponse","adminObject","email","privilege","AdminList","admins","admin","uid","changedPrivilege","privileges","administrators","Table","BlogCard","blog","BlogList","blogs","BlogEditor","showMeta","renderBody","imageid","renderEditor","currentEditor","newText","obj","image2","blogFile","blogImage","images","TeamCard","role","team","TeamList","TeamEditor","teamType","linkedIn","instagram","App","renderNav","exact","path","render","QuestionCollectionDetail","Boolean","window","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.738cf3f8.chunk.js","sourcesContent":["const reducer = (state = {\r\n  // apiUrl: \"https://api.indiclaw.com\",\r\n  // storageUrl: \"https://storage.indiclaw.com\"\r\n  storageUrl: \"https://devstorage.indiclaw.com\",\r\n  apiUrl: \"https://api-indiclaw.herokuapp.com\",\r\n  // storageUrl: \"http://localhost:5000\",\r\n  // apiUrl: \"http://localhost:4000\"\r\n\r\n}, action) => {\r\n    switch (action.type) {\r\n      case \"saveLoginAuth\": state.auth = action.payload;\r\n                            return {...state, auth: action.payload};\r\n      case \"saveRefreshToken\" : state.token = action.payload;\r\n                            return {...state, token: action.payload}\r\n      case \"getLoginAuth\": return state;\r\n      case \"getAPIUrl\" : return state;\r\n      case \"getStorageUrl\": return state;\r\n      default: return state;\r\n    }\r\n }\r\n export default reducer;","import reducer from './reducer';\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n    );\r\n\r\nexport default store","export function saveAuth(auth) {\r\n    return {\r\n        type: \"saveLoginAuth\",\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport function saveRefreshToken(token) {\r\n    return{\r\n        type: \"saveRefreshToken\",\r\n        payload: token\r\n    }\r\n}\r\n\r\nexport function getAuth() {\r\n    return {\r\n        type: \"getLoginAuth\"\r\n    }\r\n}\r\n\r\nexport function getAPIUrl(){\r\n    return{\r\n        type: \"getAPIUrl\"\r\n    }\r\n}\r\n\r\nexport function getStorageUrl(){\r\n    return{\r\n        type: \"getStorageUrl\"\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Button\r\n} from 'reactstrap';\r\nimport store from \"../reduxStore/store\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuth } from '../reduxStore/action';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      auth: state\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      saveAuth: (auth) => dispatch(saveAuth(auth))\r\n  };\r\n}\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n    this.isLoggedIn = this.isLoggedIn.bind(this);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n  isLoggedIn = () => {\r\n    if (store.getState().auth === undefined || store.getState().auth === \"\") {\r\n      return (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <Link style={{ color: \"grey\" }} to=\"/login\">Login</Link>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <Button color=\"link\" onClick={(event)=>{\r\n              axios.post(store.getState().apiUrl + \"/users/logout\", { token: localStorage.getItem(\"token\") }).then((res) =>{\r\n                if(res.data.status){\r\n                  this.props.saveAuth(undefined);\r\n                  localStorage.setItem(\"token\", undefined);\r\n                  console.log(localStorage.getItem(\"token\"))\r\n                }\r\n              })\r\n            }}>logout</Button>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand >Indic Law</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/digest\">Digest</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/course\">Courses</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/question\">Questions</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/mentor\">Mentors</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/whatsnew\">Whats new</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/blog\">Blogs</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/team\">Team</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/admin\">Admins</Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link style={{ color: \"grey\" }} className=\"m-3\" to=\"/storage\">Image Storage</Link>\r\n              </NavItem>\r\n            </Nav>\r\n            {this.isLoggedIn()}\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Sidebar);","import React from 'react';\r\nimport { Card, CardText, CardBody,CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'; \r\n  \r\n\r\nclass DigestCard extends React.Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>{this.props.data.title}</CardTitle>\r\n                  <CardSubtitle>{this.props.data.digestType}</CardSubtitle>\r\n                  <CardText dangerouslySetInnerHTML={{__html: this.props.data.news}}></CardText>\r\n                  <Link to={{\r\n                      pathname:\"digest/edit\",\r\n                      state: {digest:this.props.data, isEdit: true}\r\n                  }}>\r\n                  <Button>Edit</Button>\r\n                  </Link>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default DigestCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport DigestCard from './elements/DigestCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { saveAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveAuth: (auth) => dispatch(saveAuth(auth)),\r\n    };\r\n}\r\n\r\n\r\nclass DigestList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            digests: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getDigests = this.getDigests.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        this.getDigests();\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getDigests = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/digest\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ digests: res.data.digests });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth != null) {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.digests != null && this.state.digests !== undefined) {\r\n            c = this.state.digests.map((digest) => {\r\n                return (\r\n                    <Col lg=\"3\" key={digest._id}>\r\n                        < DigestCard data={digest} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"digest/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Digest</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Digests</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                    <Pagination aria-label=\"Page navigation example\">\r\n                        <PaginationItem>\r\n                            <PaginationLink first onClick={(event) => {\r\n                                axios.get(store.getState().apiUrl + \"/digest\").then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ digests: res.data.digests });\r\n                                    }\r\n                                });\r\n                            }} />\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink next onClick={(event) => {\r\n                                var timestamp = this.state.digests[this.state.digests.length - 1].dateCreated;\r\n                                axios.get(store.getState().apiUrl + \"/digest?lastDate=\" + timestamp).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ digests: res.data.digests });\r\n                                    }\r\n                                });\r\n                            }} />\r\n                        </PaginationItem>\r\n                    </Pagination>\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DigestList);","import React from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\nclass ImageRenderer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        if(this.state.url === \"\"){\r\n            console.log(\"storage call\");\r\n            axios.get(store.getState().storageUrl + \"/\" + this.props.parameter + \"/\" + this.props.imageId, {headers: {auth: store.getState().auth}}).then((res)=>{\r\n                if(res.data.status){\r\n                    this.setState({url: res.data.url});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <img style={{maxHeight: \"150x\", maxWidth:\"250px\"}} src={this.state.url} alt=\"explanation\"></img>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ImageRenderer;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner, CardImg } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\nimport ImageRenderer from \"./elements/ImageRenderer\"\r\n\r\nclass DigestEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            this.state = {\r\n                title: \"\",\r\n                digestType: \"\",\r\n                news: \"\",\r\n                context: \"\",\r\n                learnings: \"\",\r\n                laws: \"\",\r\n                ratio: \"\",\r\n                features: \"\",\r\n                dialogue: \"\",\r\n                tags: {},\r\n                meta: {},\r\n                success: false,\r\n                apiError: \"\",\r\n                isLoading: true,\r\n                isSubmitting: false\r\n            };\r\n\r\n            if (store.getState().auth !== undefined) {\r\n                axios.get(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.setState(res.data.digest);\r\n                        this.setState({\r\n                            success: false,\r\n                            digestType: this.props.state.location.state.digest.digestType,\r\n                            isLoading: false,\r\n                            tags: {}\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.state = {\r\n                title: \"\",\r\n                digestType: \"CurrentAffairs\",\r\n                news: \"\",\r\n                context: \"\",\r\n                learnings: \"\",\r\n                laws: \"\",\r\n                ratio: \"\",\r\n                features: \"\",\r\n                dialogue: \"\",\r\n                tags: {},\r\n                meta: {},\r\n                success: false,\r\n                apiError: \"\",\r\n                isLoading: false,\r\n                isSubmitting: false,\r\n            }\r\n        }\r\n        this.populateFields = this.populateFields.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToDigests = this.redirectToDigests.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderImagePart = this.renderImagePart.bind(this);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.uploadImage = this.uploadImage.bind(this);\r\n        this.submitDigest = this.submitDigest.bind(this);\r\n    }\r\n\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToDigests = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/digest\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    submitDigest = () => {\r\n        this.setState({ digestImage: \"\", image: \"\" }, () => {\r\n            if (this.props.state.location != null && this.props.state.location.state.isEdit) {\r\n                if (store.getState().auth !== undefined) {\r\n                    axios.put(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, this.state, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (store.getState().auth !== undefined) {\r\n                    axios.post(store.getState().apiUrl + \"/digest\", this.state, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true, isSubmitting: true });\r\n        var formData = new FormData();\r\n        if (this.state.removeImageId !== null && this.state.removeImageId !== undefined && this.state.removeImageId !== \"\") {\r\n            if (this.state.digestImage !== null && this.state.digestImage !== undefined && this.state.digestImage !== \"\") {\r\n                formData.append('digestImage', this.state.digestImage);\r\n                await axios.put(store.getState().storageUrl + \"/digest/\" + this.state.removeImageId, formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId });\r\n                        this.submitDigest();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                await axios.delete(store.getState().storageUrl + \"/digest/\" + this.state.removeImageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        this.submitDigest();\r\n                    }\r\n                    else if (res.data.message === \"file not found\") {\r\n                        this.submitDigest();\r\n                    }\r\n                }).catch((err) => {\r\n                    this.submitDigest();\r\n                })\r\n            }\r\n        }\r\n        else if (this.state.digestImage !== null && this.state.digestImage !== undefined && this.state.digestImage !== \"\") {\r\n            formData.append('digestImage', this.state.digestImage);\r\n            await axios.post(store.getState().storageUrl + \"/digest\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ imageId: res.data.imageId });\r\n                    this.submitDigest();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.submitDigest();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        if (store.getState().auth !== undefined) {\r\n            axios.delete(store.getState().apiUrl + \"/digest/\" + this.props.state.location.state.digest._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ success: true });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\") {\r\n            this.setState({ removeImageId: this.state.imageId });\r\n            this.setState({ imageId: \"\" });\r\n        }\r\n        this.setState({ digestImage: event.target.files[0] });\r\n        if (event.target.files && event.target.files[0]) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n        this.setState({ apiError: \"\" });\r\n    }\r\n\r\n    uploadImage = async () => {\r\n\r\n    }\r\n\r\n    removeImage = async () => {\r\n        this.setState({ digestImage: \"\" });\r\n        if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\") {\r\n            this.setState({ removeImageId: this.state.imageId });\r\n            this.setState({ imageId: \"\" }, () => {\r\n            });\r\n        }\r\n    }\r\n\r\n    renderImagePart = () => {\r\n        if ((this.state.imageId == null || this.state.imageId === \"\") && (this.state.digestImage == null || this.state.digestImage === \"\")) {\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"4\"></Col>\r\n                    <Col lg=\"4\" className=\"m-3\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if ((this.state.imageId == null || this.state.imageId === \"\") && (this.state.digestImage != null || this.state.digestImage !== \"\")) {\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"12\" className=\"mb-3\">\r\n                        <Card>\r\n                            <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} />\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Choose file to change Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                                <Button className=\"ml-1\" color=\"danger\" onClick={this.removeImage}>Remove this Image</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if (this.state.imageId !== null && this.state.imageId !== undefined && this.state.imageId !== \"\" && this.state.isSubmitting === false && this.state.digestImage == null) {\r\n            // axios.get(store.getState().storageUrl + \"/digest/\" + this.state.imageId, {\r\n            //     headers: {\r\n            //         auth: store.getState().auth,\r\n            //     }\r\n            // }).then((res) => {\r\n            //     console.log(this.state);\r\n            //     if (this.state.image === null || this.state.image === undefined || this.state.image === \"\") {\r\n            //         this.setState({ image: res.data.url });\r\n            //     }\r\n            // });\r\n\r\n            return (\r\n                <Row >\r\n                    <Col lg=\"12\" className=\"mb-3\">\r\n                        <Card>\r\n                            {/* <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} /> */}\r\n                            <ImageRenderer parameter = \"digest\" imageId = {this.state.imageId}></ImageRenderer>\r\n                            <CardBody>\r\n                                <FormGroup row className=\"mt-3\">\r\n                                    <Label for=\"file\">Choose file and upload to change Image</Label>\r\n                                    <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                                </FormGroup>\r\n                                <Button className=\"ml-1\" color=\"danger\" onClick={this.removeImage}>Remove this Image</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n    populateFields = () => {\r\n        if (this.state.digestType === \"CurrentAffairs\" || this.state.digestType === \"History\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"3\"></Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Learnings</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.learnings}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ learnings: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else if (this.state.digestType === \"Judgements\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Laws</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.laws}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ laws: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Ratio</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.ratio}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ ratio: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n        else if (this.state.digestType === \"Bills/Laws\") {\r\n            return (\r\n                <Row className=\"mt-3\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Features</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.features}\r\n                                    onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ features: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Dialogue</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.dialogue}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ dialogue: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags });\r\n    }\r\n\r\n    onMetaChange = (event) => {\r\n        var meta = this.state.meta;\r\n        meta[event.target.name] = event.target.value;\r\n        this.setState({ meta: meta });\r\n    }\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderMeta = () => {\r\n        return (\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <FormGroup className=\"ml-4\" row>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.meta.title || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <FormGroup className=\"ml-4\" row>\r\n                            <Label for=\"image\">Image</Label>\r\n                            <Input type=\"text\" name=\"image\" id=\"image\" value={this.state.meta.image || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\">\r\n                        <FormGroup className=\"ml-4\" row>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" value={this.state.meta.description || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Digest Editor</h1>\r\n                {this.renderImagePart()}\r\n                <Form className=\"mt-4\">\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <FormGroup row>\r\n                                <Label for=\"digestType\" sm={2}>Category</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"select\" name=\"digestType\" id=\"digestType\" value={this.state.digestType} onChange={this.handleChange}>\r\n                                        <option>CurrentAffairs</option>\r\n                                        <option>Judgements</option>\r\n                                        <option>Bills/Laws</option>\r\n                                        <option>History</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <FormGroup row>\r\n                                <Label for=\"title\" sm={2}>Title</Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row>\r\n                                <Label for=\"description\" sm={1}>Description</Label>\r\n                                <Col sm={11}>\r\n                                    <Input type=\"textarea\" rows=\"3\" name=\"description\" id=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            {this.renderTags()}\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            {this.renderMeta()}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">News</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.news}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ news: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card>\r\n                            <CardTitle className=\"mt-2\">Context</CardTitle>\r\n                            <CardBody>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.context}\r\n                                    onInit={editor => {\r\n                                    }}\r\n                                    onChange={(event, editor) => {\r\n                                        const data = editor.getData();\r\n                                        this.setState({ context: data });\r\n                                    }}\r\n                                    onBlur={(event, editor) => {\r\n                                    }}\r\n                                    onFocus={(event, editor) => {\r\n                                    }}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.populateFields()}\r\n                <Row className=\"m-4\">\r\n                    <Col className=\"lg-2\">\r\n                        <Button color=\"danger\" onClick={this.handleDelete}>Delete</Button>\r\n                    </Col>\r\n                    <Col className=\"lg-2\">\r\n                        <Button color=\"primary\" onClick={this.handleSubmit} >Submit</Button>\r\n                    </Col>\r\n                </Row>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n                {this.redirectToDigests()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DigestEditor;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { saveAuth, saveRefreshToken } from '../reduxStore/action';\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveAuth: (auth) => dispatch(saveAuth(auth)),\r\n        saveRefreshToken: (token) => dispatch(saveRefreshToken(token))\r\n    };\r\n}\r\n\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: true,\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n        this.loginUsingToken();\r\n\r\n    }\r\n\r\n    loginUsingToken = async () => {\r\n        var token = localStorage.getItem(\"token\");\r\n        await axios.post(store.getState().apiUrl + \"/users/token\", { token: token }).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data.status === true) {\r\n                this.props.saveAuth(res.headers.auth);\r\n                this.setState({ success: true, isLoading: false });\r\n            }\r\n            else {\r\n                this.setState({ success: false, isLoading: false });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    redirect = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/digest\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        if (this.state.isLogin) {\r\n            this.setState({ isLoading: true });\r\n            axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.status === true) {\r\n                    this.props.saveAuth(res.headers.auth);\r\n                    this.props.saveRefreshToken(res.data.token);\r\n                    localStorage.setItem(\"token\", res.data.token);\r\n                    if (store.getState().auth !== undefined) {\r\n                        this.setState({ success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"Could not log you in\" });\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                }\r\n                else if (res.data.message === \"already logged in on two other devices\") {\r\n                    axios.post(store.getState().apiUrl + \"/users/verified-logout\" , {\r\n                        phone: this.state.phone,\r\n                        verificationMethod: \"102\"\r\n                    }).then((res) => {\r\n                        console.log(res.data)\r\n                        if (res.data.status) {\r\n                            this.setState({ apiError: \"Already logged in 2 devices, verify phone number to logout\", isLogin: false, isLoading: false });\r\n                        }\r\n                        else{\r\n                            this.setState({apiError: \"Already logged in 2 devices\", isLoading: false});\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    if (res.data.message !== null) {\r\n                        this.setState({ apiError: res.data.message });\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"Could not log you in\" });\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            axios.post(store.getState().apiUrl + \"/users\", this.state).then((res) => {\r\n            }).then(() => {\r\n                axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n                    if (res.data.status === true) {\r\n                        this.props.saveAuth(res.headers.auth);\r\n                        this.props.saveRefreshToken(res.data.token);\r\n                        if (store.getState().auth !== undefined) {\r\n                            this.setState({ success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"Could not log you in\" });\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        if (res.data.message !== null) {\r\n                            this.setState({ apiError: res.data.message });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"Could not log you in\" });\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    renderForm = () => {\r\n        if (this.state.isLogin) {\r\n            return (\r\n                <div>\r\n                    <h2>Login</h2>\r\n                    <Form className=\"m-3\">\r\n                        {/* <FormGroup row>\r\n                            <Label for=\"phone\">Phone</Label>\r\n                            <Input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Enter phone number\" onChange={this.handleChange} />\r\n                        </FormGroup> */}\r\n                        <FormGroup row>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                        <br />\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h2>Verify</h2>\r\n                    <Form className=\"m-3\">\r\n                        <FormGroup row>\r\n                            <Label for=\"otp\">OTP</Label>\r\n                            <Input type=\"text\" name=\"otp\" id=\"otp\" placeholder=\"Enter otp\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={(event)=>{\r\n                            this.setState({isLoading: true})\r\n                            axios.post(store.getState().apiUrl + \"/users/verify-otp-logout\", {\r\n                                otp: this.state.otp,\r\n                                phone: this.state.phone\r\n                            }).then((res)=>{\r\n                                if(res.data.status){\r\n                                    this.setState({apiError:\"\", isLogin: true, isLoading: false});\r\n                                }\r\n                                else{\r\n                                    this.setState({apiError:\"Could not verify otp\", isLogin: true, isLoading: false});\r\n                                }\r\n                            })\r\n                        }}>Verify</Button>\r\n                        <br />\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                {this.renderForm()}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.redirect()}\r\n                {this.renderError()}\r\n                {this.renderSpinner()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass questionCollectionCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle>{this.props.data.type}</CardSubtitle>\r\n                        <CardText>{ this.props.data.description }</CardText>\r\n                        <Link to={{\r\n                            pathname: \"question/view\",\r\n                            state: { questionCollectionId: this.props.data._id}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default questionCollectionCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport QuestionCollectionCard from './elements/QuestionCollectionCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAuth: () => dispatch(getAuth())\r\n    };\r\n}\r\n\r\n\r\nclass QuestionCollectionList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionCollections: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getQuestionCollections = this.getQuestionCollections.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.getQuestionCollections();\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getQuestionCollections = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/questions\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ questionCollections: res.data.collections});\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.questionCollections != null && this.state.questionCollections !== undefined) {\r\n            c = this.state.questionCollections.map((questionCollection) => {\r\n                return (\r\n                    <Col lg=\"3\" key={questionCollection._id}>\r\n                        < QuestionCollectionCard data={questionCollection} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"question/new\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Collection</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Question Collections</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCollectionList);","import React from 'react';\r\nimport { Card, CardBody, Col, FormGroup, Input, Label } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport Latex from 'react-latex';\r\nimport ImageRenderer from './ImageRenderer';\r\n\r\nclass QuestionLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageData: \"\"\r\n        }\r\n        this.renderExplanation = this.renderExplanation.bind(this);\r\n\r\n    }\r\n\r\n    renderExplanation = (question, index) => {\r\n        if (question.explanation) {\r\n            var explanation = [{ type: \"text\", content: \"\" }];\r\n            var i = 0;\r\n            while (i < question.explanation.length) {\r\n                if (question.explanation[i] === '~') {\r\n                    i++;\r\n                    if (question.explanation[i] === '~') {\r\n                        i++;\r\n                        var imageId = \"\";\r\n                        while (question.explanation[i] !== '~' && i <= question.explanation.length) {\r\n                            imageId = imageId.concat(question.explanation[i]);\r\n                            i++;\r\n                        }\r\n                        i = i + 2;\r\n                        explanation.push({type: \"image\", content: imageId});\r\n                        explanation.push({ type: \"text\", content: \"\" });\r\n                    }\r\n                    else {\r\n                        var singleLatex = \"\";\r\n                        while (question.explanation[i] !== '~' && i <= question.explanation.length) {\r\n                            singleLatex = singleLatex.concat(question.explanation[i]);\r\n                            i++;\r\n                        }\r\n                        i++;\r\n                        explanation.push({ type: \"latex\", content: \"$\" + singleLatex + \"$\" });\r\n                        explanation.push({ type: \"text\", content: \"\" });\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    explanation[explanation.length - 1].content = explanation[explanation.length - 1].content.concat(question.explanation[i]);\r\n                }\r\n                i++;\r\n            }\r\n            var c = explanation.map((l, index) => {\r\n                if (l.type === \"text\") {\r\n                    return (\r\n                        <div style={{ textAlign: \"left\" }} key={index}>\r\n                            <p>{l.content}</p>\r\n                        </div>\r\n                    );\r\n                }\r\n                else if(l.type === \"latex\") {\r\n                    return (\r\n                        <div key={index}>\r\n                            <Latex>{l.content}</Latex>\r\n                        </div>\r\n                    )\r\n                }\r\n                else if(l.type === \"image\"){\r\n                    return (\r\n                        <div key={index}>\r\n                            <ImageRenderer parameter = \"question\" imageId = {l.content}></ImageRenderer>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(<div></div>);\r\n                }\r\n\r\n            })\r\n            // explanation = explanation.concat(\"</p></div>\");\r\n            return (\r\n                <div>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"explanation\"> Explanation </Label>\r\n                        <Input type=\"textarea\" rows=\"5\" name=\"explanation\" id=\"explanation\" value={question.explanation} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                    </FormGroup>\r\n                    {c}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImage = (question) => {\r\n        if (question.imageId) {\r\n            axios.get(store.getState().storageUrl + \"/question/\" + question.imageId, {\r\n                headers: {\r\n                    auth: store.getState().auth,\r\n                }\r\n            }).then((res) => {\r\n                if (this.state.imageData === \"\") {\r\n                    this.setState({ imageData: \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data });\r\n                }\r\n            });\r\n            return (\r\n                <div>\r\n                    <img style={{ maxWidth: \"500px\", maxHeight: \"300px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.imageData} alt=\"img\" />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var c;\r\n        if (this.props.questions != null && this.props.questions !== undefined) {\r\n            c = this.props.questions.questions.map((question, index) => {\r\n                return (\r\n                    <Col lg=\"12\" key={index} className=\"m-3\" >\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"questionNumber\">Question Number</Label>\r\n                            <Input type=\"text\" name=\"questionNumber\" id=\"questionNumber\" value={question.questionNumber} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                        </FormGroup>\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"question\">Question</Label>\r\n                            <Input type=\"textarea\" rows=\"7\" name=\"question\" id=\"question\" value={question.question} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                        </FormGroup>\r\n                        <h5 style={{ textAlign: \"left\" }}>Options</h5>\r\n                        <ul style={{ textAlignVertical: \"center\", textAlign: \"left\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[0]\">A) </Label>\r\n                                <Input type=\"text\" name=\"options[0]\" id=\"options[0]\" value={question.options[0]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 0) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[1]\">B) </Label>\r\n                                <Input type=\"text\" name=\"options[1]\" id=\"options[1]\" value={question.options[1]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 1) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[2]\">C) </Label>\r\n                                <Input type=\"text\" name=\"options[2]\" id=\"options[2]\" value={question.options[2]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 2) }} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"options[3]\">D) </Label>\r\n                                <Input type=\"text\" name=\"options[3]\" id=\"options[3]\" value={question.options[3]} onChange={(event) => { this.props.handleOptionChange(event, this.props.index, index, 3) }} />\r\n                            </FormGroup>\r\n\r\n                        </ul>\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"answer\"> Answer </Label>\r\n                            <Input type=\"text\" name=\"answer\" id=\"answer\" value={question.answer} onChange={(event) => { this.props.handleChangeFunction(event, this.props.index, index) }} />\r\n                        </FormGroup>\r\n                        {this.renderExplanation(question, index)}\r\n                        {/* {this.renderImage(question)} */}\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        {c}\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionLayout;","import React from 'react';\r\nimport { Container, Row, Col, Spinner, Alert, CardBody, Card, Button, FormGroup, Input, Label } from 'reactstrap';\r\nimport QuestionLayout from './elements/QuestionLayout';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from \"../reduxStore/action\";\r\nimport store from \"../reduxStore/store\";\r\nimport ImageRenderer from './elements/ImageRenderer';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAuth: () => dispatch(getAuth())\r\n    };\r\n}\r\n\r\n\r\nclass QuestionCollectionList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiError: \"\",\r\n            isLoading: true,\r\n            collection: {},\r\n            questionIndex: 0\r\n        }\r\n        this.getQuestionCollection = this.getQuestionCollection.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirectToQuestions = this.redirectToQuestions.bind(this);\r\n\r\n        this.renderDirection = this.renderDirection.bind(this);\r\n        this.renderLegalPrinciple = this.renderLegalPrinciple.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestionCollection();\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getQuestionCollection = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            var collectionName = this.props.state.location.state.questionCollectionId;\r\n            await axios.get(store.getState().apiUrl + \"/questions/\" + collectionName, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ collection: res.data.collection });\r\n                    this.setState({ questionData: res.data.questionData });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToQuestions = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/question\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderDirection = (index) => {\r\n        if (this.state.questionData[index].direction) {\r\n            return (\r\n                <FormGroup row className=\"mt-3\">\r\n                    <Label for=\"direction\">Direction</Label>\r\n                    <Input type=\"text\" name=\"direction\" id=\"direction\" value={this.state.questionData[index].direction} onChange={(event) => { this.handleQuestionDataChange(event, index) }} />\r\n                </FormGroup>\r\n            );\r\n        }\r\n    }\r\n    renderLegalPrinciple = (index) => {\r\n        if (this.state.questionData[index].legalPrinciple) {\r\n            return (\r\n                <FormGroup row className=\"mt-3\">\r\n                    <Label for=\"legalPrinciple\">Legal Principle</Label>\r\n                    <Input type=\"textarea\" rows=\"15\" name=\"legalPrinciple\" id=\"legalPrinciple\" value={this.state.questionData[index].legalPrinciple} onChange={(event) => { this.handleQuestionDataChange(event, index) }} />\r\n                </FormGroup>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImage = (question, index) => {\r\n        if (question.imageId) {\r\n            return (\r\n                <div>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"imageId\">ImageId</Label>\r\n                        <Input type=\"text\" name=\"imageId\" id=\"imageId\" value={this.state.questionData[this.state.questionIndex].imageId} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                    </FormGroup>\r\n                    <ImageRenderer parameter=\"question\" imageId={question.imageId}></ImageRenderer>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    deleteCollection = () => {\r\n        if (store.getState().auth !== undefined) {\r\n            this.setState({ isLoading: true });\r\n            axios.delete(store.getState().apiUrl + \"/questions/\" + this.props.state.location.state.questionCollectionId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ isLoading: false });\r\n                    this.setState({ success: true });\r\n                }\r\n                else {\r\n                    this.setState({ isLoading: false });\r\n                    this.setState({ apiError: res.data.message });\r\n                }\r\n            }).catch((err) => {\r\n                this.setState({ isLoading: false });\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCollectionDataChange = (event) => {\r\n        var collection = this.state.collection;\r\n        collection[event.target.name] = event.target.value;\r\n        this.setState({ collection: collection });\r\n    }\r\n\r\n    handleQuestionDataChange = (event, index) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index][event.target.name] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    handleSubQuestionsDataChange = (event, index, subQuestionIndex) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index].questions[subQuestionIndex][event.target.name] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    handleSubQuestionOptionChange = (event, index, subQuestionIndex, optionIndex) => {\r\n        var questionData = this.state.questionData;\r\n        questionData[index].questions[subQuestionIndex].options[optionIndex] = event.target.value;\r\n        this.setState({ questionData: questionData });\r\n    }\r\n\r\n    updateQuestion = () => {\r\n        if (store.getState().auth != null) {\r\n            this.setState({ isLoading: true });\r\n            var questionId = this.state.questionData[this.state.questionIndex]._id;\r\n            axios.put(store.getState().apiUrl + \"/questions/\" + questionId + \"/question\", this.state.questionData[this.state.questionIndex], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ questionIndex: 0, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateCollection = () => {\r\n        if (store.getState().auth != null) {\r\n            this.setState({ isLoading: true });\r\n            var collectionId = this.state.collection._id;\r\n            axios.put(store.getState().apiUrl + \"/questions/\" + collectionId, this.state.collection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ isLoading: false, success: true });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    renderQuestionSelector = () => {\r\n        if (this.state.questionData != null && this.state.questionData !== undefined) {\r\n            var c = this.state.questionData.map((question, index) => {\r\n                return (\r\n                    <Button key={index} className=\"m-2\" color=\"primary\" onClick={() => {\r\n                        this.setState({ questionIndex: index });\r\n                    }}> {index + 1} </Button>\r\n                );\r\n            });\r\n            return c;\r\n\r\n        }\r\n    }\r\n\r\n    renderSelectedQuestion = () => {\r\n        if (this.state.questionData != null && this.state.questionData !== undefined) {\r\n            return (\r\n                <Col lg=\"12\">\r\n                    <Card className=\"m-3\">\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"questionType\">Question Type</Label>\r\n                                            <Input type=\"text\" name=\"questionType\" id=\"questionType\" value={this.state.questionData[this.state.questionIndex].questionType} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"section\">Section</Label>\r\n                                            <Input type=\"text\" name=\"section\" id=\"section\" value={this.state.questionData[this.state.questionIndex].section} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"topic\">Topic</Label>\r\n                                            <Input type=\"text\" name=\"topic\" id=\"topic\" value={this.state.questionData[this.state.questionIndex].topic} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"sourceExam\">Source Exam</Label>\r\n                                            <Input type=\"text\" name=\"sourceExam\" id=\"sourceExam\" value={this.state.questionData[this.state.questionIndex].sourceExam} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"difficultyLevel\">Difficulty Level</Label>\r\n                                            <Input type=\"text\" name=\"difficultyLevel\" id=\"difficultyLevel\" value={this.state.questionData[this.state.questionIndex].difficultyLevel} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"5\">\r\n                                        <FormGroup row className=\"mt-3\">\r\n                                            <Label for=\"Time\">Time</Label>\r\n                                            <Input type=\"text\" name=\"Time\" id=\"Time\" value={this.state.questionData[this.state.questionIndex].Time} onChange={(event) => { this.handleQuestionDataChange(event, this.state.questionIndex) }} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    {this.renderDirection(this.state.questionIndex)}\r\n                                    {this.renderLegalPrinciple(this.state.questionIndex)}\r\n                                </Col>\r\n                                <Col lg=\"6\">\r\n                                    {this.renderImage(this.state.questionData[this.state.questionIndex], this.state.questionIndex)}\r\n                                </Col>\r\n                            </Row>\r\n                            < QuestionLayout questions={this.state.questionData[this.state.questionIndex]} index={this.state.questionIndex} handleChangeFunction={this.handleSubQuestionsDataChange} handleOptionChange={this.handleSubQuestionOptionChange} />\r\n                            <Button className=\"mt-3\" color=\"primary\" onClick={this.updateQuestion}>Update Question</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container className=\"mt-2\">\r\n                    {/* <h1 style={{ margin: \"auto\" }} >{this.state.collection.name || \"\"}</h1> */}\r\n                    <Row>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"name\">Name of the Test</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.collection.name || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 mr-2\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"text\" name=\"type\" id=\"type\" value={this.state.collection.type || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 mr-2 ml-2\">\r\n                                <Label for=\"section\">Section</Label>\r\n                                <Input type=\"text\" name=\"section\" id=\"section\" value={this.state.collection.section || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 ml-2\">\r\n                                <Label for=\"marksPerQuestion\">Marks per Question</Label>\r\n                                <Input type=\"text\" name=\"marksPerQuestion\" id=\"marksPerQuestion\" value={this.state.collection.marksPerQuestion || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 mr-2\">\r\n                                <Label for=\"time\">Time</Label>\r\n                                <Input type=\"text\" name=\"time\" id=\"time\" value={this.state.collection.time || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 mr-2 ml-2\">\r\n                                <Label for=\"numberOfQuestions\">Number of Questions</Label>\r\n                                <Input type=\"text\" name=\"numberOfQuestions\" id=\"numberOfQuestions\" value={this.state.collection.numberOfQuestions || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"mt-3 ml-2\">\r\n                                <Label for=\"maxMarks\">Max marks</Label>\r\n                                <Input type=\"text\" name=\"maxMarks\" id=\"maxMarks\" value={this.state.collection.maxMarks || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"description\">Description</Label>\r\n                                <Input type=\"textarea\" rows=\"6\" name=\"description\" id=\"description\" value={this.state.collection.description || \"\"} onChange={this.handleCollectionDataChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3\">\r\n                        <h3>Questions</h3>\r\n                        {this.renderQuestionSelector()}\r\n                        {this.renderSelectedQuestion()}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n                {this.redirectToQuestions()}\r\n                <Button className=\"m-5\" color=\"danger\" onClick={this.deleteCollection}>Delete Collection</Button>\r\n                <Button className=\"m-5\" color=\"primary\" onClick={this.updateCollection}>Update Collection</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCollectionList);","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\n\r\nclass QuestionCollectionCreate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            tags: {}\r\n        };\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToQuestion = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/question\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"file\",\r\n            this.state.file\r\n        );\r\n        formData.append(\r\n            \"name\",\r\n            this.state.name\r\n        );\r\n        formData.append(\r\n            \"type\",\r\n            this.state.type\r\n        );\r\n        formData.append(\r\n            \"marksPerQuestion\",\r\n            this.state.marksPerQuestion\r\n        );\r\n        formData.append(\r\n            \"description\",\r\n            this.state.description\r\n        );\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            axios.post(store.getState().apiUrl + \"/questions\", formData, {\r\n                headers: { auth: store.getState().auth }\r\n            }).then((res) => {\r\n\r\n                if (res.data.status) {\r\n\r\n                    this.setState({ success: true, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    //console.log(this.state.apiError);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Question Collection</h1>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter collection name\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"marksPerQuestion\">Marks per Question</Label>\r\n                                <Input type=\"text\" name=\"marksPerQuestion\" id=\"marksPerQuestion\" placeholder=\"Enter marks for right answer\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"text\" name=\"type\" id=\"type\" placeholder=\"Enter type\" onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Question Excel Sheet</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Enter description\" onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    {/* <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup> */}\r\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToQuestion()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCollectionCreate;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner, CardImg } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport store from \"../reduxStore/store\";\r\n\r\n\r\nclass ImageStorageComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiError: \"\",\r\n            isLoading: false\r\n        }\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderImageUpload = this.renderImageUpload.bind(this);\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        axios.post(store.getState().apiUrl + \"/users/login\", this.state).then((res) => {\r\n            if (res.data.status === true) {\r\n                this.setState({ auth: res.headers.auth }, () => {\r\n                    this.setState({ isLoading: false });\r\n                });\r\n            }\r\n            else {\r\n                if (res.data.message !== null) {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: \"Could not log you in\" });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n\r\n        this.setState({ uploadImage: event.target.files[0] });\r\n        if (event.target.files && event.target.files[0]) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n        this.setState({ apiError: \"\" });\r\n    }\r\n\r\n    uploadImage = async () => {\r\n        if (this.state.uploadImage !== null && this.state.uploadImage !== undefined && this.state.uploadImage !== \"\") {\r\n            var formData = new FormData();\r\n            formData.append('questionImage', this.state.uploadImage);\r\n            await axios.post(store.getState().storageUrl + \"/question\", formData, { headers: { auth: this.state.auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    console.log(res.data);\r\n                    this.setState({ imageId: res.data.imageId });\r\n                }\r\n            }).catch((err) =>{\r\n                console.log(err);\r\n                this.setState({apiError: \"error\"});\r\n            })\r\n        }\r\n    }\r\n\r\n    copyId = () => {\r\n        var text = this.state.imageId;\r\n        navigator.clipboard.writeText(text).then(function () {\r\n            console.log('Copying to clipboard was successful!');\r\n        }, function (err) {\r\n            console.error('Could not copy text: ', err);\r\n        });\r\n    }\r\n\r\n    renderForm = () => {\r\n        if (this.state.auth === null || this.state.auth === undefined || this.state.auth === \"\") {\r\n            return (\r\n                <div>\r\n                    <h2>Login</h2>\r\n                    <Form className=\"m-3\">\r\n                        <FormGroup row>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                        <br />\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderImageUpload = () => {\r\n        if (this.state.auth !== null && this.state.auth !== undefined && this.state.auth !== \"\") {\r\n            return (\r\n                <Card>\r\n                    <CardImg top style={{ maxWidth: \"500px\", objectFit: \"cover\", marginLeft: \"auto\", marginRight: \"auto\" }} width=\"100%\" src={this.state.image} />\r\n                    <CardBody>\r\n                        <FormGroup row className=\"mt-3\">\r\n                            <Label for=\"file\">Image</Label>\r\n                            <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" onClick={this.uploadImage} >Upload</Button>\r\n                        <p><span style={{ fontWeight: \"500\" }}>Image id:</span> {this.state.imageId}\r\n                            <Button color=\"link\" onClick={this.copyId} className=\"fa fa-copy\"></Button></p>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                {this.renderForm()}\r\n                                {this.renderImageUpload()}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.renderError()}\r\n                {this.renderSpinner()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ImageStorageComponent;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle>{this.props.data.category}</CardSubtitle>\r\n                        <CardText>{ this.props.data.description }</CardText>\r\n                        <Link to={{\r\n                            pathname: \"course/edit\",\r\n                            state: { course: this.props.data}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CourseCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\";\r\nimport CourseCard from './elements/CourseCard';\r\n\r\n\r\n\r\n\r\nclass CourseList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.getCourses = this.getCourses.bind(this);\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.getCourses();\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    getCourses = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/course\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ courses: res.data.courses });\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.courses != null && this.state.courses !== undefined) {\r\n            c = this.state.courses.map((course) => {\r\n                return (\r\n                    <Col lg=\"3\" key={course._id}>\r\n                        < CourseCard data={course} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"course/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Course</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Courses</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CourseList;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, CardImg } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from '../../reduxStore/store'\r\n\r\n\r\nclass MentorCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.image === \"\") {\r\n            console.log(\"hello\");\r\n            axios.get(store.getState().storageUrl + \"/mentor/\" + this.props.data.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ image: res.data.url });\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardImg src={this.state.image}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle style={{ textAlign: \"left\" }}>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle style={{ textAlign: \"left\" }}>{this.props.data.designation}</CardSubtitle>\r\n                        <CardText style={{ textAlign: \"left\" }}>{this.props.data.description}</CardText>\r\n                        <Link to={{\r\n                            pathname: \"mentor/edit\",\r\n                            state: { mentor: this.props.data }\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MentorCard;","import React from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport { Row, Col, FormGroup, Label, Input, Card, CardBody, Button } from \"reactstrap\";\r\nimport ImageRenderer from \"./ImageRenderer\";\r\n\r\nclass CourseImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageFiles: {},\r\n            imageDatas: {}\r\n        }\r\n    }\r\n\r\n    handleFile = (event, imageType) => {\r\n        var imageFiles = this.state.imageFiles;\r\n        imageFiles[imageType] = event.target.files[0]\r\n        this.setState({ imageFiles: imageFiles });\r\n\r\n        if (this.state.imageFiles[imageType] != null) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                var imageDatas = this.state.imageDatas;\r\n                imageDatas[imageType] = e.target.result;\r\n                this.setState({ imageDatas: imageDatas });\r\n            };\r\n            reader.readAsDataURL(this.state.imageFiles[imageType]);\r\n        }\r\n    }\r\n\r\n    renderImage = (imageType) => {\r\n        if (this.state.imageDatas[imageType] != null) {\r\n            return (\r\n                <img style={{ height: \"inherit\", width: \"inherit\" }} src={this.state.imageDatas[imageType]} alt={imageType}></img>\r\n            );\r\n        }\r\n        else if (this.props.imageIds[imageType] != null) {\r\n            return (\r\n                <ImageRenderer parameter=\"course/cover\" imageId={this.props.imageIds[imageType]} ></ImageRenderer>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    uploadImage = (event, imageType) => {\r\n        this.props.spinnerStart(true);\r\n        var formData = new FormData();\r\n        formData.append(\"coverImage\", this.state.imageFiles[imageType]);\r\n        if (this.props.imageIds[imageType] == null) {\r\n            axios.post(store.getState().storageUrl + \"/course/cover\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                console.log(res.data);\r\n                \r\n                if (res.data.status) {\r\n                    this.props.onUpload(imageType, res.data.imageId);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            axios.put(store.getState().storageUrl + \"/course/cover/\" + this.props.imageIds[imageType], formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n               this.props.spinnerStart(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col lg=\"3\">\r\n                            {this.renderImage(\"courseCardLight\")}\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"file\">Course Card Light</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={(event) => { this.handleFile(event, \"courseCardLight\") }} />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" onClick={(event) => { this.uploadImage(event, \"courseCardLight\") }}>Upload</Button>\r\n                        </Col>\r\n                        <Col lg=\"3\">\r\n                            {this.renderImage(\"courseCardDark\")}\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"file\">Course Card Dark</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={(event) => { this.handleFile(event, \"courseCardDark\") }} />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" onClick={(event) => { this.uploadImage(event, \"courseCardDark\") }}>Upload</Button>\r\n                        </Col>\r\n                        <Col lg=\"3\">\r\n                            {this.renderImage(\"infoCardLight\")}\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"file\">Info Card Light</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={(event) => { this.handleFile(event, \"infoCardLight\") }} />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" onClick={(event) => { this.uploadImage(event, \"infoCardLight\") }}>Upload</Button>\r\n                        </Col>\r\n                        <Col lg=\"3\">\r\n                            {this.renderImage(\"infoCardDark\")}\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"file\">Info Card Dark</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={(event) => { this.handleFile(event, \"infoCardDark\") }} />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" onClick={(event) => { this.uploadImage(event, \"infoCardDark\") }}>Upload</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CourseImage;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../reduxStore/store\"\r\nimport MentorCard from './mentors/MentorCard';\r\nimport CourseImage from './elements/CourseImage';\r\n\r\nclass CourseEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            apiError: \"\",\r\n            isLoading: false,\r\n            isSubmitting: false,\r\n            subSectionForm: false,\r\n            course: {\r\n                available: false,\r\n                tags: {}\r\n            },\r\n            subSections: {\r\n\r\n            },\r\n            coaches: {\r\n\r\n            },\r\n            newSubSection: {\r\n                name: \"\",\r\n                previousYearQuestions: [],\r\n                sectionalQuestions: [],\r\n                practiceQuestions: [],\r\n                directQuestions: [],\r\n                newPatternQuestions: [],\r\n                videoURLs: [],\r\n                handoutIds: []\r\n            },\r\n            questionCollectionType: \"Sectional Test Questions\",\r\n            selectedSection: 0,\r\n            changed: false,\r\n            renderAdditionalDetails: false,\r\n            newSectionIndex: 0\r\n        };\r\n\r\n\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToCourses = this.redirectToCourses.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.renderSections = this.renderSections.bind(this);\r\n        this.renderModules = this.renderModules.bind(this);\r\n        this.addModule = this.addModule.bind(this);\r\n        this.renderSubSectionViewButton = this.renderSubSectionViewButton.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ subSectionUpdate: false });\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/course/\" + this.props.state.location.state.course._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        var course = res.data.course;\r\n                        course.tags = {};\r\n                        this.setState({ course: course });\r\n                        this.setState({ newSectionIndex: this.state.course.sections.length })\r\n                        for (var section in course.sections) {\r\n                            for (var module in course.sections[section].modules) {\r\n                                for (var subModule in course.sections[section].modules[module].subModules) {\r\n                                    let subModuleId = course.sections[section].modules[module].subModules[subModule];\r\n                                    await axios.get(store.getState().apiUrl + \"/course/submodule/\" + subModuleId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        if (res.data.status) {\r\n                                            var subSections = this.state.subSections;\r\n                                            subSections[subModuleId] = res.data.subModule;\r\n                                            this.setState({ subSections: subSections });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let coach in course.coaches) {\r\n                            await axios.get(store.getState().apiUrl + \"/mentor/\" + course.coaches[coach], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    var coaches = this.state.coaches;\r\n                                    coaches[course.coaches[coach]] = res.data.mentor;\r\n                                    this.setState({ coaches: coaches });\r\n                                }\r\n                            })\r\n                        }\r\n                        console.log(this.state);\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n                this.setState({ numberOfSubSections: Object.keys(this.state.subSections).length });\r\n\r\n                axios.get(store.getState().apiUrl + \"/mentor/coach\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status && res.data.coaches.length !== 0) {\r\n                        this.setState({ allCoaches: res.data.coaches, newCoach: res.data.coaches[0].name, newCoachId: res.data.coaches[0]._id, newVideoAuthor: res.data.coaches[0]._id });\r\n                    }\r\n                });\r\n                axios.get(store.getState().apiUrl + \"/questions\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status) {\r\n                        this.setState({ allFullLengthTests: res.data.collections, newFullLengthTest: res.data.collections[0].name, newFullLengthTestId: res.data.collections[0]._id });\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToCourses = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/course\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleCourseDetailChange = (event) => {\r\n        var course = this.state.course;\r\n        course[event.target.name] = event.target.value;\r\n        this.setState({ course: course });\r\n    }\r\n    onTagChange = (event) => {\r\n        var course = this.state.course;\r\n        course.tags[event.target.name] = event.target.checked;\r\n        this.setState({ course: course }, () => {\r\n            console.log(this.state.course.tags)\r\n        });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({ isLoading: true });\r\n        if (store.getState().auth !== undefined) {\r\n            if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                axios.post(store.getState().apiUrl + \"/course/partial\", this.state.course, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data);\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                axios.put(store.getState().apiUrl + \"/course/\" + this.state.course._id, this.state.course, { headers: { auth: store.getState().auth } }).then((res) => {\r\n\r\n                    if (res.data.status) {\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    cancelSubSectionSubmission = async () => {\r\n        var newSubSection = this.state.newSubSection;\r\n        while (newSubSection.sectionalQuestions.length > 0) {\r\n            await axios.delete(store.getState().apiUrl + \"/questions/\" + newSubSection.sectionalQuestions[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (!res.data.status) {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n                else {\r\n                    newSubSection.sectionalQuestions.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n\r\n            });\r\n        }\r\n        while (newSubSection.previousYearQuestions.length > 0) {\r\n            await axios.delete(store.getState().apiUrl + \"/questions/\" + newSubSection.previousYearQuestions[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (!res.data.status) {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n                else {\r\n                    newSubSection.previousYearQuestions.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        while (newSubSection.handoutIds.length > 0) {\r\n            await axios.delete(store.getState().storageUrl + \"/course/handout/\" + this.state.newSubSection.handoutIds[0], { headers: { auth: store.getState().auth } }).then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.status) {\r\n                    newSubSection.handoutIds.splice(0, 1);\r\n                    this.setState({ newSubSection: newSubSection });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: \"Could not delete files\" });\r\n                    return;\r\n                }\r\n            }).catch((err) => {\r\n                this.setState({ apiError: \"Could not delete files\" });\r\n                return;\r\n            });\r\n        }\r\n        this.setState({ subSectionForm: false });\r\n    }\r\n    setCourseName = (event) => {\r\n        var course = this.state.course;\r\n        course.name = event.target.value;\r\n        this.setState({ course: course });\r\n    }\r\n    //ADD Functionss....................................\r\n\r\n    submitSubSection = () => {\r\n        this.setState({ isLoading: true });\r\n        var course = this.state.course;\r\n        var subSections = this.state.subSections;\r\n        // push new subsection using axios.......................................\r\n        console.log(this.state.newSubSection);\r\n\r\n        if (store.getState().auth) {\r\n\r\n            var newSubSection = this.state.newSubSection;\r\n            newSubSection.courseId = this.state.course._id;\r\n            newSubSection.sectionalTests = newSubSection.previousYearQuestions.length + newSubSection.sectionalQuestions.length;\r\n            axios.post(store.getState().apiUrl + \"/course/submodule/partial\", newSubSection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ changed: true });\r\n                    subSections[res.data.subModule._id] = res.data.subModule;\r\n                    this.setState({ subSections: subSections });\r\n                    course.sections[this.state.sectionIndex].modules[this.state.moduleIndex].subModules.push(res.data.subModule._id);\r\n                    this.setState({ course: course });\r\n                    this.setState({\r\n                        subSectionForm: false,\r\n                        isLoading: false,\r\n                        subSectionUpdate: false,\r\n                        newSubSection: {\r\n                            name: \"\",\r\n                            previousYearQuestions: [],\r\n                            sectionalQuestions: [],\r\n                            videoURLs: [],\r\n                            handoutIds: []\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({ isLoading: false, apiError: res.data.message });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    addSection = () => {\r\n        var course = this.state.course;\r\n        if (course.sections == null) {\r\n            course.sections = [];\r\n            this.setState({ course: course });\r\n        }\r\n        if (this.state.newSectionIndex >= 0 && this.state.newSectionIndex <= this.state.course.sections.length) {\r\n            course.sections.splice(this.state.newSectionIndex, 0,\r\n                {\r\n                    name: this.state.newSection,\r\n                    modules: []\r\n                });\r\n            this.setState({ course: course, newSection: \"\", newSectionIndex: this.state.newSectionIndex + 1 });\r\n        }\r\n\r\n    }\r\n\r\n    addModule = (index) => {\r\n        var course = this.state.course;\r\n        if (course.sections[index].modules == null) {\r\n            course.sections[index].modules = [];\r\n            this.setState({ course: course });\r\n        }\r\n        course.sections[index].modules.push({\r\n            name: this.state.newModule,\r\n            subModules: [],\r\n            questions: []\r\n        })\r\n        this.setState({ course: course, newModule: \"\" });\r\n    }\r\n\r\n\r\n    // Delete Functions........................................................\r\n\r\n    handleDelete = () => {\r\n        this.setState({ isLoading: true });\r\n        if (store.getState().auth !== undefined) {\r\n            if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                this.setState({ success: true });\r\n            }\r\n            else {\r\n                axios.delete(store.getState().apiUrl + \"/course/\" + this.state.course._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n\r\n                    if (res.data.status) {\r\n                        this.setState({ isLoading: false, success: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ isLoading: false });\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteSection = (sectionIndex) => {\r\n        var course = this.state.course;\r\n        var flag = 0;\r\n        for (var m in course.sections[sectionIndex].modules) {\r\n            if (course.sections[sectionIndex].modules[m].subModules.length > 0) {\r\n                flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === 1) {\r\n            alert(\"delete all sub modules inside the module of the section\");\r\n        }\r\n        else {\r\n            course.sections.splice(sectionIndex, 1);\r\n            var selectedSection = this.state.selectedSection;\r\n            selectedSection = 0;\r\n            if (course.sections.length === 0) {\r\n                selectedSection = -1;\r\n            }\r\n            this.setState({ selectedSection: selectedSection, course: course, newSectionIndex: this.state.course.sections.length });\r\n        }\r\n\r\n    }\r\n\r\n    deleteModule = (sectionIndex, moduleIndex) => {\r\n        var course = this.state.course;\r\n        if (course.sections[sectionIndex].modules[moduleIndex].subModules.length > 0) {\r\n            alert(\"delete all sub modules inside the module\");\r\n        }\r\n        else {\r\n            course.sections[sectionIndex].modules.splice(moduleIndex, 1);\r\n            this.setState({ course: course });\r\n        }\r\n    }\r\n\r\n    deleteSubSection = (sectionIndex, moduleIndex, subSectionIndex) => {\r\n        var course = this.state.course;\r\n        var subSectionId = course.sections[sectionIndex].modules[moduleIndex].subModules[subSectionIndex];\r\n\r\n        axios.delete(store.getState().apiUrl + \"/course/submodule/\" + subSectionId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n            if (res.data.status) {\r\n                this.setState({ changed: true });\r\n                var emptySubSection = this.state.newSubSection;\r\n                this.setState({ newSubSection: this.state.subSections[subSectionId] });\r\n                this.cancelSubSectionSubmission();\r\n                this.setState({ newSubSection: emptySubSection });\r\n                var subSections = this.state.subSections;\r\n                delete subSections[subSectionId];\r\n                this.setState({ subSections: subSections });\r\n                course.sections[sectionIndex].modules[moduleIndex].subModules.splice(subSectionIndex, 1);\r\n                this.setState({ course: course });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // Rendering functions.....................................................\r\n\r\n    renderSubSectionViewButton = (i, j, index) => {\r\n        if (this.state.changed === false) {\r\n            return (\r\n                <Link to={{\r\n                    pathname: \"/course/viewSubModule\",\r\n                    state: {\r\n                        subModule: this.state.subSections[this.state.course.sections[i].modules[j].subModules[index]],\r\n                        sectionName: this.state.course.sections[i].name\r\n                    }\r\n                }}>\r\n                    <Button>View</Button>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderSectionSelector = () => {\r\n        if (this.state.course.sections == null) {\r\n            return;\r\n        }\r\n        var c = this.state.course.sections.map((section, index) => {\r\n            return (\r\n                <Button key={index} className=\"m-2\" color=\"primary\" onClick={() => {\r\n                    this.setState({ selectedSection: index });\r\n                }}\r\n                >{section.name}</Button>\r\n            )\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderCoaches = () => {\r\n        if (this.state.course.coaches && this.state.coaches) {\r\n            var c = this.state.course.coaches.map((coachid, index) => {\r\n                var coach = this.state.coaches[coachid];\r\n                if (coach != null && coach !== undefined) {\r\n                    return (\r\n                        <Col lg=\"3\" className=\"mb-2\" key={index}>\r\n                            <MentorCard data={coach}></MentorCard>\r\n                        </Col>\r\n\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <div key={index}></div>\r\n                    );\r\n                }\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    renderCoachOptions = () => {\r\n        if (this.state.allCoaches) {\r\n            var c = this.state.allCoaches.map((coach) => {\r\n                return (\r\n                    <option key={coach._id}>{coach.name}</option>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    renderFullLengthTests = () => {\r\n        if (this.state.course.fullLengthTests && this.state.allFullLengthTests) {\r\n            var c = this.state.course.fullLengthTests.map((questionCollection, index) => {\r\n                var questionCollectionName = this.state.allFullLengthTests.filter((test) => {\r\n                    return test._id === questionCollection;\r\n                })[0];\r\n                if (questionCollectionName != null) {\r\n                    questionCollectionName = questionCollectionName.name\r\n                }\r\n                else {\r\n                    questionCollectionName = questionCollection;\r\n                }\r\n                return (\r\n                    <div key={index}>\r\n                        <p>{index + 1}. {questionCollectionName}\r\n                            <Link to={{\r\n                                pathname: \"/question/view\",\r\n                                state: { questionCollectionId: questionCollection }\r\n                            }}>\r\n                                <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                            </Link>\r\n                            <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                                var course = this.state.course;\r\n                                course.fullLengthTests.splice(index, 1);\r\n                                this.setState({ course: course });\r\n                            }}></Button>\r\n\r\n                        </p>\r\n                    </div>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    renderFullLengthtestOptions = () => {\r\n\r\n        if (this.state.allFullLengthTests) {\r\n            var c = this.state.allFullLengthTests.map((questionCollection) => {\r\n                return (\r\n                    <option key={questionCollection._id}>{questionCollection.name}</option>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n\r\n    }\r\n    renderSubSections = (i, j) => {\r\n        if (this.state.course.sections[i].modules[j].subModules) {\r\n            var c = this.state.course.sections[i].modules[j].subModules.map((subSection, index) => {\r\n                if (this.state.subSections[subSection]) {\r\n                    var numberOfTests = this.state.subSections[subSection].sectionalQuestions.length + this.state.subSections[subSection].previousYearQuestions.length;\r\n                    if (this.state.subSections[subSection].directQuestions) {\r\n                        numberOfTests += this.state.subSections[subSection].directQuestions.length;\r\n                    }\r\n                    if (this.state.subSections[subSection].practiceQuestions) {\r\n                        numberOfTests += this.state.subSections[subSection].practiceQuestions.length;\r\n                    }\r\n                    if (this.state.subSections[subSection].newPatternQuestions) {\r\n                        numberOfTests += this.state.subSections[subSection].newPatternQuestions.length;\r\n                    }\r\n                    return (\r\n                        <Col lg=\"4\" className=\"mt-3\" key={index}>\r\n                            <Card>\r\n                                <CardTitle><h6>Sub module: {this.state.subSections[subSection].name}</h6></CardTitle>\r\n                                <CardBody>\r\n                                    <p>Number of Videos: {this.state.subSections[subSection].videoURLs.length}</p>\r\n                                    <p>Number of Tests: {numberOfTests}</p>\r\n                                    <p>Handout: {this.state.subSections[subSection].handoutIds.length}</p>\r\n                                    {this.renderSubSectionViewButton(i, j, index)}\r\n                                    <Button className=\"m-1\" color=\"danger\" onClick={() => { this.deleteSubSection(i, j, index) }}>Delete Sub Section</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    );\r\n                }\r\n                return (\r\n                    <div key={index}></div>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n\r\n    }\r\n\r\n    renderModules = (i) => {\r\n        if (this.state.course.sections[i].modules == null) {\r\n            return;\r\n        }\r\n        var c = this.state.course.sections[i].modules.map((module, index) => {\r\n            return (\r\n                <Col lg=\"12\" className=\"mt-3\" key={index}>\r\n                    <Card>\r\n                        <CardTitle><h5>Module: {module.name}</h5></CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                {this.renderSubSections(i, index)}\r\n                                <Col lg=\"4\" className=\"mt-3\">\r\n                                    <Card >\r\n                                        <CardTitle>Add new sub module</CardTitle>\r\n                                        <CardBody>\r\n                                            <FormGroup row>\r\n                                                <Button style={{ marginLeft: \"auto\", marginRight: \"auto\" }} color=\"primary\" onClick={() => {\r\n                                                    if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n                                                        alert(\"You must submit the course before adding sub modules\");\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({ subSectionForm: true, sectionIndex: i, moduleIndex: index });\r\n                                                    }\r\n                                                }\r\n\r\n                                                }\r\n                                                >Add Sub Module</Button>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                    {/* <Card>\r\n                                        <CardTitle>Add questions to module</CardTitle>\r\n                                        <CardBody style={{ marginRight: \"auto\" }}>\r\n                                            {this.renderModuleQuestions(i, index)}\r\n                                            <FormGroup row>\r\n                                                <Input type=\"file\" name=\"newQuestionCollectionId\" id=\"newQuestionCollectionId\" onChange={this.handleFile}></Input>\r\n                                                <Button className=\"m-2\" color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        var course = this.state.course;\r\n                                                        var formData = new FormData();\r\n                                                        formData.append(\"file\", this.state.file);\r\n                                                        axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                            if (res.data.status) {\r\n                                                                course.sections[i].modules[index].questions.push(res.data.questionCollection._id);\r\n                                                                this.setState({ course: course });\r\n                                                            }\r\n                                                        });\r\n                                                    }}\r\n                                                >Add</Button>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card> */}\r\n                                    <Card className=\"mt-3\">\r\n                                        <Button className=\"m-3\" color=\"danger\" onClick={() => { this.deleteModule(i, index) }}>Delete this Module</Button>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderSections = () => {\r\n        if (this.state.course.sections === null || this.state.course.sections === undefined || this.state.course.sections.length === 0 || this.state.selectedSection === -1) {\r\n            return;\r\n        }\r\n        else {\r\n            var index = this.state.selectedSection;\r\n            var section = this.state.course.sections[index];\r\n            return (\r\n                <div>\r\n                    <Card className=\"m-3\">\r\n                        <CardTitle><h4>{section.name}</h4></CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                {this.renderModules(index)}\r\n                                <Col lg=\"10\" className=\"mt-3\">\r\n                                    <Card >\r\n                                        <CardTitle>Add new Module</CardTitle>\r\n                                        <CardBody>\r\n                                            <FormGroup row>\r\n                                                <Col lg=\"2\">\r\n                                                    <Label for=\"newModule\" >Module Name</Label>\r\n                                                </Col>\r\n                                                <Col lg=\"8\">\r\n                                                    <Input type=\"text\" name=\"newModule\" id=\"newModule\" value={this.state.newModule || \"\"} onChange={this.handleChange}></Input>\r\n                                                </Col>\r\n                                                <Col lg=\"2\">\r\n                                                    <Button color=\"primary\" onClick={() => { this.addModule(index) }}>Add Module</Button>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg=\"2\" style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n                                    <Button className=\"m-3\" color=\"danger\" onClick={() => { this.deleteSection(index) }}>Delete this section</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    renderModuleQuestions = (i, j) => {\r\n        var c = this.state.course.sections[i].modules[j].questions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderSectionalQuestions = () => {\r\n        var c = this.state.newSubSection.sectionalQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderPreviousYearQuestions = () => {\r\n        var c = this.state.newSubSection.previousYearQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderPracticeQuestions = () => {\r\n        var c = this.state.newSubSection.practiceQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderDirectQuestions = () => {\r\n        var c = this.state.newSubSection.directQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderNewPatternQuestions = () => {\r\n        var c = this.state.newSubSection.newPatternQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderHandouts = () => {\r\n        var c = this.state.newSubSection.handoutIds.map((handout, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {handout}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderVideos = () => {\r\n        var c = this.state.newSubSection.videoURLs.map((video, index) => {\r\n            var videoAuthorName;\r\n            if (this.state.allCoaches) {\r\n                videoAuthorName = this.state.allCoaches.filter((coach) => {\r\n                    return coach._id === video.author;\r\n                })[0].name;\r\n            }\r\n            return (\r\n                <div style={{ textAlign: \"left\" }} key={index}>\r\n                    <p>{index + 1}. {video.title}</p>\r\n                    <p>id:  {video.url}</p>\r\n                    <p>Desc:  {video.description}</p>\r\n                    <p>author:  {videoAuthorName}</p>\r\n                    <p>duration:  {video.duration}</p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderWhatYouWillLearn = () => {\r\n        if (this.state.course.whatYouWillLearn != null) {\r\n            var c = this.state.course.whatYouWillLearn.map((item, index) => {\r\n                return (\r\n                    <Row key={index}>\r\n                        <Col lg=\"10\">\r\n                            <p key={index} style={{ textAlign: \"left\" }} >{index + 1}) {item}</p>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <Button color=\"danger\" className=\"fa fa-trash\" onClick={(event) => {\r\n                                var course = this.state.course;\r\n                                course.whatYouWillLearn.splice(index, 1);\r\n                                this.setState({ course: course });\r\n                            }}></Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            });\r\n            return c;\r\n        }\r\n        else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    renderFAQ = () => {\r\n        if (this.state.course.FAQ != null) {\r\n            var c = this.state.course.FAQ.map((item, index) => {\r\n                return (\r\n                    <Row key={index}>\r\n                        <Col lg=\"12\">\r\n                            <p style={{ textAlign: \"left\" }}>Q) {item.question}</p>\r\n                        </Col>\r\n                        <Col lg=\"10\">\r\n                            <p style={{ textAlign: \"left\" }}>A) {item.answer}</p>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <Button color=\"danger\" className=\"fa fa-trash\" onClick={(event) => {\r\n                                var course = this.state.course;\r\n                                course.FAQ.splice(index, 1);\r\n                                this.setState({ course: course });\r\n                            }}></Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            });\r\n            return c;\r\n        }\r\n        else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    uploadImage = (imageType, imageId) => {\r\n        var course = this.state.course;\r\n        if (course.imageIds == null) {\r\n            course.imageIds = {};\r\n        }\r\n        course.imageIds[imageType] = imageId;\r\n        this.setState({ course: course });\r\n        axios.put(store.getState().apiUrl + \"/course/\" + this.state.course._id, this.state.course, { headers: { auth: store.getState().auth } }).then((res) => {\r\n            if (!res.data.status) {\r\n                this.setState({ apiError: res.data.message, isLoading: false });\r\n            }\r\n            else {\r\n                this.setState({ isLoading: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    spinnerStart = (flag) => {\r\n        this.setState({ isLoading: flag });\r\n    }\r\n\r\n    renderAdditionalDetails = () => {\r\n        if (this.state.renderAdditionalDetails) {\r\n            return (\r\n                <Row>\r\n                    <Col lg=\"12\">\r\n                        <CourseImage imageIds={this.state.course.imageIds || {}} onUpload={this.uploadImage} spinnerStart={this.spinnerStart}></CourseImage>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h5>What you will learn</h5>\r\n                        {this.renderWhatYouWillLearn()}\r\n                        <Input type=\"text\" name=\"newWhatYouWillLearn\" id=\"newWhatYouWillLearn\" value={this.state.newWhatYouWillLearn || \"\"}\r\n                            onChange={this.handleChange}>\r\n                        </Input>\r\n                        <Button color=\"primary\" className=\"mt-2\" onClick={(event) => {\r\n                            var course = this.state.course;\r\n                            if (this.state.course.whatYouWillLearn == null) {\r\n                                course.whatYouWillLearn = [];\r\n                            }\r\n                            course.whatYouWillLearn.push(this.state.newWhatYouWillLearn);\r\n                            this.setState({ course: course, newWhatYouWillLearn: \"\" });\r\n                        }}>\r\n                            Add\r\n                                </Button>\r\n\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h5>FAQ</h5>\r\n                        {this.renderFAQ()}\r\n                        <FormGroup row>\r\n                            <Label for=\"newQuestion\">Question</Label>\r\n                            <Col sm={10}>\r\n                                <Input type=\"text\" name=\"newQuestion\" id=\"newQuestion\" value={this.state.newQuestion || \"\"}\r\n                                    onChange={this.handleChange}>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label for=\"newAnswer\">Answer</Label>\r\n                            <Col sm={10}>\r\n                                <Input sm={10} type=\"text\" name=\"newAnswer\" id=\"newAnswer\" value={this.state.newAnswer || \"\"}\r\n                                    onChange={this.handleChange}>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" className=\"mt-2\" onClick={(event) => {\r\n                            var course = this.state.course;\r\n                            if (this.state.course.FAQ == null) {\r\n                                course.FAQ = [];\r\n                            }\r\n                            course.FAQ.push({\r\n                                question: this.state.newQuestion,\r\n                                answer: this.state.newAnswer\r\n                            });\r\n                            this.setState({ course: course, newWhatYouWillLearn: \"\" });\r\n                        }}>\r\n                            Add\r\n                                </Button>\r\n\r\n                    </Col>\r\n                    <Col lg=\"12\">\r\n                        <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                        <FormGroup className=\"ml-4\" row>\r\n                            <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.course.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                            <Label for=\"whatsNew\">Whats new</Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"ml-4\" row>\r\n                            <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.course.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                            <Label for=\"other\">Other</Label>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\">\r\n                        <h2 style={{ textAlign: \"left\" }} className=\"mt-3 mb-3\" >Coaches</h2>\r\n                        <div style={{ textAlign: \"left\" }}>\r\n                            <Row>\r\n                                {this.renderCoaches()}\r\n                            </Row>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <Label for=\"newCoach\">Coach</Label>\r\n                                    <Input type=\"select\" name=\"newCoach\" id=\"newCoach\" placeholder=\"Select new coach\" value={this.state.newCoach} onChange={(event) => {\r\n                                        this.setState({ newCoach: event.target.value });\r\n                                        var newCoach = this.state.allCoaches.filter((c) => {\r\n                                            return c.name === event.target.value;\r\n                                        })[0];\r\n                                        this.setState({ newCoachId: newCoach._id })\r\n                                    }} >\r\n                                        {this.renderCoachOptions()}\r\n                                    </Input>\r\n                                    <Button className=\"mt-2\" color=\"primary\" onClick={() => {\r\n                                        var course = this.state.course;\r\n                                        course.coaches.push(this.state.newCoachId);\r\n                                        var coaches = this.state.coaches;\r\n                                        coaches[this.state.newCoachId] = this.state.allCoaches.filter((coach) => {\r\n                                            return coach._id === this.state.newCoachId;\r\n                                        })[0];\r\n                                        this.setState({ coaches: coaches });\r\n                                        console.log(this.state)\r\n                                    }}>Add</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"12\">\r\n                        <h2 style={{ textAlign: \"left\" }} className=\"mt-3 mb-3\" >Full length tests</h2>\r\n                        <div style={{ textAlign: \"left\" }}>\r\n                            <Row>\r\n                                {this.renderFullLengthTests()}\r\n                            </Row>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <Label for=\"newFullLengthTest\">Full Length Test</Label>\r\n                                    <Input type=\"select\" name=\"newFullLengthTest\" id=\"newFullLengthTest\" placeholder=\"Select new test\" value={this.state.newFullLengthTest} onChange={(event) => {\r\n                                        this.setState({ newFullLengthTest: event.target.value });\r\n                                        var newFullLengthTest = this.state.allFullLengthTests.filter((c) => {\r\n                                            return c.name === event.target.value;\r\n                                        })[0];\r\n                                        console.log(newFullLengthTest);\r\n                                        this.setState({ newFullLengthTestId: newFullLengthTest._id });\r\n                                    }} >\r\n                                        {this.renderFullLengthtestOptions()}\r\n                                    </Input>\r\n                                    <Button className=\"mt-2\" color=\"primary\" onClick={() => {\r\n                                        var course = this.state.course;\r\n                                        if (course.fullLengthTests) {\r\n                                            course.fullLengthTests.push(this.state.newFullLengthTestId);\r\n                                        }\r\n                                        else {\r\n                                            course.fullLengthTests = [];\r\n                                            course.fullLengthTests.push(this.state.newFullLengthTestId);\r\n                                        }\r\n                                        console.log(course.fullLengthTests);\r\n                                        this.setState({ course: course });\r\n                                    }}>Add</Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.subSectionForm) {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"8\" style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                            <div >\r\n                                <h2>Create New Sub Section</h2>\r\n                                <Form className=\"m-3\">\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            {this.renderError()}\r\n                                            {this.renderSpinner()}\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup row className=\"m-2\">\r\n                                                <Label for=\"name\">Name</Label>\r\n                                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter sub section name\" value={this.state.newSubSection.name || \"\"}\r\n                                                    onChange={(event) => {\r\n                                                        var newSubSection = this.state.newSubSection;\r\n                                                        newSubSection.name = event.target.value;\r\n                                                        this.setState({ newSubSection: newSubSection }, () => {\r\n                                                            console.log(this.state);\r\n                                                        });\r\n                                                    }} />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Question Collections</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    <p style={{ textAlign: \"left\" }}>Sectional tests: </p>\r\n                                                    {this.renderSectionalQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Previous year question tests</p>\r\n                                                    {this.renderPreviousYearQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Practice question:</p>\r\n                                                    {this.renderPracticeQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Direct questions:</p>\r\n                                                    {this.renderDirectQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>New Pattern Questions:</p>\r\n                                                    {this.renderNewPatternQuestions()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"select\" name=\"questionCollectionType\" id=\"questionCollectionType\" value={this.state.questionCollectionType}\r\n                                                            onChange={(event) => {\r\n                                                                this.setState({ questionCollectionType: event.target.value });\r\n                                                            }}>\r\n                                                            <option>Sectional Test Questions</option>\r\n                                                            <option>Previous Year Questions</option>\r\n                                                            <option>Practice Questions</option>\r\n                                                            <option>Direct Questions</option>\r\n                                                            <option>New Pattern Questions</option>\r\n                                                        </Input>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubSection = this.state.newSubSection;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"file\", this.state.file);\r\n                                                                formData.append(\"type\", this.state.questionCollectionType);\r\n                                                                formData.append(\"section\", this.state.course.sections[this.state.selectedSection].name);\r\n                                                                axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        //console.log(this.state.questionCollectionType);\r\n                                                                        if (this.state.questionCollectionType === \"Sectional Test Questions\") {\r\n                                                                            newSubSection.sectionalQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Previous Year Questions\") {\r\n                                                                            newSubSection.previousYearQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Practice Questions\") {\r\n                                                                            newSubSection.practiceQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Direct Questions\") {\r\n                                                                            newSubSection.directQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"New Pattern Questions\") {\r\n                                                                            newSubSection.newPatternQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        this.setState({ newSubSection: newSubSection }, () => {\r\n                                                                        });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                });\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Handouts</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    {this.renderHandouts()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={async () => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubSection = this.state.newSubSection;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"handoutFile\", this.state.file);\r\n\r\n                                                                await axios.post(store.getState().storageUrl + \"/course/handout\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        newSubSection.handoutIds.push(res.data.fileId);\r\n                                                                        this.setState({ newSubSection: newSubSection });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                }).catch((err) => {\r\n                                                                    this.setState({ apiError: \"could not upload, error: \" + err, isLoading: false });\r\n                                                                })\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col lg=\"12\" className=\"mt-3\">\r\n                                            <p> Videos</p>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    {this.renderVideos()}\r\n                                                    <FormGroup row>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoTitle\" >Title</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoTitle\" id=\"newVideoTitle\" value={this.state.newVideoTitle || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideo\" >Video ID</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"3\">\r\n                                                            <Input type=\"text\" name=\"newVideo\" id=\"newVideo\" value={this.state.newVideo || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"1\"></Col>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDuration\" >Duration</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"3\">\r\n                                                            <Input type=\"text\" name=\"newVideoDuration\" id=\"newVideoDuration\" value={this.state.newVideoDuration || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDescription\" >Description</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoDescription\" id=\"newVideoDescription\" value={this.state.newVideoDescription || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoAuthor\" >Author</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"select\" name=\"newVideoAuthor\" id=\"newVideoAuthor\" value={this.state.newVideoAuthor || \"\"} onChange={(event) => {\r\n                                                                var newVideoAuthor = this.state.allCoaches.filter((c) => {\r\n                                                                    return c.name === event.target.value;\r\n                                                                })[0]._id;\r\n                                                                this.setState({ newVideoAuthor: newVideoAuthor });\r\n                                                            }}>\r\n                                                                {this.renderCoachOptions()}\r\n                                                            </Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"2\">\r\n                                                            <Button color=\"primary\"\r\n                                                                onClick={() => {\r\n                                                                    var newSubSection = this.state.newSubSection;\r\n                                                                    var newVideo = {\r\n                                                                        url: this.state.newVideo,\r\n                                                                        description: this.state.newVideoDescription,\r\n                                                                        author: this.state.newVideoAuthor,\r\n                                                                        duration: this.state.newVideoDuration,\r\n                                                                        title: this.state.newVideoTitle\r\n                                                                    };\r\n                                                                    newSubSection.videoURLs.push(newVideo);\r\n                                                                    this.setState({ newSubSection: newSubSection, newVideo: \"\", newVideoDescription: \"\", newVideoAuthor: \"\", newVideoTitle: \"\", newVideoDuration: \"\" });\r\n                                                                    console.log(this.state);\r\n                                                                }}\r\n                                                            >Add</Button>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button className=\"m-3\" onClick={this.cancelSubSectionSubmission}>Cancel</Button>\r\n                                    <Button className=\"m-3\" color=\"primary\" onClick={this.submitSubSection}>Submit</Button>\r\n\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <h1>Course Editor</h1>\r\n                    <Form className=\"mt-4\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"name\" sm={2}>Course Name</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.course.name || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.name = event.target.value;\r\n                                            this.setState({ course: course });\r\n\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"duration\" sm={2}>Course Duration</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"text\" name=\"duration\" id=\"duration\" value={this.state.course.duration || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.duration = event.target.value;\r\n                                            this.setState({ course: course });\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg=\"12\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"smallDescription\" sm={2}>Small Description</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"text\" rows=\"5\" name=\"smallDescription\" id=\"smallDescription\" value={this.state.course.smallDescription || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.smallDescription = event.target.value;\r\n                                            this.setState({ course: course });\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"12\">\r\n                                <FormGroup row>\r\n                                    <Label for=\"description\" sm={2}>Course Description</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input type=\"textarea\" rows=\"5\" name=\"description\" id=\"description\" value={this.state.course.description || \"\"} onChange={(event) => {\r\n                                            var course = this.state.course;\r\n                                            course.description = event.target.value;\r\n                                            this.setState({ course: course });\r\n                                        }} ></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"4\">\r\n                                <FormGroup row>\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <Label for=\"available\">Is course available</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"5\">\r\n                                            <Input className=\"m-2\" type=\"select\" name=\"available\" id=\"available\" value={this.state.course.available || false}\r\n                                                onChange={(event) => {\r\n                                                    var course = this.state.course;\r\n                                                    course.available = event.target.value\r\n                                                    this.setState({ course: course });\r\n                                                }}>\r\n                                                <option>true</option>\r\n                                                <option>false</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col lg=\"4\">\r\n                                <FormGroup row>\r\n                                    <Row>\r\n                                        <Col style={{ marginTop: \"auto\", marginBottom: \"auto\" }} lg=\"3\">\r\n                                            <Label for=\"price\">price</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"5\">\r\n                                            <Input className=\"m-2\" type=\"text\" name=\"price\" id=\"price\" value={this.state.course.price || \"\"}\r\n                                                onChange={(event) => {\r\n                                                    var course = this.state.course;\r\n                                                    course.price = event.target.value\r\n                                                    this.setState({ course: course });\r\n                                                }}>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"12\" className=\"m-3\">\r\n                                <Row>\r\n                                    <Col lg=\"3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"classHours\">Class hours</Label>\r\n                                            <Col sm={5}>\r\n                                                <Input type=\"text\" name=\"classHours\" id=\"classHours\" value={this.state.course.classHours || \"\"}\r\n                                                    onChange={this.handleCourseDetailChange}>\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"studyNotes\">Study notes</Label>\r\n                                            <Col sm={5}>\r\n                                                <Input type=\"text\" name=\"studyNotes\" id=\"studyNotes\" value={this.state.course.studyNotes || \"\"}\r\n                                                    onChange={this.handleCourseDetailChange}>\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"tests\">Tests</Label>\r\n                                            <Col sm={5}>\r\n                                                <Input type=\"text\" name=\"tests\" id=\"tests\" value={this.state.course.tests || \"\"}\r\n                                                    onChange={this.handleCourseDetailChange}>\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"exams\">Exams</Label>\r\n                                            <Col sm={5}>\r\n                                                <Input type=\"text\" name=\"exams\" id=\"exams\" value={this.state.course.exams || \"\"}\r\n                                                    onChange={this.handleCourseDetailChange}>\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup className=\"ml-4\" row>\r\n                                    <Input type=\"checkbox\" name=\"renderAdditionalDetails\" id=\"renderAdditionalDetails\" value={this.state.renderAdditionalDetails || \"\"} onChange={(event) => {\r\n                                        this.setState({ renderAdditionalDetails: event.target.checked });\r\n                                    }}></Input>\r\n                                    <Label for=\"renderAdditionalDetails\">Show Additional Details</Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.renderAdditionalDetails()}\r\n\r\n                        <h2 style={{ textAlign: \"left\" }} className=\"mt-3 mb-3\" >Sections</h2>\r\n                        <div style={{ textAlign: \"left\" }}>\r\n                            {this.renderSectionSelector()}\r\n                        </div>\r\n                        {this.renderSections()}\r\n                        <h4 className=\"m-3\" style={{ textAlign: \"left\" }}>Add New Section</h4>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"mt-3\">\r\n                                <CardBody>\r\n                                    <FormGroup row>\r\n                                        <Col lg=\"2\">\r\n                                            <Label for=\"newSection\" >Section Name</Label>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <Input type=\"text\" name=\"newSection\" id=\"newSection\" value={this.state.newSection || \"\"} onChange={this.handleChange}></Input>\r\n                                        </Col>\r\n                                        <Col lg=\"2\">\r\n                                            <Input type=\"number\" name=\"newSectionIndex\" id=\"newSectionIndex\" value={this.state.newSectionIndex} onChange={this.handleChange}></Input>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <Button color=\"primary\" onClick={this.addSection}>Add section</Button>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Form>\r\n\r\n                    <Row className=\"m-4\">\r\n                        <Col className=\"lg-2\">\r\n                            <Button color=\"danger\" onClick={this.handleDelete}>Delete</Button>\r\n                        </Col>\r\n                        <Col className=\"lg-2\">\r\n                            <Button color=\"primary\" onClick={this.handleSubmit} >Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* {this.checkLogin()} */}\r\n                    {this.renderSpinner()}\r\n                    {this.renderError()}\r\n                    {this.redirectToCourses()}\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CourseEditor;","import React from 'react';\r\nimport { Card, CardBody, Button, Container, Row, Col, Form, Alert, Spinner, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport store from \"../reduxStore/store\";\r\nimport axios from 'axios';\r\n\r\nclass SubModuleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            apiError: \"\",\r\n            isLoading: false,\r\n            subModule: this.props.state.location.state.subModule,\r\n            pdfView: false,\r\n            questionCollectionType: \"Sectional Test Questions\"\r\n        };\r\n\r\n        this.renderError = this.renderError.bind(this);\r\n        this.redirectToCourses = this.redirectToCourses.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(store.getState().apiUrl + \"/mentor/coach\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n            if (res.data.status && res.data.coaches.length !== 0) {\r\n                this.setState({ allCoaches: res.data.coaches, newCoach: res.data.coaches[0].name, newCoachId: res.data.coaches[0]._id, newVideoAuthor: res.data.coaches[0]._id });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner style={{\r\n                    zIndex: \"5\", margin: \"auto\", position: \"absolute\", top: \"100px\", left: \"100px\",\r\n                    bottom: \"100px\", right: \"50px\", height: \"50px\", width: \"50px\"\r\n                }} color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToCourses = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/course\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleVideoDetailChange = (event, index) => {\r\n        var subModule = this.state.subModule;\r\n        subModule.videoURLs[index][event.target.name] = event.target.value;\r\n        this.setState({ subModule: subModule });\r\n    }\r\n\r\n    renderCoachOptions = () => {\r\n        if (this.state.allCoaches) {\r\n            var c = this.state.allCoaches.map((coach) => {\r\n                return (\r\n                    <option key={coach._id}>{coach.name}</option>\r\n                );\r\n            });\r\n            return c;\r\n        }\r\n    }\r\n\r\n    deleteQuestionCollection = (questionCollectionType, index) => {\r\n        var subModule = this.state.subModule;\r\n        var questionCollection = subModule[questionCollectionType][index];\r\n        subModule[questionCollectionType].splice(index, 1);\r\n        console.log(questionCollection);\r\n        this.setState({ subModule: subModule });\r\n        axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.status) {\r\n                axios.delete(store.getState().apiUrl + \"/questions/\" + questionCollection, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                });\r\n            }\r\n            else {\r\n                this.setState({ apiError: \"something went wrong.. Go back\" });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    renderSectionalQuestions = () => {\r\n        var c = this.state.subModule.sectionalQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={(event) => { this.deleteQuestionCollection(\"sectionalQuestions\", index) }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderPreviousYearQuestions = () => {\r\n        var c = this.state.subModule.previousYearQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={(event) => { this.deleteQuestionCollection(\"previousYearQuestions\", index) }}></Button>\r\n\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderPracticeQuestions = () => {\r\n        var c = this.state.subModule.practiceQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={(event) => { this.deleteQuestionCollection(\"practiceQuestions\", index) }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderDirectQuestions = () => {\r\n        var c = this.state.subModule.directQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={(event) => { this.deleteQuestionCollection(\"directQuestions\", index) }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n    renderNewPatternQuestions = () => {\r\n        var c = this.state.subModule.newPatternQuestions.map((questionCollection, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {questionCollection}\r\n                        <Link to={{\r\n                            pathname: \"/question/view\",\r\n                            state: { questionCollectionId: questionCollection }\r\n                        }}>\r\n                            <Button color=\"link\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={(event) => { this.deleteQuestionCollection(\"newPatternQuestions\", index) }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderHandouts = () => {\r\n        var c = this.state.subModule.handoutIds.map((handout, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <p>{index + 1}. {handout}\r\n                        <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"\r\n                            onClick={() => {\r\n                                if (store.getState().auth) {\r\n                                    this.setState({ isLoading: true });\r\n                                    axios.get(store.getState().storageUrl + \"/course/handout/\" + handout, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        console.log(res.data);\r\n                                        this.setState({\r\n                                            pdf: res.data.url,\r\n                                            pdfView: true,\r\n                                            isLoading: false\r\n                                        })\r\n                                    });\r\n                                }\r\n                            }}\r\n                        ></Button>\r\n                        <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                            var subModule = this.state.subModule;\r\n                            subModule.handoutIds.splice(index, 1);\r\n                            this.setState({ subModule: subModule });\r\n                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                console.log(response.data);\r\n                                if (response.data.status) {\r\n                                    axios.delete(store.getState().storageUrl + \"/course/handout/\" + handout, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        // if(!res.data.status){\r\n                                        //     this.setState({apiError: \"could not delete from storage\"});\r\n                                        // }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                                }\r\n                            });\r\n\r\n                        }}></Button>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderVideos = () => {\r\n        var c = this.state.subModule.videoURLs.map((video, index) => {\r\n            console.log(video.author);\r\n            var videoAuthorName;\r\n            if (this.state.allCoaches) {\r\n                videoAuthorName = this.state.allCoaches.filter((coach) => {\r\n                    return coach._id === video.author;\r\n                })[0].name;\r\n            }\r\n            return (\r\n                <div key={index}>\r\n                    {/* <p>{index + 1}. {video.url}</p>\r\n                    <p>Desc:  {video.description}</p> */}\r\n                    <Card className=\"mb-3\">\r\n                        <CardBody>\r\n                            <FormGroup row>\r\n                                <Col className=\"m-1\" lg=\"2\">\r\n                                    <Label for=\"title\" >Title</Label>\r\n                                </Col>\r\n                                <Col className=\"m-1\" lg=\"9\">\r\n                                    <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.subModule.videoURLs[index].title || \"\"} onChange={(event) => { this.handleVideoDetailChange(event, index) }}></Input>\r\n                                </Col>\r\n\r\n                                <Col className=\"m-1\" lg=\"2\">\r\n                                    <Label for=\"url\" >Video ID</Label>\r\n                                </Col>\r\n                                <Col className=\"m-1\" lg=\"3\">\r\n                                    <Input type=\"text\" name=\"url\" id=\"url\" value={this.state.subModule.videoURLs[index].url || \"\"} onChange={(event) => { this.handleVideoDetailChange(event, index) }}></Input>\r\n                                </Col>\r\n                                <Col lg=\"1\"></Col>\r\n                                <Col className=\"m-1\" lg=\"2\">\r\n                                    <Label for=\"duration\" >Duration</Label>\r\n                                </Col>\r\n                                <Col className=\"m-1\" lg=\"3\">\r\n                                    <Input type=\"text\" name=\"duration\" id=\"duration\" value={this.state.subModule.videoURLs[index].duration || \"\"} onChange={(event) => { this.handleVideoDetailChange(event, index) }}></Input>\r\n                                </Col>\r\n\r\n                                <Col className=\"m-1\" lg=\"2\">\r\n                                    <Label for=\"description\" >Description</Label>\r\n                                </Col>\r\n                                <Col className=\"m-1\" lg=\"9\">\r\n                                    <Input type=\"text\" name=\"description\" id=\"description\" value={this.state.subModule.videoURLs[index].description || \"\"} onChange={(event) => { this.handleVideoDetailChange(event, index) }}></Input>\r\n                                </Col>\r\n\r\n                                <Col className=\"m-1\" lg=\"2\">\r\n                                    <Label for=\"author\" >Author</Label>\r\n                                </Col>\r\n                                <Col className=\"m-1\" lg=\"9\">\r\n                                    <Input type=\"select\" name=\"author\" id=\"author\" value={videoAuthorName || \"\"} onChange={(event) => {\r\n                                        var newVideoAuthor = this.state.allCoaches.filter((c) => {\r\n                                            return c.name === event.target.value;\r\n                                        })[0]._id;\r\n                                        var subModule = this.state.subModule;\r\n                                        subModule.videoURLs[index].author = newVideoAuthor;\r\n                                        this.setState({ subModule: subModule });\r\n                                    }}>\r\n                                        {this.renderCoachOptions()}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </CardBody>\r\n                        <div className=\"mb-2\">\r\n                            <Link to={{\r\n\r\n                            }}>\r\n                                <Button color=\"primary\" style={{ marginLeft: \"10px\" }} className=\"fa fa-eye\"></Button>\r\n                            </Link>\r\n                            <Button color=\"danger\" style={{ marginLeft: \"10px\" }} className=\"fa fa-trash\" onClick={() => {\r\n                                var subModule = this.state.subModule;\r\n                                subModule.videoURLs.splice(index, 1);\r\n                                this.setState({ subModule: subModule });\r\n                                axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                    console.log(response.data);\r\n                                    if (response.data.status) {\r\n\r\n                                    }\r\n                                    else {\r\n                                        this.setState({ apiError: \"something went wrong.. Go back\" });\r\n                                    }\r\n                                });\r\n\r\n                            }}></Button>\r\n                        </div>\r\n                    </Card>\r\n\r\n                </div>\r\n            );\r\n        });\r\n        return c;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.pdfView) {\r\n            return (\r\n                <Container>\r\n                    <iframe title=\"iframe\"  width='100%' height='500px' src={this.state.pdf}></iframe>\r\n                    <Button color=\"primary\" onClick={() => { this.setState({ pdfView: false }) }}>Go back</Button>\r\n                </Container>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"10\" style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                            <div >\r\n                                <h2>Create New Sub Section</h2>\r\n                                <Form className=\"m-3\">\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            {this.renderError()}\r\n                                            {this.renderSpinner()}\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <h3>{this.state.subModule.name}</h3>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Question Collections</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    <p style={{ textAlign: \"left\" }}>Sectional tests: </p>\r\n                                                    {this.renderSectionalQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Previous year question tests:</p>\r\n                                                    {this.renderPreviousYearQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Practice question:</p>\r\n                                                    {this.renderPracticeQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>Direct questions:</p>\r\n                                                    {this.renderDirectQuestions()}\r\n                                                    <p style={{ textAlign: \"left\" }}>New Pattern Questions:</p>\r\n                                                    {this.renderNewPatternQuestions()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"select\" name=\"questionCollectionType\" id=\"questionCollectionType\" value={this.state.questionCollectionType}\r\n                                                            onChange={(event) => {\r\n                                                                this.setState({ questionCollectionType: event.target.value });\r\n                                                            }}>\r\n                                                            <option>Sectional Test Questions</option>\r\n                                                            <option>Previous Year Questions</option>\r\n                                                            <option>Practice Questions</option>\r\n                                                            <option>Direct Questions</option>\r\n                                                            <option>New Pattern Questions</option>\r\n                                                        </Input>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubModule = this.state.subModule;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"file\", this.state.file);\r\n                                                                formData.append(\"type\", this.state.questionCollectionType);\r\n                                                                formData.append(\"section\", this.props.state.location.state.sectionName);\r\n                                                                axios.post(store.getState().apiUrl + \"/questions\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        //console.log(this.state.questionCollectionType);\r\n                                                                        if (this.state.questionCollectionType === \"Sectional Test Questions\") {\r\n                                                                            newSubModule.sectionalQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Previous Year Questions\") {\r\n                                                                            newSubModule.previousYearQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Practice Questions\") {\r\n                                                                            newSubModule.practiceQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"Direct Questions\") {\r\n                                                                            newSubModule.directQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        else if (this.state.questionCollectionType === \"New Pattern Questions\") {\r\n                                                                            newSubModule.newPatternQuestions.push(res.data.questionCollection._id);\r\n                                                                        }\r\n                                                                        this.setState({ subModule: newSubModule }, () => {\r\n                                                                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                                console.log(response.data);\r\n                                                                                if (response.data.status) {\r\n\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    axios.delete(store.getState().apiUrl + \"/questions/\" + res.data.questionCollection._id);\r\n                                                                                    this.setState({ apiError: \"Could not update\" });\r\n                                                                                }\r\n                                                                            });\r\n                                                                        });\r\n\r\n\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                });\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"6\">\r\n                                            <p> Handouts</p>\r\n                                            <Card>\r\n                                                <CardBody style={{ marginRight: \"auto\" }}>\r\n                                                    {this.renderHandouts()}\r\n                                                    <FormGroup row>\r\n                                                        <Input className=\"m-2\" type=\"file\" onChange={this.handleFile}></Input>\r\n                                                        <Button className=\"m-2\" color=\"primary\"\r\n                                                            onClick={async () => {\r\n                                                                this.setState({ isLoading: true });\r\n                                                                var newSubModule = this.state.subModule;\r\n                                                                var formData = new FormData();\r\n                                                                formData.append(\"handoutFile\", this.state.file);\r\n\r\n                                                                await axios.post(store.getState().storageUrl + \"/course/handout\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                                    if (res.data.status) {\r\n                                                                        console.log(res.data);\r\n                                                                        newSubModule.handoutIds.push(res.data.handoutId);\r\n                                                                        this.setState({ subModule: newSubModule }, () => {\r\n                                                                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                                console.log(response.data);\r\n                                                                                if (response.data.status) {\r\n\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    axios.delete(store.getState().storageUrl + \"/course/handout/\" + res.data.fileId);\r\n                                                                                    this.setState({ apiError: \"Could not update\" });\r\n                                                                                }\r\n                                                                            });\r\n                                                                        });\r\n                                                                    }\r\n                                                                    else if (res.data.message) {\r\n                                                                        this.setState({ apiError: res.data.message });\r\n                                                                    }\r\n                                                                    this.setState({ isLoading: false });\r\n                                                                }).catch((err) => {\r\n                                                                    this.setState({ apiError: \"could not upload, error: \" + err, isLoading: false });\r\n                                                                })\r\n                                                            }}\r\n                                                        >Add</Button>\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col lg=\"12\" className=\"mt-3\">\r\n                                            <p> Videos</p>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    {this.renderVideos()}\r\n                                                    <FormGroup row>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoTitle\" >Title</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoTitle\" id=\"newVideoTitle\" value={this.state.newVideoTitle || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideo\" >Video ID</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"3\">\r\n                                                            <Input type=\"text\" name=\"newVideo\" id=\"newVideo\" value={this.state.newVideo || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"1\"></Col>\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDuration\" >Duration</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"3\">\r\n                                                            <Input type=\"text\" name=\"newVideoDuration\" id=\"newVideoDuration\" value={this.state.newVideoDuration || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoDescription\" >Description</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"text\" name=\"newVideoDescription\" id=\"newVideoDescription\" value={this.state.newVideoDescription || \"\"} onChange={this.handleChange}></Input>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\"m-1\" lg=\"2\">\r\n                                                            <Label for=\"newVideoAuthor\" >Author</Label>\r\n                                                        </Col>\r\n                                                        <Col className=\"m-1\" lg=\"9\">\r\n                                                            <Input type=\"select\" name=\"newVideoAuthor\" id=\"newVideoAuthor\" value={this.state.newVideoAuthor || \"\"} onChange={(event) => {\r\n                                                                var newVideoAuthor = this.state.allCoaches.filter((c) => {\r\n                                                                    return c.name === event.target.value;\r\n                                                                })[0]._id;\r\n                                                                this.setState({ newVideoAuthor: newVideoAuthor });\r\n                                                            }}>\r\n                                                                {this.renderCoachOptions()}\r\n                                                            </Input>\r\n                                                        </Col>\r\n                                                        <Col lg=\"2\">\r\n                                                            <Button color=\"primary\"\r\n                                                                onClick={() => {\r\n                                                                    var newSubModule = this.state.subModule;\r\n                                                                    var newVideo = {\r\n                                                                        url: this.state.newVideo,\r\n                                                                        description: this.state.newVideoDescription,\r\n                                                                        author: this.state.newVideoAuthor,\r\n                                                                        duration: this.state.newVideoDuration,\r\n                                                                        title: this.state.newVideoTitle\r\n                                                                    };\r\n                                                                    newSubModule.videoURLs.push(newVideo);\r\n                                                                    this.setState({ subModule: newSubModule, newVideo: \"\", newVideoDescription: \"\", newVideoAuthor: \"\", newVideoTitle: \"\", newVideoDuration: \"\" });\r\n                                                                    axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                        console.log(response.data);\r\n                                                                        if (response.data.status) {\r\n\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            this.setState({ apiError: \"could not update\" });\r\n                                                                        }\r\n                                                                    });\r\n                                                                }}\r\n                                                            >Add</Button>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                    <div>\r\n                                                        <Button color=\"primary\" onClick={(event) => {\r\n                                                            axios.put(store.getState().apiUrl + \"/course/\" + this.state.subModule._id + \"/submodule\", this.state.subModule, { headers: { auth: store.getState().auth } }).then((response) => {\r\n                                                                console.log(response.data);\r\n                                                                if (response.data.status) {\r\n                                                                    this.props.history.goBack();\r\n                                                                }\r\n                                                                else {\r\n                                                                    this.setState({ apiError: \"could not update\" });\r\n                                                                }\r\n                                                            });\r\n                                                        }} >Submit</Button>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default withRouter(SubModuleView);","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport MentorCard from './MentorCard';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass MentorsList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mentors: [],\r\n            coaches: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/mentor/mentor\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ mentors: res.data.mentors });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n            await axios.get(store.getState().apiUrl + \"/mentor/coach\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ coaches: res.data.coaches });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.mentors != null && this.state.mentors !== undefined) {\r\n            c = this.state.mentors.map((mentor) => {\r\n                return (\r\n                    <Col lg=\"3\" key={mentor._id}>\r\n                        <MentorCard data={mentor} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        var d;\r\n        if (this.state.coaches != null && this.state.coaches !== undefined) {\r\n            d = this.state.coaches.map((coach) => {\r\n                return (\r\n                    <Col lg=\"3\" key={coach._id}>\r\n                        < MentorCard data={coach} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"mentor/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Mentor</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Mentors</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    <h1 style={{ margin: \"auto\" }} >Coaches</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {d}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MentorsList","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\n\r\nclass MentorEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            type: \"Mentor\",\r\n            tags: {}\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data.mentor);\r\n                        this.setState(res.data.mentor);\r\n                        axios.get(store.getState().storageUrl + \"/mentor/\" + this.props.state.location.state.mentor.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                            var image = res.data.url;\r\n                            this.setState({ image: image });\r\n                        })\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/mentor\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file != null) {\r\n                    formData.append('mentorImage', this.state.file);\r\n                    await axios.put(store.getState().storageUrl + \"/mentor/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then(async(res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                axios.put(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, this.state, {\r\n                                    headers: { auth: store.getState().auth }\r\n                                }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ success: true, isLoading: false });\r\n                                    }\r\n                                    else {\r\n                                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (res.data.message === \"file not found\") {\r\n                            await axios.post(store.getState().storageUrl + \"/mentor\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                console.log(res.data);\r\n                                if (res.data.status) {\r\n                                    this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                        axios.put(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, this.state, {\r\n                                            headers: { auth: store.getState().auth }\r\n                                        }).then((res) => {\r\n                                            if (res.data.status) {\r\n                                                this.setState({ success: true, isLoading: false });\r\n                                            }\r\n                                            else {\r\n                                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"could not upload image\" });\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\" });\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({ image: undefined }, () => {\r\n                        axios.put(store.getState().apiUrl + \"/mentor/\" + this.props.state.location.state.mentor._id, this.state, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                }\r\n\r\n\r\n            }\r\n            else {\r\n                formData.append('mentorImage', this.state.file);\r\n                await axios.post(store.getState().storageUrl + \"/mentor\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                            axios.post(store.getState().apiUrl + \"/mentor\", this.state, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\" });\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().storageUrl + \"/mentor/\" + this.state.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            axios.delete(store.getState().apiUrl + \"/mentor/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ isLoading: false, success: true });\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: false, apiError: res.data.message });\r\n                                }\r\n                            }).catch((err) => {\r\n                                this.setState({ apiError: err });\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: \"could not delete image\" + res.data.message });\r\n                        }\r\n                    });\r\n\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Mentor</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter Mentor name\" value={this.state.name || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"designation\">Designation</Label>\r\n                                <Input type=\"text\" name=\"designation\" id=\"designation\" placeholder=\"Enter designation\" value={this.state.designation || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"1\"></Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Type</Label>\r\n                                <Input type=\"select\" name=\"type\" id=\"type\" placeholder=\"Enter type\" value={this.state.type || \"\"} onChange={this.handleChange} >\r\n                                    <option>Mentor</option>\r\n                                    <option>Coach</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Mentor Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"previewVideoUrl\">Preview Video</Label>\r\n                        <Input type=\"text\" name=\"previewVideoUrl\" id=\"previewVideoUrl\" placeholder=\"Enter url for preview video\" value={this.state.previewVideoUrl || \"\"} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Enter description\" value={this.state.description || \"\"} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"mt-3\">\r\n                        <Label for=\"bio\">Bio</Label>\r\n                        <Input type=\"textarea\" rows=\"5\" name=\"bio\" id=\"bio\" placeholder=\"Enter bio\" value={this.state.bio || \"\"} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    {/* {this.renderTags()} */}\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MentorEditor;","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, Button, CardImg } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from '../../reduxStore/store'\r\n\r\n\r\nclass WhatsNewCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if(this.props.data.imageId){\r\n            axios.get(store.getState().storageUrl + \"/news/\" + this.props.data.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                this.setState({ image: image });\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardImg src={this.state.image}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle style={{textAlign:\"left\"}}>{this.props.data.title}</CardTitle>\r\n                        <CardText style={{textAlign:\"left\"}}>{this.props.data.body}</CardText>\r\n                        <Link to={{\r\n                            pathname: \"whatsnew/edit\",\r\n                            state: { whatsNew: this.props.data }\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WhatsNewCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport WhatsNewCard from './WhatsNewCard';\r\n\r\n\r\nclass WhatsNewList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            whatsNews: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/news\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    this.setState({ whatsNews: res.data.whatsNews });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.whatsNews != null && this.state.whatsNews !== undefined) {\r\n            c = this.state.whatsNews.map((whatsNew) => {\r\n                return (\r\n                    <Col lg=\"3\" key={whatsNew._id}>\r\n                        <WhatsNewCard data={whatsNew} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"whatsnew/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New WhatsNew</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Whats New!</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WhatsNewList","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\n\r\nclass WhatsNewEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\"\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data.whatsNew);\r\n                        this.setState(res.data.whatsNew);\r\n                        if (this.props.state.location.state.whatsNew.imageId) {\r\n                            axios.get(store.getState().storageUrl + \"/news/\" + this.props.state.location.state.whatsNew.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                var image = \"data:\" + res.headers[\"content-type\"] + \";base64,\" + res.data;\r\n                                this.setState({ image: image });\r\n                            });\r\n                        }\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/whatsnew\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ isLoading: true });\r\n        var whatsNewObject = {};\r\n        whatsNewObject.title = this.state.title;\r\n        whatsNewObject.body = this.state.body;\r\n        whatsNewObject.imageId = this.state.imageId;\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file) {\r\n                    formData.append(\"whatsNewImage\", this.state.file);\r\n                    axios.put(store.getState().storageUrl + \"/news/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            whatsNewObject.imageId = res.data.imageId;\r\n                            axios.put(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, whatsNewObject, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\", isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    axios.put(store.getState().apiUrl + \"/news/\" + this.props.state.location.state.whatsNew._id, whatsNewObject, {\r\n                        headers: { auth: store.getState().auth }\r\n                    }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ success: true, isLoading: false });\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                formData.append(\"whatsNewImage\", this.state.file);\r\n                axios.post(store.getState().storageUrl + \"/news\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    if (res.data.status) {\r\n                        whatsNewObject.imageId = res.data.imageId;\r\n                        axios.post(store.getState().apiUrl + \"/news\", whatsNewObject, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\", isLoading: false });\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().apiUrl + \"/news/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ isLoading: false, success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: res.data.message });\r\n                        }\r\n                    }).catch((err) => {\r\n                        this.setState({ apiError: err });\r\n                    })\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create Whats New!</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Enter Title for whats new\" value={this.state.title || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"5\" style={{ marginLeft: \"auto\" }}>\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"type\">Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"description\">Description</Label>\r\n                                <Input type=\"text\" name=\"description\" id=\"description\" value={this.state.description || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"mt-3\">\r\n                                <Label for=\"body\">Body</Label>\r\n                                <Input type=\"textarea\" rows=\"5\" name=\"body\" id=\"body\" placeholder=\"Enter the content\" value={this.state.body || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WhatsNewEditor;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Card, CardTitle, CardBody, Row, Col, Alert, Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass AddAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            privilege: \"admin\",\r\n            apiError: \"\",\r\n            apiResponse:\"\",\r\n            isLoading: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirect = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/admin\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderApiResponse = () => {\r\n        if (this.state.apiResponse !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"success\">{this.state.apiResponse}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(this.state);\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({apiError:\"\", apiResponse: \"\", isLoading: true});\r\n        var adminObject = { email: this.state.email, privilege: this.state.privilege } ;\r\n        axios.post(store.getState().apiUrl + \"/admins\", adminObject, {headers: {auth: store.getState().auth}}).then((res) => {\r\n            if(res.data.status){\r\n                this.setState({apiResponse: \"Admin added successfully\", isLoading: false});\r\n            }\r\n            else{\r\n                this.setState({apiError: \"could not add: \" + res.data.message, isLoading: false});\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                        <Card>\r\n                            <CardTitle></CardTitle>\r\n                            <CardBody>\r\n                                <div>\r\n                                    <h2>Add new Admin</h2>\r\n                                    <Form className=\"m-3\">\r\n                                        <FormGroup row>\r\n                                            <Label for=\"email\">Email</Label>\r\n                                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email of the user\" onChange={this.handleChange} />\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"privilege\">Privilege</Label>\r\n                                            <Input type=\"select\" name=\"privilege\" id=\"privilege\" placeholder=\"Enter privilege given to the user\" onChange={this.handleChange} >\r\n                                                <option>admin</option>\r\n                                                <option>editor</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        <Button color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                                    </Form>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"col-lg-3\"></Col>\r\n                </Row>\r\n                {this.redirect()}\r\n                {this.renderError()}\r\n                {this.renderApiResponse()}\r\n                {this.renderSpinner()}\r\n                {this.checkLogin()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddAdmin;","import React from 'react';\r\nimport { Container, Row, Input, Button, Alert, Spinner, Table } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\n\r\n\r\nclass AdminList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            admins: [],\r\n            apiError: \"\",\r\n            apiResponse:\"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/admins\", { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                if (res.data.status) {\r\n                    var admins = [];\r\n                    for (let admin in res.data.admins) {\r\n                        let adminObject = res.data.admins[admin];\r\n                        await axios.get(store.getState().apiUrl + \"/admins/\" + res.data.admins[admin].uid, {headers: {auth: store.getState().auth}}).then((response)=>{\r\n                            adminObject.name = response.data.admin.name;\r\n                            adminObject.email = response.data.admin.email;\r\n                            adminObject.phone = response.data.admin.phone;\r\n                            adminObject.changedPrivilege = adminObject.privileges;\r\n                        })\r\n                        admins.push(adminObject);\r\n                    }\r\n                    this.setState({ admins: admins, isLoading: false });\r\n                }\r\n                else {\r\n                    this.setState({ apiError: res.data.message });\r\n                    this.setState({ isLoading: false });\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderApiResponse = () => {\r\n        if (this.state.apiResponse !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"success\">{this.state.apiResponse}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.admins != null && this.state.admins !== undefined) {\r\n            c = this.state.admins.map((admin, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{admin.name}</td>\r\n                        <td>{admin.email}</td>\r\n                        <td>{admin.phone}</td>\r\n                        <td>{admin.privileges}</td>\r\n                        <td>\r\n                            <Input type=\"select\" name=\"privilege\" id=\"privilege\" placeholder=\"Enter privilege given to the user\" value={admin.changedPrivilege} onChange={(event) => {\r\n                                var administrators = this.state.admins;\r\n                                administrators[index].changedPrivilege = event.target.value;\r\n                                this.setState({ admins: administrators });\r\n                            }} >\r\n                                <option>admin</option>\r\n                                <option>editor</option>\r\n                            </Input>\r\n                        </td>\r\n                        <td><Button color=\"danger\" className=\"fa fa-trash\" onClick={() => {\r\n                            this.setState({ isLoading: true, apiError: \"\", apiResponse: \"\" });\r\n                            axios.delete(store.getState().apiUrl + \"/admins/\" + admin.uid, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                console.log(res.data);\r\n                                if (res.data.status) {\r\n                                    var admins = this.state.admins;\r\n                                    admins.splice(index, 1);\r\n                                    this.setState({ isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: true, apiError: \"could not delete: \" + res.data.message });\r\n                                }\r\n                            });\r\n                        }}></Button>\r\n                            <Button color=\"primary\" className=\"fa fa-edit ml-2\" onClick={() => {\r\n                                this.setState({ isLoading: true, apiError: \"\", apiResponse: \"\" });\r\n                                axios.put(store.getState().apiUrl + \"/admins/\" + admin.uid, { privilege: this.state.admins[index].changedPrivilege }, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        var admins = this.state.admins;\r\n                                        admins[index].privileges = admins[index].changedPrivilege;\r\n                                        this.setState({admins: admins});\r\n                                        this.setState({apiResponse: \"Successfully changed\", isLoading: false});\r\n                                    }\r\n                                    else{\r\n                                        this.setState({apiError: \"Could not change privilege: \" + res.data.message, isLoading: false});\r\n                                    }\r\n                                });\r\n                            }}></Button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"admin/new\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Admin</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Administrators</h1>\r\n                    <Row className=\"mt-3\">\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SL no.</th>\r\n                                    <th>Name</th>\r\n                                    <th>email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Privileges</th>\r\n                                    <th>Change Privileges</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {c}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row>\r\n                    {this.renderError()}\r\n                    {this.renderApiResponse()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AdminList","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass BlogCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.title}</CardTitle>\r\n                        <Link to={{\r\n                            pathname: \"blog/edit\",\r\n                            state: { blog: this.props.data}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BlogCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport BlogCard from './BlogCard';\r\n\r\n\r\n\r\n\r\nclass BlogList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            blogs: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/blog\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    console.log(res.data)\r\n                    this.setState({ blogs: res.data.blog });\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.blogs != null && this.state.blogs !== undefined) {\r\n            c = this.state.blogs.map((blog) => {\r\n                return (\r\n                    <Col lg=\"3\" key={blog._id}>\r\n                        < BlogCard data={blog} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"blog/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Blog</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Blogs</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogList;","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner, Card, CardBody } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport ImageRenderer from '../elements/ImageRenderer';\r\n\r\nclass BlogEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            showMeta: false,\r\n            meta: {},\r\n            category: \"NewUpdates\",\r\n            body: [],\r\n            newText: \"\",\r\n            images: []\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/blog/\" + this.props.state.location.state.blog._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(res.data.blog);\r\n                        this.setState(res.data.blog);\r\n                        console.log(res.data.blog.body)\r\n                        axios.get(store.getState().storageUrl + \"/blog/\" + this.props.state.location.state.blog.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                            this.setState({ image: res.data.url });\r\n                        })\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/blog\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file != null) {\r\n                    formData.append('blogImage', this.state.file);\r\n                    await axios.put(store.getState().storageUrl + \"/blog/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                axios.put(store.getState().apiUrl + \"/blog/\" + this.props.state.location.state.blog._id, this.state, {\r\n                                    headers: { auth: store.getState().auth }\r\n                                }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ success: true, isLoading: false });\r\n                                    }\r\n                                    else {\r\n                                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (res.data.message === \"file not found\") {\r\n                            await axios.post(store.getState().storageUrl + \"/blog\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                console.log(res.data);\r\n                                if (res.data.status) {\r\n                                    this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                        axios.put(store.getState().apiUrl + \"/blog/\" + this.props.state.location.state.blog._id, this.state, {\r\n                                            headers: { auth: store.getState().auth }\r\n                                        }).then((res) => {\r\n                                            if (res.data.status) {\r\n                                                this.setState({ success: true, isLoading: false });\r\n                                            }\r\n                                            else {\r\n                                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"could not upload image\" });\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\" });\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({ image: undefined }, () => {\r\n                        axios.put(store.getState().apiUrl + \"/blog/\" + this.props.state.location.state.blog._id, this.state, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                }\r\n\r\n\r\n            }\r\n            else {\r\n                formData.append('blogImage', this.state.file);\r\n                await axios.post(store.getState().storageUrl + \"/blog\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                            axios.post(store.getState().apiUrl + \"/blog\", this.state, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\" });\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().storageUrl + \"/blog/\" + this.state.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            axios.delete(store.getState().apiUrl + \"/blog/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ isLoading: false, success: true });\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: false, apiError: res.data.message });\r\n                                }\r\n                            }).catch((err) => {\r\n                                this.setState({ apiError: err });\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: \"could not delete image\" + res.data.message });\r\n                        }\r\n                    });\r\n\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    onMetaChange = (event) => {\r\n        var meta = this.state.meta;\r\n        meta[event.target.name] = event.target.value;\r\n        this.setState({ meta: meta });\r\n    }\r\n\r\n    renderMeta = () => {\r\n        if (this.state.showMeta) {\r\n            return (\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <FormGroup className=\"m-2\" row>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.meta.title || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <FormGroup className=\"m-2\" row>\r\n                            <Label for=\"image\">Image</Label>\r\n                            <Input type=\"text\" name=\"image\" id=\"image\" value={this.state.meta.image || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\">\r\n                        <FormGroup className=\"m-2\" row>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" value={this.state.meta.description || \"\"} onChange={this.onMetaChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderBody = () => {\r\n        if (typeof this.state.body === \"string\") {\r\n            return (\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={this.state.body}\r\n                    onInit={editor => {\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        this.setState({ body: data });\r\n                    }}\r\n                    onBlur={(event, editor) => {\r\n                    }}\r\n                    onFocus={(event, editor) => {\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        var c = this.state.body.map((item, index) => {\r\n            if (item.type === \"text\") {\r\n                return (\r\n                    <Row key={index}>\r\n                        <Col lg=\"10\">\r\n                            <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={item.content}\r\n                                onInit={editor => {\r\n                                }}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    var body = this.state.body;\r\n                                    body[index].content = data;\r\n                                    this.setState({ body: body });\r\n                                }}\r\n                                onBlur={(event, editor) => {\r\n                                }}\r\n                                onFocus={(event, editor) => {\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <Button style={{ textAlign: \"center\" }} color=\"danger\" className=\"fa fa-trash\" onClick={(event) => {\r\n                                var body = this.state.body;\r\n                                body.splice(index, 1);\r\n                                this.setState({ body: body })\r\n                            }}></Button>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            else if (item.type === \"image\") {\r\n                return (\r\n                    <Row key={index}>\r\n                        <Col lg=\"10\">\r\n                            <ImageRenderer parameter=\"blog\" imageId={item.content}></ImageRenderer>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <Button className=\"m-2 fa fa-trash\" color=\"danger\" onClick={(event) => {\r\n                                var body = this.state.body;\r\n                                var imageid = this.state.body[index].content;\r\n                                if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                                    body.splice(index, 1);\r\n                                    axios.put(store.getState().apiUrl + \"/blog/\" + this.state._id, { body: this.state.body }, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        if (res.data.status) {\r\n                                            axios.delete(store.getState().storageUrl + \"/blog/\" + imageid, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                                this.setState({ isLoading: false });\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            this.setState({ apiError: res.data.message, isLoading: false, body: body })\r\n                                        }\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    body.splice(index, 1);\r\n                                    axios.delete(store.getState().storageUrl + \"/blog/\" + imageid, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        this.setState({ isLoading: false });\r\n                                    });\r\n                                }\r\n                            }}></Button>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            else {\r\n                return (<div></div>)\r\n            }\r\n        });\r\n        return c;\r\n    }\r\n\r\n    renderEditor = () => {\r\n        if (typeof this.state.body !== \"string\" && this.state.currentEditor === \"text\") {\r\n            return (\r\n                <div>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={this.state.newText}\r\n                        onInit={editor => {\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                            const data = editor.getData();\r\n                            this.setState({ newText: data });\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                        }}\r\n                    />\r\n                    <Button className=\"m-2\" color=\"primary\" onClick={(event) => {\r\n                        var obj = {\r\n                            type: \"text\",\r\n                            content: this.state.newText\r\n                        }\r\n                        var body = this.state.body;\r\n                        body.push(obj);\r\n                        this.setState({ body: body, currentEditor: \"\", newText: \"\" });\r\n                    }}>Add</Button>\r\n                </div>\r\n            );\r\n        }\r\n        else if (typeof this.state.body !== \"string\" && this.state.currentEditor === \"image\") {\r\n            return (\r\n                <div>\r\n                    <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image2} alt=\"\"></img>\r\n                    <FormGroup row className=\"m-2\">\r\n                        <Label for=\"blogFile\">image</Label>\r\n                        <Input type=\"file\" name=\"blogFile\" id=\"blogFile\" onChange={(event => {\r\n                            if (event.target.files && event.target.files[0]) {\r\n                                this.setState({ blogFile: event.target.files[0] });\r\n                                let reader = new FileReader();\r\n                                reader.onload = (e) => {\r\n                                    this.setState({ image2: e.target.result });\r\n                                };\r\n                                reader.readAsDataURL(event.target.files[0]);\r\n                            }\r\n                        })} />\r\n                    </FormGroup>\r\n                    <Button color=\"primary\" className=\"m-2\" onClick={(event) => {\r\n                        this.setState({ isLoading: true });\r\n                        var formData = new FormData();\r\n                        formData.append(\"blogImage\", this.state.blogFile);\r\n                        axios.post(store.getState().storageUrl + \"/blog\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                            if (res.data.status) {\r\n                                var obj = {\r\n                                    type: \"image\",\r\n                                    content: res.data.imageId\r\n                                }\r\n                                var body = this.state.body;\r\n                                body.push(obj);\r\n                                this.setState({ body: body });\r\n                                this.setState({ currentEditor: \"\", blogImage: undefined, image2: undefined });\r\n                                if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                                    axios.put(store.getState().apiUrl + \"/blog/\" + this.state._id, { body: this.state.body }, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                        if (!res.data.status) {\r\n                                            this.setState({ apiError: res.data.message, isLoading: false });\r\n                                        }\r\n                                        else {\r\n                                            this.setState({ isLoading: false });\r\n                                        }\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    this.setState({ isLoading: false });\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message });\r\n                                this.setState({ isLoading: false });\r\n                            }\r\n                            console.log(this.state);\r\n                        })\r\n                    }}>Add</Button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Blog</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"5\" >\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Enter title\" value={this.state.title || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"5\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"author\">Author</Label>\r\n                                <Input type=\"text\" name=\"author\" id=\"author\" placeholder=\"Enter author name\" value={this.state.author || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"category\">Category</Label>\r\n                                <Input type=\"select\" name=\"category\" id=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                                    <option>NewUpdates</option>\r\n                                    <option>Opportunities</option>\r\n                                    <option>Interviews</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"8\" >\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"description\">Description</Label>\r\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" value={this.state.description || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"type\">Blog Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"m-2\">\r\n                        <h5>Body</h5>\r\n                        <Card>\r\n                            <CardBody>\r\n                                {this.renderBody()}\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Button className=\"m-2\" onClick={(event) => {\r\n                            this.setState({ currentEditor: \"text\" });\r\n                        }} >Add text </Button>\r\n                        <Button color=\"primary\" className=\"m-2\" onClick={(event) => {\r\n                            this.setState({ currentEditor: \"image\" });\r\n                        }} > Add Image </Button>\r\n                        {this.renderEditor()}\r\n                    </div>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"showMeta\" id=\"showMeta\" onChange={(event) => { this.setState({ showMeta: event.target.checked }) }}></Input>\r\n                        <Label for=\"other\">Show meta tags</Label>\r\n                    </FormGroup>\r\n                    <Row>\r\n                        <Col lg=\"3\"></Col>\r\n                        <Col lg=\"6\">\r\n                            {this.renderMeta()}\r\n\r\n                        </Col>\r\n                        <Col lg=\"3\"></Col>\r\n                    </Row>\r\n                    {/* {this.renderTags()} */}\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BlogEditor;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TeamCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.data.name}</CardTitle>\r\n                        <CardSubtitle>{this.props.data.role}</CardSubtitle>\r\n                        <Link to={{\r\n                            pathname: \"team/edit\",\r\n                            state: { team: this.props.data}\r\n                        }}>\r\n                            <Button>View</Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TeamCard;","import React from 'react';\r\nimport { Container, Row, Col, Button, Alert, Spinner } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\";\r\nimport TeamCard from './TeamCard';\r\n\r\nclass TeamList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            team: [],\r\n            apiError: \"\",\r\n            isLoading: true\r\n        }\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.apiError !== \"\"){\r\n            return(\r\n            <Alert color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (store.getState().auth !== undefined) {\r\n            await axios.get(store.getState().apiUrl + \"/team\", { headers: { auth: store.getState().auth } }).then((res) => {\r\n                if (res.data.status) {\r\n                    console.log(res.data)\r\n                    this.setState({ team: res.data.team });\r\n                    this.setState({isLoading:false});\r\n                }\r\n                else{\r\n                    this.setState({apiError: res.data.message});\r\n                    this.setState({isLoading:false});\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var c;\r\n        if (this.state.team != null && this.state.team !== undefined) {\r\n            c = this.state.team.map((team) => {\r\n                return (\r\n                    <Col lg=\"3\" key={team._id}>\r\n                        < TeamCard data={team} />\r\n                    </Col>\r\n\r\n                );\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Link style={{ marginLeft: \"auto\" }} to={{\r\n                        pathname: \"team/edit\",\r\n                        state: \"new\"\r\n                    }}>\r\n                        <Button className=\"mt-2 mr-4\" color=\"primary\" >Create New Member</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Container className=\"mt-2\">\r\n                    <h1 style={{ margin: \"auto\" }} >Team</h1>\r\n                    <Row className=\"mt-3\">\r\n                        {c}\r\n                    </Row>\r\n                    {this.renderError()}\r\n                </Container>\r\n                {this.checkLogin()}\r\n                {this.renderSpinner()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TeamList;","import React from 'react';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Label, Input, Alert, Spinner } from 'reactstrap';\r\nimport { Redirect } from \"react-router\";\r\nimport axios from 'axios';\r\nimport store from \"../../reduxStore/store\"\r\nclass TeamEditor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            apiError: \"\",\r\n            teamType: \"Mentors\"\r\n        };\r\n        this.renderDeleteButton = this.renderDeleteButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            if (store.getState().auth !== undefined) {\r\n                this.setState({ isLoading: true });\r\n                await axios.get(store.getState().apiUrl + \"/team/\" + this.props.state.location.state.team._id, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                    if (res.data.status) {\r\n                        console.log(\"storage call\");\r\n                        this.setState(res.data.team);\r\n                        axios.get(store.getState().storageUrl + \"/team/\" + this.props.state.location.state.team.imageId, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                            this.setState({ image: res.data.url });\r\n                        })\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if (this.state.apiError !== \"\") {\r\n            return (\r\n                <Alert className=\"mt-3\" color=\"danger\">{this.state.apiError}</Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSpinner = () => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner color=\"primary\"></Spinner>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkLogin = () => {\r\n        if (store.getState().auth === undefined) {\r\n            return (\r\n                <Redirect to=\"/login\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    redirectToMentors = () => {\r\n        if (this.state.success) {\r\n            return (\r\n                <Redirect to=\"/team\"></Redirect>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <p></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleFile = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ file: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ image: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        // Details of the uploaded file \r\n        if (store.getState().auth !== undefined) {\r\n            var formData = new FormData();\r\n            if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n                if (this.state.file != null) {\r\n                    formData.append('teamImage', this.state.file);\r\n                    await axios.put(store.getState().storageUrl + \"/team/\" + this.state.imageId, formData, { headers: { auth: store.getState().auth } }).then(async (res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                axios.put(store.getState().apiUrl + \"/team/\" + this.props.state.location.state.team._id, this.state, {\r\n                                    headers: { auth: store.getState().auth }\r\n                                }).then((res) => {\r\n                                    if (res.data.status) {\r\n                                        this.setState({ success: true, isLoading: false });\r\n                                    }\r\n                                    else {\r\n                                        this.setState({ apiError: res.data.message, isLoading: false });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (res.data.message === \"file not found\") {\r\n                            await axios.post(store.getState().storageUrl + \"/team\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                                console.log(res.data);\r\n                                if (res.data.status) {\r\n                                    this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                                        axios.put(store.getState().apiUrl + \"/team/\" + this.props.state.location.state.team._id, this.state, {\r\n                                            headers: { auth: store.getState().auth }\r\n                                        }).then((res) => {\r\n                                            if (res.data.status) {\r\n                                                this.setState({ success: true, isLoading: false });\r\n                                            }\r\n                                            else {\r\n                                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: \"could not upload image\" });\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                        else {\r\n                            this.setState({ apiError: \"could not upload image\" });\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({ image: undefined }, () => {\r\n                        axios.put(store.getState().apiUrl + \"/team/\" + this.props.state.location.state.team._id, this.state, {\r\n                            headers: { auth: store.getState().auth }\r\n                        }).then((res) => {\r\n                            if (res.data.status) {\r\n                                this.setState({ success: true, isLoading: false });\r\n                            }\r\n                            else {\r\n                                this.setState({ apiError: res.data.message, isLoading: false });\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                }\r\n\r\n\r\n            }\r\n            else {\r\n                formData.append('teamImage', this.state.file);\r\n                await axios.post(store.getState().storageUrl + \"/team\", formData, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status) {\r\n                        this.setState({ imageId: res.data.imageId, file: undefined, image: undefined }, () => {\r\n                            axios.post(store.getState().apiUrl + \"/team\", this.state, {\r\n                                headers: { auth: store.getState().auth }\r\n                            }).then((res) => {\r\n                                if (res.data.status) {\r\n                                    this.setState({ success: true, isLoading: false });\r\n                                }\r\n                                else {\r\n                                    this.setState({ apiError: res.data.message, isLoading: false });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ apiError: \"could not upload image\" });\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderDeleteButton = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state !== \"new\") {\r\n            return (\r\n                <Button className=\"m-3\" color=\"danger\" onClick={() => {\r\n                    this.setState({ isLoading: true });\r\n                    axios.delete(store.getState().apiUrl + \"/team/\" + this.state._id, { headers: { auth: store.getState().auth } }).then((res) => {\r\n                        if (res.data.status) {\r\n                            this.setState({ isLoading: false, success: true });\r\n                        }\r\n                        else {\r\n                            this.setState({ isLoading: false, apiError: res.data.message });\r\n                        }\r\n                    }).catch((err) => {\r\n                        this.setState({ apiError: err });\r\n                    });\r\n                }}>Delete</Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    onTagChange = (event) => {\r\n        var tags = this.state.tags;\r\n        tags[event.target.name] = event.target.checked;\r\n        this.setState({ tags: tags }, () => {\r\n            console.log(this.state.tags);\r\n        });\r\n    }\r\n\r\n    renderTags = () => {\r\n        if (this.props.state.location !== null && this.props.state.location.state === \"new\") {\r\n            return (\r\n                <div>\r\n                    <h3 style={{ textAlign: \"left\" }}>Tags</h3>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"whatsNew\" id=\"whatsNew\" value={this.state.tags.whatsNew || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"whatsNew\">Whats new</Label>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"ml-4\" row>\r\n                        <Input type=\"checkbox\" name=\"other\" id=\"other\" value={this.state.tags.other || \"\"} onChange={this.onTagChange}></Input>\r\n                        <Label for=\"other\">Other</Label>\r\n                    </FormGroup>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Create New Member</h1>\r\n                <img style={{ maxHeight: \"300px\", maxWidth: \"400px\" }} src={this.state.image} alt=\"\"></img>\r\n                <Form className=\"m-3\">\r\n                    <Row>\r\n                        <Col lg=\"4\" >\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter name\" value={this.state.name || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"role\">Role</Label>\r\n                                <Input type=\"text\" name=\"role\" id=\"role\" placeholder=\"Enter role\" value={this.state.role || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"teamType\">Team</Label>\r\n                                <Input type=\"select\" name=\"teamType\" id=\"teamType\" value={this.state.teamType} onChange={this.handleChange} >\r\n                                    <option>Operations Team</option>\r\n                                    <option>The leads</option>\r\n                                    <option>Mentors</option>\r\n                                    <option>Accounts Team</option>\r\n                                    <option>HR Team</option>\r\n                                    <option>Academics Team</option>\r\n                                    <option>Coaches</option>\r\n                                    <option>Engineering Team</option>\r\n                                    <option>Outreach Team</option>\r\n                                    <option>Social Media Team</option>\r\n                                    <option>Design Team</option>\r\n                                    <option>Administration Team</option>\r\n                                    <option>Multimedia Team</option>\r\n                                    <option>Research Team</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"8\" >\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"description\">Description</Label>\r\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" value={this.state.description || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"file\">Member Image</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"linkedIn\">linkedIn</Label>\r\n                                <Input type=\"text\" name=\"linkedIn\" id=\"linkedIn\" value={this.state.linkedIn || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"instagram\">Instagram</Label>\r\n                                <Input type=\"text\" name=\"instagram\" id=\"instagram\" value={this.state.instagram || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"blog\">Blog</Label>\r\n                                <Input type=\"text\" name=\"blog\" id=\"blog\" value={this.state.blog || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <FormGroup row className=\"m-2\">\r\n                                <Label for=\"bio\">Bio</Label>\r\n                                <Input type=\"textarea\" rows=\"7\" name=\"bio\" id=\"bio\" value={this.state.bio || \"\"} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {/* {this.renderTags()} */}\r\n                    {this.renderDeleteButton()}\r\n\r\n                    <Button className=\"m-3\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                    <br />\r\n                </Form>\r\n                {this.checkLogin()}\r\n                {this.redirectToMentors()}\r\n                {this.renderSpinner()}\r\n                {this.renderError()}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TeamEditor;","import React from 'react';\nimport './App.css';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Switch, Route } from \"react-router-dom\";\nimport Sidebar from './components/Sidebar';\nimport DigestList from \"./components/DigestList\";\nimport DigestEditor from \"./components/DigestEditor\";\nimport LoginForm from \"./components/LoginForm\";\nimport { connect } from \"react-redux\";\nimport QuestionCollectionList from './components/QuestionCollectionList';\nimport QuestionCollectionDetail from './components/QuestionCollectionDetail';\nimport QuestionCollectionCreate from './components/QuestionCollectionCreate';\nimport ImageStorageComponent from './components/ImageStorageComponent';\nimport CourseList from './components/CourseList';\nimport CourseEditor from './components/CourseEditor';\nimport SubModuleView from './components/SubModuleView';\nimport MentorsList from './components/mentors/MentorsList';\nimport MentorEditor from './components/mentors/MentorEditor';\nimport WhatsNewList from './components/whatsNew/WhatsNewList';\nimport WhatsNewEditor from './components/whatsNew/WhatsNewEditor';\nimport AddAdmin from './components/admin/AddAdmin';\nimport AdminList from './components/admin/AdminList';\nimport BlogList from './components/blog/BlogList';\nimport BlogEditor from './components/blog/BlogEditor';\nimport TeamList from './components/team/TeamList';\nimport TeamEditor from './components/team/TeamEditor';\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state\n  };\n}\n\nclass App extends React.Component {\n\n  renderNav = () => {\n    if (this.props.location.pathname !== \"/storage\") {\n      return (\n        <Sidebar />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderNav()}\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n            <Redirect to=\"/digest\" />\n          )} />\n          <Route exact path=\"/digest\" render={(props) => (\n            <DigestList />\n          )} />\n          <Route path=\"/digest/edit\" render={(props) => (\n            <DigestEditor state={props} />\n          )} />\n          <Route exact path=\"/login\" render={(props) => (\n            <LoginForm />\n          )} />\n          <Route exact path=\"/question\" render={(props) => (\n            <QuestionCollectionList />\n          )} />\n          <Route exact path=\"/question/view\" render={(props) => (\n            <QuestionCollectionDetail state={props} />\n          )} />\n          <Route exact path=\"/question/new\" render={(props) => (\n            <QuestionCollectionCreate state={props} />\n          )} />\n          <Route exact path=\"/storage\" render={(props) => (\n            <ImageStorageComponent />\n          )} />\n          <Route exact path=\"/course\" render={(props) => (\n            <CourseList />\n          )} />\n          <Route exact path=\"/course/edit\" render={(props) => (\n            <CourseEditor state={props} />\n          )} />\n          <Route exact path=\"/course/viewSubModule\" render={(props) => (\n            <SubModuleView state={props} />\n          )} />\n          <Route exact path=\"/mentor\" render={(props) => (\n            <MentorsList />\n          )} />\n          <Route exact path=\"/mentor/edit\" render={(props) => (\n            <MentorEditor state={props} />\n          )} />\n          <Route exact path=\"/whatsnew\" render={(props) => (\n            <WhatsNewList state={props} />\n          )} />\n          <Route exact path=\"/whatsnew/edit\" render={(props) => (\n            <WhatsNewEditor state={props} />\n          )} />\n          <Route exact path=\"/admin/new\" render={(props) => (\n            <AddAdmin state={props} />\n          )} />\n          <Route exact path=\"/admin\" render={(props) => (\n            <AdminList state={props} />\n          )} />\n          <Route exact path=\"/blog\" render={(props) => (\n            <BlogList state={props} />\n          )} />\n          <Route exact path=\"/blog/edit\" render={(props) => (\n            <BlogEditor state={props} />\n          )} />\n          <Route exact path=\"/team\" render={(props) => (\n            <TeamList state={props} />\n          )} />\n          <Route exact path=\"/team/edit\" render={(props) => (\n            <TeamEditor state={props} />\n          )} />\n         \n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'; \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}